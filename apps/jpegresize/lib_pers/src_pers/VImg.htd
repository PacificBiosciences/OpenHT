#include "PersConfig.h"

#ifdef VERT_FIXTURE

#include "JpegCommon.h"
#include "PersStructs.h"

////////////////////////////////////////

dsnInfo.AddModule(name=vimg, htIdW=0);

vimg.AddInstr(name=VIMG_ENTRY);
vimg.AddInstr(name=VIMG_FORK);
vimg.AddInstr(name=VIMG_VSM_JOIN);
vimg.AddInstr(name=VIMG_VCTL_JOIN);
vimg.AddInstr(name=VIMG_VWM_JOIN);
vimg.AddInstr(name=VIMG_VSM_CONT);
vimg.AddInstr(name=VIMG_VCTL_CONT);
vimg.AddInstr(name=VIMG_VWM_CONT);
vimg.AddInstr(name=VIMG_RETURN);

vimg.AddPrivate()
	.AddVar(type=uint8_t, name=jobId)
	.AddVar(type=ht_uint48, name=pJobInfo)
	.AddVar(type=ht_uint1, name=imageIdx)
	;

vimg.AddShared()
	.AddVar(type=ht_uint1, name=fileIdx)
        ;

vimg.AddEntry(func=htmain, instr=VIMG_ENTRY, host=true)
	.AddParam(type=uint8_t, name=jobId)
	.AddParam(hostType=uint64_t, type=ht_uint48, name=pJobInfo)
	;

vimg.AddReturn(func=htmain)
	.AddParam(type=uint8_t, name=jobId)
	;

vimg.AddCall(func=veInfo)
	;

	// vert source messages - mimics horizontal resize messages
vimg.AddCall(func=vsm, fork=true)
	;

vimg.AddCall(func=vctl, fork=true)
	;

	// vert write messages - mimics jpeg encoder but writes data to memory unencoded
vimg.AddCall(func=vwm, fork=true)
	;

////////////////////////////////////////

dsnInfo.AddModule(name=vsm, htIdW=0);

vsm.AddInstr(name=VSM_ENTRY)
	.AddInstr(name=VSM_SEND)
	.AddInstr(name=VSM_RETURN)
	;

vsm.AddEntry(func=vsm, instr=VSM_ENTRY)
	.AddParam(type=ht_uint1, name=imageIdx)
	;

vsm.AddReturn(func=vsm)
	;

vsm.AddPrivate()
	.AddVar(type=ht_uint1, name=imageIdx)
	.AddVar(type=ht_uint11, name=msgRow)
	;

vsm.AddShared()
	.AddVar(type=ht_uint11, name=mcuRows)
	.AddVar(type=ht_uint11, name=mcuCols)
	;

vsm.AddMsgIntf(dir=in, name=veInfo, type=JobInfoMsg);
vsm.AddMsgIntf(dir=out, name=hrm, type=HorzResizeMsg);

////////////////////////////////////////

dsnInfo.AddModule(name=vwm, htIdW=0);

vwm.AddInstr(name=VWM_ENTRY)
	.AddInstr(name=VWM_LOOP)
	.AddInstr(name=VWM_RETURN)
	;

vwm.AddEntry(func=vwm, instr=VWM_ENTRY)
	.AddParam(type=ht_uint1, name=imageIdx)
	;

vwm.AddReturn(func=vwm)
	;

vwm.AddPrivate()
	.AddVar(type=ht_uint1, name=imageIdx)
	;

vwm.AddShared()
	.AddVar(type=ht_uint11, name=outMcuRows)
	.AddVar(type=ht_uint11, name=mcuRowCompleteCnt)
	;

vwm.AddMsgIntf(dir=in, name=veInfo, type=JobInfoMsg);
vwm.AddMsgIntf(dir=in, name=jem, type=JpegEncMsg, queueW=5);

#endif
