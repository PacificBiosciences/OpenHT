////////////////////////////////////////////////////
// Inc Module

#define INC_HTID_W 5
#define CXR1_HTID_W 4
#define CXR1b_HT_ID_W 3
#define CXR2b_HTID_W 6
#define CXR2c_HTID_W 7
typedef sc_uint<8> ElemCnt_t;
typedef sc_uint<INC_HTID_W> IncHtId_t;

struct CData {
	uint64_t data;
};

dsnInfo.AddModule(name=inc, htIdW=INC_HTID_W);
inc.AddInstr(name=INC_INIT);
inc.AddInstr(name=INC_READ);
inc.AddInstr(name=INC_WRITE);

struct CUnion {
	uint64_t m_data0;
	struct {
		uint64_t m_data1;
	};
	struct {
		uint64_t m_data2;
	};
};

inc.AddHostMsg(dir=in, name=SU_ARRAY_ADDR)
	.AddDst(var=arrayAddr, dataLsb=0)
	;

inc.AddPrivate()
	.AddVar(type=ElemCnt_t, name=elemCnt)
	.AddVar(type=ElemCnt_t, name=loopCnt)
	.AddVar(type=IncHtId_t, name=arrayMemRdPtr)
	;

inc.AddShared()
	.AddVar(type=ht_uint48, name=arrayAddr);

inc.AddEntry(func=inc, instr=INC_INIT)
	.AddParam(type=ElemCnt_t, name=elemCnt, unused=false)
	;
inc.AddReturn(func=inc);

inc.AddCall(func=cxr1);

inc.AddReadMem()
	.AddDst(name=arrayMem, var=arrayMem.data);
inc.AddWriteMem();

inc.AddGlobal()
	.AddVar(type=CData, name=arrayMem, addr1=arrayMemRdPtr)
	;

////////////////////////////////////////////////////
// Cxr1 Module

dsnInfo.AddModule(name=cxr1, htIdW=CXR1_HTID_W);
cxr1.AddInstr(name=CXR1_0);
cxr1.AddInstr(name=CXR1_1);
cxr1.AddInstr(name=CXR1_2);

cxr1.AddHostMsg(dir=out, name=OHM_TEST_MSG);

cxr1.AddPrivate()
	.AddVar(type=uint64_t, name=trail)
	;

cxr1.AddEntry(func=htmain, instr=CXR1_0, host=true)
	.AddParam(type=uint64_t, name=trail)
	;
cxr1.AddTransfer(func=cxr1b)
	;
cxr1.AddCall(func=cxr2);

////////////////////////////////////////////////////
// Cxr1b Module

dsnInfo.AddModule(name=cxr1b, htIdW=CXR1b_HT_ID_W);
cxr1b.AddInstr(name=CXR1b_0);
cxr1b.AddInstr(name=CXR1b_1);
cxr1b.AddInstr(name=CXR1b_2);

cxr1b.AddHostMsg(dir=out, name=OHM_TEST_MSG);

cxr1b.AddPrivate()
	.AddVar(type=uint64_t, name=trail)
	;

cxr1b.AddEntry(func=cxr1b, instr=CXR1b_0)
	.AddParam(type=uint64_t, name=trail)
	;
cxr1b.AddReturn(func=htmain)
	.AddParam(type=uint64_t, name=trail)
	;
cxr1b.AddCall(func=cxr2);

////////////////////////////////////////////////////
// Cxr2 Module

dsnInfo.AddModule(name=cxr2, htIdW=3);
cxr2.AddInstr(name=CXR2_0);
cxr2.AddInstr(name=CXR2_1);
cxr2.AddInstr(name=CXR2_2);
cxr2.AddInstr(name=CXR2_3);
cxr2.AddInstr(name=CXR2_4);

cxr2.AddPrivate()
	.AddVar(type=uint8_t, name=instCnt)
	.AddVar(type=uint64_t, name=trail)
	;

cxr2.AddEntry(func=cxr2, instr=CXR2_0)
	.AddParam(type=uint8_t, name=instCnt)
	.AddParam(type=uint64_t, name=trail)
	;
cxr2.AddTransfer(func=cxr2b)
	;
cxr2.AddReturn(func=cxr2)
	.AddParam(type=uint64_t, name=trail)
	;

////////////////////////////////////////////////////
// Cxr2b Module

dsnInfo.AddModule(name=cxr2b, htIdW=CXR2b_HTID_W);
cxr2b.AddInstr(name=CXR2b_0);
cxr2b.AddInstr(name=CXR2b_1);
cxr2b.AddInstr(name=CXR2b_2);
cxr2b.AddInstr(name=CXR2b_3);
cxr2b.AddInstr(name=CXR2b_4);
cxr2b.AddInstr(name=CXR2b_5);
cxr2b.AddInstr(name=CXR2b_6);
cxr2b.AddInstr(name=CXR2b_7);
cxr2b.AddInstr(name=CXR2b_8);

cxr2b.AddPrivate()
	.AddVar(type=uint8_t, name=instCnt)
	.AddVar(type=uint64_t, name=trail)
	;

cxr2b.AddEntry(func=cxr2b, instr=CXR2b_0)
	.AddParam(type=uint8_t, name=instCnt)
	.AddParam(type=uint64_t, name=trail)
	;
cxr2b.AddTransfer(func=cxr2c)
	;
cxr2b.AddReturn(func=cxr2)
	.AddParam(type=uint64_t, name=trail)
	;

////////////////////////////////////////////////////
// Cxr2c Module

dsnInfo.AddModule(name=cxr2c, htIdW=CXR2c_HTID_W);
cxr2c.AddInstr(name=CXR2c_0);
cxr2c.AddInstr(name=CXR2c_1);
cxr2c.AddInstr(name=CXR2c_2);
cxr2c.AddInstr(name=CXR2c_3);
cxr2c.AddInstr(name=CXR2c_4);
cxr2c.AddInstr(name=CXR2c_5);
cxr2c.AddInstr(name=CXR2c_6);
cxr2c.AddInstr(name=CXR2c_7);

cxr2c.AddPrivate()
	.AddVar(type=uint8_t, name=instCnt)
	.AddVar(type=uint64_t, name=trail)
	;

cxr2c.AddEntry(func=cxr2c, instr=CXR2c_0)
	.AddParam(type=uint8_t, name=instCnt)
	.AddParam(type=uint64_t, name=trail)
	;
cxr2c.AddReturn(func=cxr2)
	.AddParam(type=uint64_t, name=trail)
	;
