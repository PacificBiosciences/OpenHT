typedef sc_uint<48> MemAddr_t;

struct test00_1_p_2_data_struct {
  struct  {
    uint8_t test00_1_p_2_data;
    union  {
      uint32_t test00_1_p_3_data[1];
      uint32_t test00_1_p_4_data[3];
      uint32_t test00_1_p_5_data;
    };
  };
  struct  {
    uint32_t test00_1_p_6_data[4];
  };
};



/////////////////////////////////////
// CTL

dsnInfo.AddModule(name=Ctl, htIdW=0);

Ctl.AddInstr(name=CTL_TEST00);
Ctl.AddInstr(name=CTL_RTN);

Ctl.AddEntry(func=main, instr=CTL_TEST00, host=true)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Ctl.AddReturn(func=main)
	;

Ctl.AddCall(func=test00);

Ctl.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	;


/////////////////////////////////////
// TEST00

#define TEST00_HTID_W 4
dsnInfo.AddModule(name=Test00, htIdW=TEST00_HTID_W);

Test00.AddInstr(name=TEST00_ENTRY);
Test00.AddInstr(name=TEST00_WR);
Test00.AddInstr(name=TEST00_ST0);
Test00.AddInstr(name=TEST00_ST1);
Test00.AddInstr(name=TEST00_LD0);
Test00.AddInstr(name=TEST00_LD1);
Test00.AddInstr(name=TEST00_CHK);
Test00.AddInstr(name=TEST00_RTN);

Test00.AddEntry(func=test00, instr=TEST00_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test00.AddReturn(func=test00)
	;

Test00.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	.AddVar(type=uint8_t, name=test00_0_p_1_data, dimen1=4)
	.AddVar(type=test00_1_p_2_data_struct, name=test00_1_p_2_data)
	;

Test00.AddShared()
	.AddVar(type=uint8_t, name=test00_0_s_0_data, dimen1=4)
	.AddVar(type=uint32_t, name=test00_1_s_7_data, dimen1=3)
	;

Test00.AddReadMem()
	.AddDst(var=test00_0_p_1_data[#], name=test00_0_p_1_data, memSrc=host)
	.AddDst(var=test00_1_s_7_data[1], name=test00_1_s_7_data, memSrc=host)
	;

Test00.AddWriteMem()
	.AddSrc(var=test00_0_s_0_data[2], name=test00_0_s_0_data, memDst=host)
	.AddSrc(type=uint32_t, memDst=host)
	;


