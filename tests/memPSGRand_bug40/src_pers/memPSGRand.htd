typedef sc_uint<48> MemAddr_t;

union test00_0_dst_u0_data_union {
  int8_t test00_0_dst_v8_data[3];
};

struct test00_0_dst_s1_data_struct {
  struct {
    uint32_t test00_0_dst_v1_data[3][3];
    int8_t test00_0_dst_v2_data[1][3];
    int8_t test00_0_dst_v3_data[1];
    uint16_t test00_0_dst_v4_data[2][2];
  };
  struct {
    int8_t test00_0_dst_v5_data[3][3];
    int16_t test00_0_dst_v6_data;
    uint32_t test00_0_dst_v7_data;
  };
  test00_0_dst_u0_data_union test00_0_dst_u0_data;
};

struct test00_0_dst_s0_data_struct {
  uint16_t test00_0_dst_v0_data;
  test00_0_dst_s1_data_struct test00_0_dst_s1_data;
};



/////////////////////////////////////
// CTL

dsnInfo.AddModule(name=Ctl, htIdW=0);

Ctl.AddInstr(name=CTL_TEST00);
Ctl.AddInstr(name=CTL_RTN);

Ctl.AddEntry(func=main, inst=CTL_TEST00, host=true)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Ctl.AddReturn(func=main)
	;

Ctl.AddCall(func=test00);

Ctl.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	;


/////////////////////////////////////
// TEST00

#define TEST00_HTID_W 0
dsnInfo.AddModule(name=Test00, htIdW=TEST00_HTID_W);

Test00.AddInstr(name=TEST00_ENTRY);
Test00.AddInstr(name=TEST00_WR);
Test00.AddInstr(name=TEST00_ST0);
Test00.AddInstr(name=TEST00_LD0);
Test00.AddInstr(name=TEST00_CHK);
Test00.AddInstr(name=TEST00_RTN);

Test00.AddEntry(func=test00, inst=TEST00_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test00.AddReturn(func=test00)
	;

Test00.AddStage(execStg=2, privWrStg=2)
	;

Test00.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	.AddVar(type=test00_0_dst_s0_data_struct, name=test00_0_dst_s0_data, addr1=test00_0_dst_s0_data_RdAddr1, dimen1=2)
	.AddVar(type=ht_uint4, name=test00_0_src_v0_data_RdAddr1)
	.AddVar(type=ht_uint4, name=test00_0_src_v0_data_RdAddr2)
	.AddVar(type=ht_uint2, name=test00_0_dst_s0_data_RdAddr1)
	;

Test00.AddGlobal()
	.AddVar(type=uint32_t, name=test00_0_src_v0_data, addr1=test00_0_src_v0_data_RdAddr1, addr2=test00_0_src_v0_data_RdAddr2, rdStg=2, wrStg=2)
	;

Test00.AddReadMem()
	.AddDst(var=test00_0_dst_s0_data[]().test00_0_dst_s1_data.test00_0_dst_v7_data, name=test00_0_dst_v7_data, memSrc=host)
	;

Test00.AddWriteMem()
	.AddSrc(type=uint32_t, memDst=host)
	;
