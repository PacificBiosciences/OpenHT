typedef sc_uint<48> MemAddr_t;

union test00_0_g_0_data_struct {
  union  {
    uint16_t test00_0_g_0_data[1];
    uint32_t test00_0_g_1_data;
    uint32_t test00_0_g_2_data;
  };
  union  {
    union  {
      uint32_t test00_0_g_3_data[3];
      struct  {
        uint16_t test00_0_g_4_data;
        uint8_t test00_0_g_5_data[4];
      };
      uint32_t test00_0_g_6_data[2];
    };
    union  {
      uint32_t test00_0_g_7_data[3];
    };
  };
};

struct test00_0_s_8_data_struct {
  uint16_t test00_0_s_8_data;
  struct  {
    struct  {
      uint16_t test00_0_s_9_data;
      uint16_t test00_0_s_10_data[3];
    };
    uint32_t test00_0_s_11_data[2];
  };
  uint32_t test00_0_s_12_data;
};



/////////////////////////////////////
// CTL

dsnInfo.AddModule(name=Ctl, htIdW=0);

Ctl.AddInstr(name=CTL_TEST00);
Ctl.AddInstr(name=CTL_RTN);

Ctl.AddEntry(func=main, inst=CTL_TEST00, host=true)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Ctl.AddReturn(func=main)
	;

Ctl.AddCall(func=test00);

Ctl.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	;


/////////////////////////////////////
// TEST00

#define TEST00_HTID_W 3
dsnInfo.AddModule(name=Test00, htIdW=TEST00_HTID_W);

Test00.AddInstr(name=TEST00_ENTRY);
Test00.AddInstr(name=TEST00_WR);
Test00.AddInstr(name=TEST00_ST0);
Test00.AddInstr(name=TEST00_LD0);
Test00.AddInstr(name=TEST00_CHK);
Test00.AddInstr(name=TEST00_RTN);

Test00.AddEntry(func=test00, inst=TEST00_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test00.AddReturn(func=test00)
	;

Test00.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	;

Test00.AddShared()
	.AddVar(type=test00_0_s_8_data_struct, name=test00_0_s_8_data)
	;

Test00.AddGlobal()
	.AddVar(type=test00_0_g_0_data_struct, name=test00_0_g_0_data)
	;

Test00.AddReadMem()
	.AddDst(var=test00_0_s_8_data.test00_0_s_10_data[#], name=test00_0_s_10_data, memSrc=host)
	;

Test00.AddWriteMem()
	.AddSrc(type=uint16_t, memDst=host)
	;


