typedef sc_uint<48> MemAddr_t;

struct test00_0_dst_s0_data_struct {
  int16_t test00_0_dst_v0_data;
  int64_t test00_0_dst_v1_data[2][2];
  uint64_t test00_0_dst_v2_data;
  uint16_t test00_0_dst_v3_data;
};

union test00_1_dst_u0_data_union {
  union {
    int64_t test00_1_dst_v0_data[3][2];
  };
  uint32_t test00_1_dst_v1_data;
};

struct test00_3_dst_s0_data_struct {
  uint64_t test00_3_dst_v0_data[3];
  uint16_t test00_3_dst_v1_data[3][1];
  int16_t test00_3_dst_v2_data;
};

struct test00_4_dst_s0_data_struct {
  uint64_t test00_4_dst_v0_data[3][2];
};


/////////////////////////////////////
// CTL

dsnInfo.AddModule(name=Ctl, htIdW=0);

Ctl.AddInstr(name=CTL_TEST00);
Ctl.AddInstr(name=CTL_RTN);

Ctl.AddEntry(func=main, inst=CTL_TEST00, host=true)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Ctl.AddReturn(func=main)
	;

Ctl.AddCall(func=test00);

Ctl.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	;


/////////////////////////////////////
// TEST00

#define TEST00_HTID_W 0
dsnInfo.AddModule(name=Test00, htIdW=TEST00_HTID_W);

Test00.AddInstr(name=TEST00_ENTRY);
Test00.AddInstr(name=TEST00_WR);
Test00.AddInstr(name=TEST00_ST0);
Test00.AddInstr(name=TEST00_ST1);
Test00.AddInstr(name=TEST00_ST2);
Test00.AddInstr(name=TEST00_ST3);
Test00.AddInstr(name=TEST00_ST4);
Test00.AddInstr(name=TEST00_LD0);
Test00.AddInstr(name=TEST00_LD1);
Test00.AddInstr(name=TEST00_LD2);
Test00.AddInstr(name=TEST00_LD3);
Test00.AddInstr(name=TEST00_LD4);
Test00.AddInstr(name=TEST00_CHK);
Test00.AddInstr(name=TEST00_RTN);

Test00.AddEntry(func=test00, inst=TEST00_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test00.AddReturn(func=test00)
	;

Test00.AddStage(execStg=3, privWrStg=3)
	;

Test00.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	.AddVar(type=test00_0_dst_s0_data_struct, name=test00_0_dst_s0_data)
	.AddVar(type=uint32_t, name=test00_2_dst_v0_data, dimen1=2)
	.AddVar(type=test00_4_dst_s0_data_struct, name=test00_4_dst_s0_data, addr1=test00_4_dst_s0_data_RdAddr1, addr2=test00_4_dst_s0_data_RdAddr2, dimen1=2)
	.AddVar(type=ht_uint3, name=test00_2_src_v0_data_RdAddr1)
	.AddVar(type=ht_uint1, name=test00_3_src_v0_data_RdAddr1)
	.AddVar(type=ht_uint2, name=test00_3_src_v0_data_RdAddr2)
	.AddVar(type=ht_uint4, name=test00_3_dst_s0_data_RdAddr1)
	.AddVar(type=ht_uint1, name=test00_3_dst_s0_data_RdAddr2)
	.AddVar(type=ht_uint1, name=test00_4_src_v0_data_RdAddr1)
	.AddVar(type=ht_uint4, name=test00_4_src_v0_data_RdAddr2)
	.AddVar(type=ht_uint1, name=test00_4_dst_s0_data_RdAddr1)
	.AddVar(type=ht_uint1, name=test00_4_dst_s0_data_RdAddr2)
	;

Test00.AddShared()
	.AddVar(type=test00_1_dst_u0_data_union, name=test00_1_dst_u0_data, dimen1=1)
	;

Test00.AddGlobal()
	.AddVar(type=int16_t, name=test00_0_src_v0_data, rdStg=1, wrStg=3)
	.AddVar(type=uint32_t, name=test00_1_src_v0_data, dimen1=1)
	.AddVar(type=uint32_t, name=test00_2_src_v0_data, addr1=test00_2_src_v0_data_RdAddr1)
	.AddVar(type=uint16_t, name=test00_3_src_v0_data, addr1=test00_3_src_v0_data_RdAddr1, addr2=test00_3_src_v0_data_RdAddr2, dimen1=1, dimen2=2)
	.AddVar(type=test00_3_dst_s0_data_struct, name=test00_3_dst_s0_data, addr1=test00_3_dst_s0_data_RdAddr1, addr2=test00_3_dst_s0_data_RdAddr2, dimen1=2, rdStg=3, wrStg=3)
	.AddVar(type=uint64_t, name=test00_4_src_v0_data, addr1=test00_4_src_v0_data_RdAddr1, addr2=test00_4_src_v0_data_RdAddr2)
	;

Test00.AddReadMem()
	.AddDst(var=test00_0_dst_s0_data.test00_0_dst_v0_data, name=test00_0_dst_v0_data, memSrc=host)
	.AddDst(var=test00_1_dst_u0_data[].test00_1_dst_v1_data, name=test00_1_dst_v1_data, memSrc=host)
	.AddDst(var=test00_2_dst_v0_data[], name=test00_2_dst_v0_data, memSrc=host)
	.AddDst(var=test00_3_dst_s0_data[].test00_3_dst_v1_data[][], name=test00_3_dst_v1_data, memSrc=host)
	.AddDst(var=test00_4_dst_s0_data[].test00_4_dst_v0_data[][], name=test00_4_dst_v0_data, memSrc=host)
	;

Test00.AddWriteMem()
	.AddSrc(type=int16_t, memDst=host)
	.AddSrc(var=test00_1_src_v0_data[0], name=test00_1_src_v0_data, memDst=host)
	.AddSrc(type=uint32_t, memDst=host)
	.AddSrc(type=uint16_t, memDst=host)
	.AddSrc(type=uint64_t, memDst=host)
	;
