typedef sc_uint<48> MemAddr_t;



/////////////////////////////////////
// CTL

dsnInfo.AddModule(name=Ctl, htIdW=0);

Ctl.AddInstr(name=CTL_TEST00);
Ctl.AddInstr(name=CTL_TEST01);
Ctl.AddInstr(name=CTL_TEST02);
Ctl.AddInstr(name=CTL_TEST03);
Ctl.AddInstr(name=CTL_TEST04);
Ctl.AddInstr(name=CTL_RTN);

Ctl.AddEntry(func=main, instr=CTL_TEST00, host=true)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Ctl.AddReturn(func=main)
	;

Ctl.AddCall(func=test00);
Ctl.AddCall(func=test01);
Ctl.AddCall(func=test02);
Ctl.AddCall(func=test03);
Ctl.AddCall(func=test04);

Ctl.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	;


/////////////////////////////////////
// TEST00

#define TEST00_HTID_W 0
dsnInfo.AddModule(name=Test00, htIdW=TEST00_HTID_W);

Test00.AddInstr(name=TEST00_ENTRY);
Test00.AddInstr(name=TEST00_WR);
Test00.AddInstr(name=TEST00_ST0);
Test00.AddInstr(name=TEST00_LD0);
Test00.AddInstr(name=TEST00_CHK);
Test00.AddInstr(name=TEST00_RTN);

Test00.AddEntry(func=test00, instr=TEST00_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test00.AddReturn(func=test00)
	;

Test00.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	.AddVar(type=uint32_t, name=test00_0_0_data, addr1=test00_0_0_data_RdAddr1, addr2=test00_0_0_data_RdAddr2)
	.AddVar(type=uint32_t, name=test00_0_1_data)
	.AddVar(type=ht_uint1, name=test00_0_0_data_RdAddr1)
	.AddVar(type=ht_uint1, name=test00_0_0_data_RdAddr2)
	;

Test00.AddReadMem()
	.AddDst(var=test00_0_1_data, name=test00_0_1_data, memSrc=host)
	;

Test00.AddWriteMem()
	.AddSrc(var=test00_0_0_data(#,#), name=test00_0_0_data, memDst=host)
	;


/////////////////////////////////////
// TEST01

#define TEST01_HTID_W 2
dsnInfo.AddModule(name=Test01, htIdW=TEST01_HTID_W);

Test01.AddInstr(name=TEST01_ENTRY);
Test01.AddInstr(name=TEST01_WR);
Test01.AddInstr(name=TEST01_ST0);
Test01.AddInstr(name=TEST01_LD0);
Test01.AddInstr(name=TEST01_CHK);
Test01.AddInstr(name=TEST01_RTN);

Test01.AddEntry(func=test01, instr=TEST01_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test01.AddReturn(func=test01)
	;

Test01.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	;

Test01.AddGlobal()
	.AddVar(type=uint32_t, name=test01_0_0_data, dimen1=2, instrRead=true, instrWrite=true)
	;

Test01.AddReadMem()
	.AddDst(var=test01_0_0_data[#], name=test01_0_0_data, memSrc=host)
	;

Test01.AddWriteMem()
	.AddSrc(type=uint32_t, memDst=host)
	;


/////////////////////////////////////
// TEST02

#define TEST02_HTID_W 3
dsnInfo.AddModule(name=Test02, htIdW=TEST02_HTID_W);

Test02.AddInstr(name=TEST02_ENTRY);
Test02.AddInstr(name=TEST02_WR);
Test02.AddInstr(name=TEST02_ST0);
Test02.AddInstr(name=TEST02_LD0);
Test02.AddInstr(name=TEST02_CHK);
Test02.AddInstr(name=TEST02_RTN);

Test02.AddEntry(func=test02, instr=TEST02_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test02.AddReturn(func=test02)
	;

Test02.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	.AddVar(type=uint16_t, name=test02_0_0_data, addr1=test02_0_0_data_RdAddr1, dimen1=1)
	.AddVar(type=ht_uint1, name=test02_0_0_data_RdAddr1)
	.AddVar(type=ht_uint2, name=test02_0_1_data_RdAddr1)
	.AddVar(type=ht_uint2, name=test02_0_1_data_RdAddr2)
	;

Test02.AddGlobal()
	.AddVar(type=uint16_t, name=test02_0_1_data, addr1=test02_0_1_data_RdAddr1, addr2=test02_0_1_data_RdAddr2, dimen1=2, instrRead=true)
	;

Test02.AddReadMem()
	.AddDst(var=test02_0_1_data[1](#,#), name=test02_0_1_data, memSrc=host)
	;

Test02.AddWriteMem()
	.AddSrc(var=test02_0_0_data[](#), name=test02_0_0_data, memDst=host)
	;


/////////////////////////////////////
// TEST03

#define TEST03_HTID_W 5
dsnInfo.AddModule(name=Test03, htIdW=TEST03_HTID_W);

Test03.AddInstr(name=TEST03_ENTRY);
Test03.AddInstr(name=TEST03_WR);
Test03.AddInstr(name=TEST03_ST0);
Test03.AddInstr(name=TEST03_LD0);
Test03.AddInstr(name=TEST03_CHK);
Test03.AddInstr(name=TEST03_RTN);

Test03.AddEntry(func=test03, instr=TEST03_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test03.AddReturn(func=test03)
	;

Test03.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	.AddVar(type=uint16_t, name=test03_0_1_data, addr1=test03_0_1_data_RdAddr1, addr2=test03_0_1_data_RdAddr2, dimen1=2)
	.AddVar(type=ht_uint2, name=test03_0_1_data_RdAddr1)
	.AddVar(type=ht_uint1, name=test03_0_1_data_RdAddr2)
	;

Test03.AddGlobal()
	.AddVar(type=uint16_t, name=test03_0_0_data, dimen1=2, instrWrite=true)
	;

Test03.AddReadMem()
	.AddDst(var=test03_0_1_data[](#,#), name=test03_0_1_data, memSrc=host)
	;

Test03.AddWriteMem()
	.AddSrc(var=test03_0_0_data[0], name=test03_0_0_data, memDst=host)
	;


/////////////////////////////////////
// TEST04

#define TEST04_HTID_W 0
dsnInfo.AddModule(name=Test04, htIdW=TEST04_HTID_W);

Test04.AddInstr(name=TEST04_ENTRY);
Test04.AddInstr(name=TEST04_WR);
Test04.AddInstr(name=TEST04_ST0);
Test04.AddInstr(name=TEST04_LD0);
Test04.AddInstr(name=TEST04_CHK);
Test04.AddInstr(name=TEST04_RTN);

Test04.AddEntry(func=test04, instr=TEST04_ENTRY)
	.AddParam(hostType=uint64_t *, type=MemAddr_t, name=memAddr)
	;

Test04.AddReturn(func=test04)
	;

Test04.AddPrivate()
	.AddVar(type=MemAddr_t, name=memAddr)
	.AddVar(type=uint32_t, name=test04_0_1_data)
	.AddVar(type=ht_uint2, name=test04_0_0_data_RdAddr1)
	;

Test04.AddGlobal()
	.AddVar(type=uint32_t, name=test04_0_0_data, addr1=test04_0_0_data_RdAddr1, instrRead=true, instrWrite=true)
	;

Test04.AddReadMem()
	.AddDst(var=test04_0_1_data, name=test04_0_1_data, memSrc=host)
	;

Test04.AddWriteMem()
	.AddSrc(type=uint32_t, memDst=host)
	;


