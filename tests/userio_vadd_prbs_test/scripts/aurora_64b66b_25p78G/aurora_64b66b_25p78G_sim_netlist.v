// Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2017.3.1 (lin64) Build 2035080 Fri Oct 20 14:20:00 MDT 2017
// Date        : Sat Nov 18 11:16:55 2017
// Host        : hwreg2.conveycomputer.com running 64-bit CentOS release 6.7 (Final)
// Command     : write_verilog -force -mode funcsim
//               /netscratch/cbaronne/PDK_LIB2/final_pdk/pdk_lib2/REVISIONS/ehcw2/ht_uio_bbox/coregen/vu7p/aurora_64b66b_25p78G/aurora_64b66b_25p78G_sim_netlist.v
// Design      : aurora_64b66b_25p78G
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xcvu7p-flvb2104-2L-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "aurora_64b66b_v11_2_2, Coregen v14.3_ip3, Number of lanes = 1, Line rate is double25.7813Gbps, Reference Clock is double161.133125MHz, Interface is Framing, Flow Control is None and is operating in DUPLEX configuration" *) 
(* NotValidForBitStream *)
module aurora_64b66b_25p78G
   (s_axi_tx_tdata,
    s_axi_tx_tlast,
    s_axi_tx_tkeep,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    m_axi_rx_tdata,
    m_axi_rx_tlast,
    m_axi_rx_tkeep,
    m_axi_rx_tvalid,
    rxp,
    rxn,
    txp,
    txn,
    refclk1_in,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    mmcm_not_locked,
    user_clk,
    sync_clk,
    reset_pb,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt_pll_lock,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_qplllock_quad1_in,
    gt_qpllrefclklost_quad1,
    gt_to_common_qpllreset_out,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_rresp,
    s_axi_rready,
    init_clk,
    link_reset_out,
    gt_powergood,
    sys_reset_out,
    bufg_gt_clr_out,
    tx_out_clk);
  input [0:63]s_axi_tx_tdata;
  input s_axi_tx_tlast;
  input [0:7]s_axi_tx_tkeep;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  output [0:63]m_axi_rx_tdata;
  output m_axi_rx_tlast;
  output [0:7]m_axi_rx_tkeep;
  output m_axi_rx_tvalid;
  input [0:0]rxp;
  input [0:0]rxn;
  output [0:0]txp;
  output [0:0]txn;
  input refclk1_in;
  output hard_err;
  output soft_err;
  output channel_up;
  output [0:0]lane_up;
  input mmcm_not_locked;
  input user_clk;
  input sync_clk;
  input reset_pb;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  output gt_pll_lock;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_qplllock_quad1_in;
  input gt_qpllrefclklost_quad1;
  output gt_to_common_qpllreset_out;
  input [31:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output s_axi_bvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  input [31:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  input init_clk;
  output link_reset_out;
  output [0:0]gt_powergood;
  output sys_reset_out;
  output bufg_gt_clr_out;
  output tx_out_clk;

  wire bufg_gt_clr_out;
  wire channel_up;
  wire gt_pll_lock;
  wire gt_qpllclk_quad1_in;
  wire gt_qplllock_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_qpllrefclklost_quad1;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire hard_err;
  wire init_clk;
  wire [0:0]lane_up;
  wire link_reset_out;
  wire [2:0]loopback;
  wire [0:63]m_axi_rx_tdata;
  wire [0:7]m_axi_rx_tkeep;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked;
  wire pma_init;
  wire power_down;
  wire refclk1_in;
  wire reset_pb;
  wire [0:0]rxn;
  wire [0:0]rxp;
  wire [31:0]s_axi_araddr;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [0:63]s_axi_tx_tdata;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire soft_err;
  wire sync_clk;
  wire sys_reset_out;
  wire tx_out_clk;
  wire [0:0]txn;
  wire [0:0]txp;
  wire user_clk;
  wire [0:0]NLW_inst_gt_powergood_UNCONNECTED;

  (* BACKWARD_COMP_MODE1 = "1'b0" *) 
  (* BACKWARD_COMP_MODE2 = "1'b0" *) 
  (* BACKWARD_COMP_MODE3 = "1'b0" *) 
  (* CC_FREQ_FACTOR = "5'b11000" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EXAMPLE_SIMULATION = "0" *) 
  (* GTY_CRC_NO_ZERO_PAD = "0" *) 
  (* INTER_CB_GAP = "5'b01001" *) 
  (* SCRAMBLER_SEED = "58'b1010101010101010101010101010101010101010101010101010101010" *) 
  (* SIM_GTXRESET_SPEEDUP = "0" *) 
  (* wait_for_fifo_wr_rst_busy_value = "6'b100000" *) 
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_core inst
       (.bufg_gt_clr_out(bufg_gt_clr_out),
        .channel_up(channel_up),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(NLW_inst_gt_powergood_UNCONNECTED[0]),
        .gt_qpllclk_quad1_in(gt_qpllclk_quad1_in),
        .gt_qplllock_quad1_in(gt_qplllock_quad1_in),
        .gt_qpllrefclk_quad1_in(gt_qpllrefclk_quad1_in),
        .gt_qpllrefclklost_quad1(gt_qpllrefclklost_quad1),
        .gt_refclk1(refclk1_in),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gt_to_common_qpllreset_out(gt_to_common_qpllreset_out),
        .hard_err(hard_err),
        .init_clk(init_clk),
        .lane_up(lane_up),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tkeep(m_axi_rx_tkeep),
        .m_axi_rx_tlast(m_axi_rx_tlast),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .mmcm_not_locked(mmcm_not_locked),
        .pma_init(pma_init),
        .power_down(power_down),
        .rxn(rxn),
        .rxp(rxp),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tkeep(s_axi_tx_tkeep),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid),
        .soft_err(soft_err),
        .sync_clk(sync_clk),
        .sys_reset_out(sys_reset_out),
        .sysreset_to_core(reset_pb),
        .tx_out_clk(tx_out_clk),
        .txn(txn),
        .txp(txp),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_AURORA_LANE" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_AURORA_LANE
   (\lane_up[0] ,
    tx_reset_i,
    enable_err_detect_i,
    D,
    \raw_data_r_reg[73] ,
    rxdatavalid_to_ll_i,
    got_cc_i,
    got_idles_i,
    soft_err_i,
    s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg,
    in0,
    hard_err_i,
    remote_ready_i,
    E,
    rx_pe_data_v_c,
    \TXDATA_IN_REG_reg[63] ,
    RX_NEG_OUT_reg,
    user_clk,
    SYSTEM_RESET_reg,
    reset_count_r0,
    \txseq_counter_i_reg[3] ,
    txdatavalid_symgen_i,
    tx_header_1_c3_out,
    GEN_SEP7_reg,
    rxdatavalid_i,
    rx_header_err_i,
    Q,
    master_do_rd_en,
    hold_reg_r_reg,
    ENABLE_ERR_DETECT_reg,
    reset_lanes_i,
    rx_lossofsync_i,
    CHANNEL_UP_RX_IF_reg,
    \TX_PE_DATA_reg[56] ,
    CHANNEL_UP_TX_IF_reg,
    GEN_SEP_reg,
    GEN_SEP_reg_0,
    \TX_PE_DATA_reg[0] );
  output \lane_up[0] ;
  output tx_reset_i;
  output enable_err_detect_i;
  output [1:0]D;
  output [73:0]\raw_data_r_reg[73] ;
  output rxdatavalid_to_ll_i;
  output got_cc_i;
  output got_idles_i;
  output soft_err_i;
  output s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg;
  output in0;
  output hard_err_i;
  output remote_ready_i;
  output [0:0]E;
  output rx_pe_data_v_c;
  output [63:0]\TXDATA_IN_REG_reg[63] ;
  input RX_NEG_OUT_reg;
  input user_clk;
  input SYSTEM_RESET_reg;
  input reset_count_r0;
  input \txseq_counter_i_reg[3] ;
  input txdatavalid_symgen_i;
  input tx_header_1_c3_out;
  input GEN_SEP7_reg;
  input rxdatavalid_i;
  input rx_header_err_i;
  input [66:0]Q;
  input master_do_rd_en;
  input hold_reg_r_reg;
  input ENABLE_ERR_DETECT_reg;
  input reset_lanes_i;
  input rx_lossofsync_i;
  input CHANNEL_UP_RX_IF_reg;
  input [13:0]\TX_PE_DATA_reg[56] ;
  input CHANNEL_UP_TX_IF_reg;
  input GEN_SEP_reg;
  input GEN_SEP_reg_0;
  input [47:0]\TX_PE_DATA_reg[0] ;

  wire CHANNEL_UP_RX_IF_reg;
  wire CHANNEL_UP_TX_IF_reg;
  wire [1:0]D;
  wire [0:0]E;
  wire ENABLE_ERR_DETECT_reg;
  wire GEN_SEP7_reg;
  wire GEN_SEP_reg;
  wire GEN_SEP_reg_0;
  wire [66:0]Q;
  wire RX_NEG_OUT_reg;
  wire SYSTEM_RESET_reg;
  wire [63:0]\TXDATA_IN_REG_reg[63] ;
  wire [47:0]\TX_PE_DATA_reg[0] ;
  wire [13:0]\TX_PE_DATA_reg[56] ;
  wire enable_err_detect_i;
  wire got_cc_i;
  wire got_idles_i;
  wire hard_err_i;
  wire hold_reg_r_reg;
  wire illegal_btf_i;
  wire in0;
  wire \lane_up[0] ;
  wire master_do_rd_en;
  wire [73:0]\raw_data_r_reg[73] ;
  wire ready_r_reg0;
  wire remote_ready_i;
  wire reset_count_r0;
  wire reset_lanes_i;
  wire rx_header_err_i;
  wire rx_lossofsync_i;
  wire rx_pe_data_v_c;
  wire rxdatavalid_i;
  wire rxdatavalid_to_ll_i;
  wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg;
  wire soft_err_i;
  wire tx_header_1_c3_out;
  wire tx_reset_i;
  wire txdatavalid_symgen_i;
  wire \txseq_counter_i_reg[3] ;
  wire user_clk;

  aurora_64b66b_25p78G_aurora_64b66b_25p78G_ERR_DETECT err_detect_i
       (.ENABLE_ERR_DETECT_reg(ENABLE_ERR_DETECT_reg),
        .Q(Q[66]),
        .SYSTEM_RESET_reg(SYSTEM_RESET_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .illegal_btf_i(illegal_btf_i),
        .master_do_rd_en(master_do_rd_en),
        .ready_r_reg0(ready_r_reg0),
        .rx_header_err_i(rx_header_err_i),
        .soft_err_i(soft_err_i),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_LANE_INIT_SM lane_init_sm_i
       (.RX_NEG_OUT_reg(RX_NEG_OUT_reg),
        .SYSTEM_RESET_reg(SYSTEM_RESET_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .in0(in0),
        .\lane_up[0] (\lane_up[0] ),
        .ready_r_reg0(ready_r_reg0),
        .reset_count_r0(reset_count_r0),
        .reset_lanes_i(reset_lanes_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rxreset_for_lanes_q_reg(tx_reset_i),
        .s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg(s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_SYM_DEC sym_dec_i
       (.CHANNEL_UP_RX_IF_reg(CHANNEL_UP_RX_IF_reg),
        .E(E),
        .Q(Q[65:0]),
        .SYSTEM_RESET_reg(SYSTEM_RESET_reg),
        .got_cc_i(got_cc_i),
        .got_idles_i(got_idles_i),
        .hold_reg_r_reg(hold_reg_r_reg),
        .illegal_btf_i(illegal_btf_i),
        .lane_up_flop_i(\lane_up[0] ),
        .\raw_data_r_reg[0] (\raw_data_r_reg[73] [0]),
        .\raw_data_r_reg[1] (\raw_data_r_reg[73] [1]),
        .\raw_data_r_reg[73] (\raw_data_r_reg[73] [73:2]),
        .remote_ready_i(remote_ready_i),
        .rx_ll_dv_r1_reg(rxdatavalid_to_ll_i),
        .rx_pe_data_v_c(rx_pe_data_v_c),
        .rxdatavalid_i(rxdatavalid_i),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_SYM_GEN sym_gen_i
       (.CHANNEL_UP_TX_IF_reg(CHANNEL_UP_TX_IF_reg),
        .D(D),
        .GEN_SEP7_reg(GEN_SEP7_reg),
        .GEN_SEP_reg(GEN_SEP_reg),
        .GEN_SEP_reg_0(GEN_SEP_reg_0),
        .\TXDATA_IN_REG_reg[63] (\TXDATA_IN_REG_reg[63] ),
        .\TX_PE_DATA_reg[0] (\TX_PE_DATA_reg[0] ),
        .\TX_PE_DATA_reg[56] (\TX_PE_DATA_reg[56] ),
        .tx_header_1_c3_out(tx_header_1_c3_out),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .\txseq_counter_i_reg[3] (\txseq_counter_i_reg[3] ),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_AXI_TO_DRP" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_AXI_TO_DRP
   (s_axi_rvalid,
    s_axi_bvalid,
    s_axi_rdata,
    Q,
    drprdy_out_reg_0,
    s_axi_awready,
    s_axi_arready,
    drpwe_in,
    drpen_in,
    s_axi_wready,
    RESET,
    init_clk,
    s_axi_awvalid,
    s_axi_arvalid,
    s_axi_wvalid,
    DRPRDY_OUT,
    s_axi_awaddr,
    s_axi_araddr,
    D,
    s_axi_wdata,
    s_axi_rready,
    s_axi_bready);
  output s_axi_rvalid;
  output s_axi_bvalid;
  output [15:0]s_axi_rdata;
  output [9:0]Q;
  output [15:0]drprdy_out_reg_0;
  output s_axi_awready;
  output s_axi_arready;
  output [0:0]drpwe_in;
  output [0:0]drpen_in;
  output s_axi_wready;
  input RESET;
  input init_clk;
  input s_axi_awvalid;
  input s_axi_arvalid;
  input s_axi_wvalid;
  input DRPRDY_OUT;
  input [9:0]s_axi_awaddr;
  input [9:0]s_axi_araddr;
  input [15:0]D;
  input [15:0]s_axi_wdata;
  input s_axi_rready;
  input s_axi_bready;

  wire \/FSM_sequential_AXI_STATE[0]_i_1_n_0 ;
  wire \/FSM_sequential_AXI_STATE[1]_i_1_n_0 ;
  wire \/FSM_sequential_AXI_STATE[2]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire [2:0]AXI_STATE;
  wire [15:0]D;
  wire DRPRDY_OUT;
  wire [9:0]Q;
  wire RESET;
  wire [9:0]drpaddr_in;
  wire \drpaddr_in[9]_i_2_n_0 ;
  wire drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire drpen_in_i_1_n_0;
  wire drprdy_out;
  wire [15:0]drprdy_out_reg_0;
  wire [0:0]drpwe_in;
  wire drpwe_in_i_1_n_0;
  wire init_clk;
  wire [9:0]p_0_in;
  wire [15:15]p_0_in__0;
  wire [9:0]p_1_in;
  wire rd_req;
  wire rd_req0;
  wire rd_req_i_1_n_0;
  wire ready_det__1;
  wire ready_det_r1__0;
  wire ready_det_r_reg_n_0;
  wire reset;
  wire [9:0]s_axi_araddr;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_arvalid_0;
  wire [9:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awready_i_1_n_0;
  wire s_axi_awready_reg_n_0;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire s_axi_bvalid_1;
  wire s_axi_bvalid_i_1_n_0;
  wire [15:0]s_axi_rdata;
  wire s_axi_rdata0;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire s_axi_rvalid_2;
  wire s_axi_rvalid_i_1_n_0;
  wire [15:0]s_axi_wdata;
  wire \s_axi_wdata_reg_n_0_[0] ;
  wire \s_axi_wdata_reg_n_0_[10] ;
  wire \s_axi_wdata_reg_n_0_[11] ;
  wire \s_axi_wdata_reg_n_0_[12] ;
  wire \s_axi_wdata_reg_n_0_[13] ;
  wire \s_axi_wdata_reg_n_0_[14] ;
  wire \s_axi_wdata_reg_n_0_[15] ;
  wire \s_axi_wdata_reg_n_0_[1] ;
  wire \s_axi_wdata_reg_n_0_[2] ;
  wire \s_axi_wdata_reg_n_0_[3] ;
  wire \s_axi_wdata_reg_n_0_[4] ;
  wire \s_axi_wdata_reg_n_0_[5] ;
  wire \s_axi_wdata_reg_n_0_[6] ;
  wire \s_axi_wdata_reg_n_0_[7] ;
  wire \s_axi_wdata_reg_n_0_[8] ;
  wire \s_axi_wdata_reg_n_0_[9] ;
  wire s_axi_wready;
  wire s_axi_wready_i_1_n_0;
  wire s_axi_wvalid;
  wire tx_done;
  wire tx_done_i_1_n_0;
  wire tx_done_r;
  wire u_rst_sync_RESET_n_1;
  wire u_rst_sync_RESET_n_3;
  wire wr_req_i_1_n_0;
  wire wr_req_reg_n_0;

  LUT5 #(
    .INIT(32'h11100010)) 
    \/FSM_sequential_AXI_STATE[0]_i_1 
       (.I0(AXI_STATE[2]),
        .I1(AXI_STATE[0]),
        .I2(s_axi_arvalid),
        .I3(AXI_STATE[1]),
        .I4(s_axi_wvalid),
        .O(\/FSM_sequential_AXI_STATE[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \/FSM_sequential_AXI_STATE[1]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(AXI_STATE[1]),
        .I3(AXI_STATE[2]),
        .I4(AXI_STATE[0]),
        .O(\/FSM_sequential_AXI_STATE[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h22226626)) 
    \/FSM_sequential_AXI_STATE[2]_i_1 
       (.I0(AXI_STATE[0]),
        .I1(AXI_STATE[2]),
        .I2(tx_done_r),
        .I3(tx_done),
        .I4(AXI_STATE[1]),
        .O(\/FSM_sequential_AXI_STATE[2]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "INIT:000,WRT1:010,WRT2:011,REDE:001,WAIT:100" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_AXI_STATE_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\/FSM_sequential_AXI_STATE[0]_i_1_n_0 ),
        .Q(AXI_STATE[0]),
        .R(reset));
  (* FSM_ENCODED_STATES = "INIT:000,WRT1:010,WRT2:011,REDE:001,WAIT:100" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_AXI_STATE_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\/FSM_sequential_AXI_STATE[1]_i_1_n_0 ),
        .Q(AXI_STATE[1]),
        .R(reset));
  (* FSM_ENCODED_STATES = "INIT:000,WRT1:010,WRT2:011,REDE:001,WAIT:100" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_AXI_STATE_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\/FSM_sequential_AXI_STATE[2]_i_1_n_0 ),
        .Q(AXI_STATE[2]),
        .R(reset));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[0]_i_1 
       (.I0(p_1_in[0]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[0]),
        .O(drpaddr_in[0]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[1]_i_1 
       (.I0(p_1_in[1]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[1]),
        .O(drpaddr_in[1]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[2]_i_1 
       (.I0(p_1_in[2]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[2]),
        .O(drpaddr_in[2]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[3]_i_1 
       (.I0(p_1_in[3]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[3]),
        .O(drpaddr_in[3]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[4]_i_1 
       (.I0(p_1_in[4]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[4]),
        .O(drpaddr_in[4]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[5]_i_1 
       (.I0(p_1_in[5]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[5]),
        .O(drpaddr_in[5]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[6]_i_1 
       (.I0(p_1_in[6]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[6]),
        .O(drpaddr_in[6]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[7]_i_1 
       (.I0(p_1_in[7]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[7]),
        .O(drpaddr_in[7]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[8]_i_1 
       (.I0(p_1_in[8]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[8]),
        .O(drpaddr_in[8]));
  LUT3 #(
    .INIT(8'h06)) 
    \drpaddr_in[9]_i_2 
       (.I0(AXI_STATE[1]),
        .I1(AXI_STATE[0]),
        .I2(AXI_STATE[2]),
        .O(\drpaddr_in[9]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \drpaddr_in[9]_i_3 
       (.I0(p_1_in[9]),
        .I1(AXI_STATE[1]),
        .I2(AXI_STATE[0]),
        .I3(p_0_in[9]),
        .O(drpaddr_in[9]));
  FDRE \drpaddr_in_reg[0] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[0]),
        .Q(Q[0]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[1] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[1]),
        .Q(Q[1]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[2] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[2]),
        .Q(Q[2]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[3] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[3]),
        .Q(Q[3]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[4] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[4]),
        .Q(Q[4]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[5] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[5]),
        .Q(Q[5]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[6] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[6]),
        .Q(Q[6]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[7] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[7]),
        .Q(Q[7]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[8] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[8]),
        .Q(Q[8]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[9] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in[9]),
        .Q(Q[9]),
        .R(u_rst_sync_RESET_n_1));
  LUT3 #(
    .INIT(8'h40)) 
    \drpdi_in[15]_i_1 
       (.I0(AXI_STATE[2]),
        .I1(AXI_STATE[0]),
        .I2(AXI_STATE[1]),
        .O(drpdi_in));
  FDRE \drpdi_in_reg[0] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[0] ),
        .Q(drprdy_out_reg_0[0]),
        .R(reset));
  FDRE \drpdi_in_reg[10] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[10] ),
        .Q(drprdy_out_reg_0[10]),
        .R(reset));
  FDRE \drpdi_in_reg[11] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[11] ),
        .Q(drprdy_out_reg_0[11]),
        .R(reset));
  FDRE \drpdi_in_reg[12] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[12] ),
        .Q(drprdy_out_reg_0[12]),
        .R(reset));
  FDRE \drpdi_in_reg[13] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[13] ),
        .Q(drprdy_out_reg_0[13]),
        .R(reset));
  FDRE \drpdi_in_reg[14] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[14] ),
        .Q(drprdy_out_reg_0[14]),
        .R(reset));
  FDRE \drpdi_in_reg[15] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[15] ),
        .Q(drprdy_out_reg_0[15]),
        .R(reset));
  FDRE \drpdi_in_reg[1] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[1] ),
        .Q(drprdy_out_reg_0[1]),
        .R(reset));
  FDRE \drpdi_in_reg[2] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[2] ),
        .Q(drprdy_out_reg_0[2]),
        .R(reset));
  FDRE \drpdi_in_reg[3] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[3] ),
        .Q(drprdy_out_reg_0[3]),
        .R(reset));
  FDRE \drpdi_in_reg[4] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[4] ),
        .Q(drprdy_out_reg_0[4]),
        .R(reset));
  FDRE \drpdi_in_reg[5] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[5] ),
        .Q(drprdy_out_reg_0[5]),
        .R(reset));
  FDRE \drpdi_in_reg[6] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[6] ),
        .Q(drprdy_out_reg_0[6]),
        .R(reset));
  FDRE \drpdi_in_reg[7] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[7] ),
        .Q(drprdy_out_reg_0[7]),
        .R(reset));
  FDRE \drpdi_in_reg[8] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[8] ),
        .Q(drprdy_out_reg_0[8]),
        .R(reset));
  FDRE \drpdi_in_reg[9] 
       (.C(init_clk),
        .CE(drpdi_in),
        .D(\s_axi_wdata_reg_n_0_[9] ),
        .Q(drprdy_out_reg_0[9]),
        .R(reset));
  FDRE \drpdo_out_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(drpdo_out[0]),
        .R(reset));
  FDRE \drpdo_out_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[10]),
        .Q(drpdo_out[10]),
        .R(reset));
  FDRE \drpdo_out_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[11]),
        .Q(drpdo_out[11]),
        .R(reset));
  FDRE \drpdo_out_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[12]),
        .Q(drpdo_out[12]),
        .R(reset));
  FDRE \drpdo_out_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[13]),
        .Q(drpdo_out[13]),
        .R(reset));
  FDRE \drpdo_out_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[14]),
        .Q(drpdo_out[14]),
        .R(reset));
  FDRE \drpdo_out_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[15]),
        .Q(drpdo_out[15]),
        .R(reset));
  FDRE \drpdo_out_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(drpdo_out[1]),
        .R(reset));
  FDRE \drpdo_out_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(drpdo_out[2]),
        .R(reset));
  FDRE \drpdo_out_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(drpdo_out[3]),
        .R(reset));
  FDRE \drpdo_out_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(drpdo_out[4]),
        .R(reset));
  FDRE \drpdo_out_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(drpdo_out[5]),
        .R(reset));
  FDRE \drpdo_out_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(drpdo_out[6]),
        .R(reset));
  FDRE \drpdo_out_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(drpdo_out[7]),
        .R(reset));
  FDRE \drpdo_out_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(drpdo_out[8]),
        .R(reset));
  FDRE \drpdo_out_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(drpdo_out[9]),
        .R(reset));
  LUT5 #(
    .INIT(32'h33383030)) 
    drpen_in_i_1
       (.I0(tx_done),
        .I1(AXI_STATE[2]),
        .I2(AXI_STATE[0]),
        .I3(AXI_STATE[1]),
        .I4(drpen_in),
        .O(drpen_in_i_1_n_0));
  FDRE drpen_in_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpen_in_i_1_n_0),
        .Q(drpen_in),
        .R(reset));
  FDRE drprdy_out_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(DRPRDY_OUT),
        .Q(drprdy_out),
        .R(reset));
  LUT5 #(
    .INIT(32'h33383000)) 
    drpwe_in_i_1
       (.I0(tx_done),
        .I1(AXI_STATE[2]),
        .I2(AXI_STATE[1]),
        .I3(AXI_STATE[0]),
        .I4(drpwe_in),
        .O(drpwe_in_i_1_n_0));
  FDRE drpwe_in_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpwe_in_i_1_n_0),
        .Q(drpwe_in),
        .R(reset));
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    rd_req_i_1
       (.I0(rd_req0),
        .I1(AXI_STATE[0]),
        .I2(AXI_STATE[2]),
        .I3(AXI_STATE[1]),
        .I4(rd_req),
        .O(rd_req_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h008A0000)) 
    rd_req_i_2
       (.I0(s_axi_awready_reg_n_0),
        .I1(s_axi_arvalid_0),
        .I2(s_axi_awvalid),
        .I3(ready_det_r1__0),
        .I4(s_axi_arvalid),
        .O(rd_req0));
  FDRE rd_req_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(rd_req_i_1_n_0),
        .Q(rd_req),
        .R(reset));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    ready_det_r_i_2
       (.I0(s_axi_rready),
        .I1(rd_req),
        .I2(s_axi_bready),
        .I3(wr_req_reg_n_0),
        .I4(ready_det_r_reg_n_0),
        .O(ready_det__1));
  FDRE ready_det_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_RESET_n_3),
        .Q(ready_det_r_reg_n_0),
        .R(1'b0));
  FDRE \s_axi_araddr_reg[10] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[8]),
        .Q(p_0_in[8]),
        .R(reset));
  FDRE \s_axi_araddr_reg[11] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[9]),
        .Q(p_0_in[9]),
        .R(reset));
  FDRE \s_axi_araddr_reg[2] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[0]),
        .Q(p_0_in[0]),
        .R(reset));
  FDRE \s_axi_araddr_reg[3] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[1]),
        .Q(p_0_in[1]),
        .R(reset));
  FDRE \s_axi_araddr_reg[4] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[2]),
        .Q(p_0_in[2]),
        .R(reset));
  FDRE \s_axi_araddr_reg[5] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[3]),
        .Q(p_0_in[3]),
        .R(reset));
  FDRE \s_axi_araddr_reg[6] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[4]),
        .Q(p_0_in[4]),
        .R(reset));
  FDRE \s_axi_araddr_reg[7] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[5]),
        .Q(p_0_in[5]),
        .R(reset));
  FDRE \s_axi_araddr_reg[8] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[6]),
        .Q(p_0_in[6]),
        .R(reset));
  FDRE \s_axi_araddr_reg[9] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[7]),
        .Q(p_0_in[7]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h51110000)) 
    s_axi_arready_INST_0
       (.I0(ready_det_r1__0),
        .I1(s_axi_awvalid),
        .I2(s_axi_arvalid),
        .I3(s_axi_arvalid_0),
        .I4(s_axi_awready_reg_n_0),
        .O(s_axi_arready));
  LUT3 #(
    .INIT(8'h12)) 
    s_axi_arready_INST_0_i_1
       (.I0(AXI_STATE[1]),
        .I1(AXI_STATE[2]),
        .I2(AXI_STATE[0]),
        .O(ready_det_r1__0));
  FDRE s_axi_arvalid_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_arvalid),
        .Q(s_axi_arvalid_0),
        .R(reset));
  FDRE \s_axi_awaddr_reg[10] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[8]),
        .Q(p_1_in[8]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[11] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[9]),
        .Q(p_1_in[9]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[2] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[0]),
        .Q(p_1_in[0]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[3] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[1]),
        .Q(p_1_in[1]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[4] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[2]),
        .Q(p_1_in[2]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[5] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[3]),
        .Q(p_1_in[3]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[6] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[4]),
        .Q(p_1_in[4]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[7] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[5]),
        .Q(p_1_in[5]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[8] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[6]),
        .Q(p_1_in[6]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[9] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[7]),
        .Q(p_1_in[7]),
        .R(reset));
  LUT6 #(
    .INIT(64'h0000000000ED0000)) 
    s_axi_awready_INST_0
       (.I0(AXI_STATE[1]),
        .I1(AXI_STATE[2]),
        .I2(AXI_STATE[0]),
        .I3(s_axi_arvalid),
        .I4(s_axi_awready_reg_n_0),
        .I5(s_axi_arvalid_0),
        .O(s_axi_awready));
  LUT6 #(
    .INIT(64'h1111111F11111111)) 
    s_axi_awready_i_1
       (.I0(wr_req_reg_n_0),
        .I1(rd_req),
        .I2(AXI_STATE[0]),
        .I3(AXI_STATE[2]),
        .I4(AXI_STATE[1]),
        .I5(s_axi_awready_reg_n_0),
        .O(s_axi_awready_i_1_n_0));
  FDRE s_axi_awready_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_awready_i_1_n_0),
        .Q(s_axi_awready_reg_n_0),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_bvalid_INST_0
       (.I0(s_axi_bvalid_1),
        .I1(tx_done),
        .I2(tx_done_r),
        .O(s_axi_bvalid));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_bvalid_i_1
       (.I0(tx_done_r),
        .I1(tx_done),
        .I2(s_axi_bvalid_1),
        .I3(wr_req_reg_n_0),
        .I4(drprdy_out),
        .O(s_axi_bvalid_i_1_n_0));
  FDRE s_axi_bvalid_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_1_n_0),
        .Q(s_axi_bvalid_1),
        .R(reset));
  LUT2 #(
    .INIT(4'hE)) 
    \s_axi_rdata[15]_i_2 
       (.I0(s_axi_rvalid_2),
        .I1(drprdy_out),
        .O(s_axi_rdata0));
  FDRE \s_axi_rdata_reg[0] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[0]),
        .Q(s_axi_rdata[0]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[10] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[10]),
        .Q(s_axi_rdata[10]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[11] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[11]),
        .Q(s_axi_rdata[11]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[12] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[12]),
        .Q(s_axi_rdata[12]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[13] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[13]),
        .Q(s_axi_rdata[13]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[14] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[14]),
        .Q(s_axi_rdata[14]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[15] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[15]),
        .Q(s_axi_rdata[15]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[1] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[1]),
        .Q(s_axi_rdata[1]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[2] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[2]),
        .Q(s_axi_rdata[2]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[3] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[3]),
        .Q(s_axi_rdata[3]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[4] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[4]),
        .Q(s_axi_rdata[4]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[5] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[5]),
        .Q(s_axi_rdata[5]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[6] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[6]),
        .Q(s_axi_rdata[6]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[7] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[7]),
        .Q(s_axi_rdata[7]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[8] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[8]),
        .Q(s_axi_rdata[8]),
        .R(p_0_in__0));
  FDRE \s_axi_rdata_reg[9] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out[9]),
        .Q(s_axi_rdata[9]),
        .R(p_0_in__0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_rvalid_INST_0
       (.I0(s_axi_rvalid_2),
        .I1(tx_done),
        .I2(tx_done_r),
        .O(s_axi_rvalid));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_rvalid_i_1
       (.I0(tx_done_r),
        .I1(tx_done),
        .I2(s_axi_rvalid_2),
        .I3(rd_req),
        .I4(drprdy_out),
        .O(s_axi_rvalid_i_1_n_0));
  FDRE s_axi_rvalid_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_1_n_0),
        .Q(s_axi_rvalid_2),
        .R(reset));
  FDRE \s_axi_wdata_reg[0] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[0]),
        .Q(\s_axi_wdata_reg_n_0_[0] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[10] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[10]),
        .Q(\s_axi_wdata_reg_n_0_[10] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[11] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[11]),
        .Q(\s_axi_wdata_reg_n_0_[11] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[12] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[12]),
        .Q(\s_axi_wdata_reg_n_0_[12] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[13] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[13]),
        .Q(\s_axi_wdata_reg_n_0_[13] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[14] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[14]),
        .Q(\s_axi_wdata_reg_n_0_[14] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[15] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[15]),
        .Q(\s_axi_wdata_reg_n_0_[15] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[1] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[1]),
        .Q(\s_axi_wdata_reg_n_0_[1] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[2] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[2]),
        .Q(\s_axi_wdata_reg_n_0_[2] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[3] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[3]),
        .Q(\s_axi_wdata_reg_n_0_[3] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[4] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[4]),
        .Q(\s_axi_wdata_reg_n_0_[4] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[5] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[5]),
        .Q(\s_axi_wdata_reg_n_0_[5] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[6] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[6]),
        .Q(\s_axi_wdata_reg_n_0_[6] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[7] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[7]),
        .Q(\s_axi_wdata_reg_n_0_[7] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[8] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[8]),
        .Q(\s_axi_wdata_reg_n_0_[8] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[9] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[9]),
        .Q(\s_axi_wdata_reg_n_0_[9] ),
        .R(reset));
  LUT3 #(
    .INIT(8'h10)) 
    s_axi_wready_i_1
       (.I0(AXI_STATE[0]),
        .I1(AXI_STATE[2]),
        .I2(AXI_STATE[1]),
        .O(s_axi_wready_i_1_n_0));
  FDRE s_axi_wready_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_wready_i_1_n_0),
        .Q(s_axi_wready),
        .R(reset));
  LUT3 #(
    .INIT(8'hBA)) 
    tx_done_i_1
       (.I0(drprdy_out),
        .I1(ready_det__1),
        .I2(tx_done),
        .O(tx_done_i_1_n_0));
  FDRE tx_done_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done),
        .Q(tx_done_r),
        .R(1'b0));
  FDRE tx_done_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_i_1_n_0),
        .Q(tx_done),
        .R(reset));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_4 u_rst_sync_RESET
       (.Q(s_axi_rvalid_2),
        .RESET(RESET),
        .SR(u_rst_sync_RESET_n_1),
        .drprdy_out(drprdy_out),
        .init_clk(init_clk),
        .out(AXI_STATE),
        .ready_det__1(ready_det__1),
        .ready_det_r_reg(u_rst_sync_RESET_n_3),
        .ready_det_r_reg_0(ready_det_r_reg_n_0),
        .reset(reset),
        .\s_axi_rdata_reg[0] (p_0_in__0),
        .tx_done(tx_done),
        .tx_done_r(tx_done_r));
  LUT6 #(
    .INIT(64'hFFFFFFF888888888)) 
    wr_req_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_awready),
        .I2(AXI_STATE[0]),
        .I3(AXI_STATE[2]),
        .I4(AXI_STATE[1]),
        .I5(wr_req_reg_n_0),
        .O(wr_req_i_1_n_0));
  FDRE wr_req_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(wr_req_i_1_n_0),
        .Q(wr_req_reg_n_0),
        .R(reset));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_BLOCK_SYNC_SM" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_BLOCK_SYNC_SM
   (D,
    blocksync_out_i,
    SR,
    rxusrclk_out,
    Q,
    rxheadervalid_i);
  output [0:0]D;
  output blocksync_out_i;
  input [0:0]SR;
  input rxusrclk_out;
  input [1:0]Q;
  input rxheadervalid_i;

  wire BLOCKSYNC_OUT_i_1_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_2_n_0;
  wire RXGEARBOXSLIP_OUT_i_4_n_0;
  wire RXGEARBOXSLIP_OUT_i_5_n_0;
  wire RXGEARBOXSLIP_OUT_i_6_n_0;
  wire [0:0]SR;
  wire begin_r;
  wire begin_r_i_2__0_n_0;
  wire blocksync_out_i;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_slip_c0__0;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire [15:0]p_0_in__4;
  wire [9:0]p_0_in__5;
  wire [3:1]p_1_in;
  wire rxheadervalid_i;
  wire rxusrclk_out;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_valid_r_i_2_n_0;
  wire \slip_count_i[15]_i_1_n_0 ;
  wire \slip_count_i_reg_n_0_[0] ;
  wire \slip_count_i_reg_n_0_[10] ;
  wire \slip_count_i_reg_n_0_[11] ;
  wire \slip_count_i_reg_n_0_[12] ;
  wire \slip_count_i_reg_n_0_[13] ;
  wire \slip_count_i_reg_n_0_[14] ;
  wire \slip_count_i_reg_n_0_[1] ;
  wire \slip_count_i_reg_n_0_[2] ;
  wire \slip_count_i_reg_n_0_[3] ;
  wire \slip_count_i_reg_n_0_[4] ;
  wire \slip_count_i_reg_n_0_[5] ;
  wire \slip_count_i_reg_n_0_[6] ;
  wire \slip_count_i_reg_n_0_[7] ;
  wire \slip_count_i_reg_n_0_[8] ;
  wire \slip_count_i_reg_n_0_[9] ;
  wire slip_done_i;
  wire slip_pulse_i;
  wire slip_r_i_2_n_0;
  wire sync_done_r;
  wire sync_done_r_i_3_n_0;
  wire sync_done_r_i_5_n_0;
  wire sync_done_r_i_6_n_0;
  wire sync_done_r_i_7_n_0;
  wire sync_done_r_i_8_n_0;
  wire sync_header_count_i0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire [15:0]sync_header_count_i_reg__0;
  wire \sync_header_invalid_count_i[9]_i_2_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg__0;
  wire system_reset_r;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2_n_0;
  wire [3:3]NLW_sync_header_count_i0_carry_CO_UNCONNECTED;
  wire [7:3]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_DI_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_S_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1
       (.I0(p_1_in[1]),
        .I1(system_reset_r2),
        .I2(blocksync_out_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1_n_0),
        .Q(blocksync_out_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4444444440000000)) 
    RXGEARBOXSLIP_OUT_i_1
       (.I0(p_1_in[1]),
        .I1(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I2(sh_count_equals_max_i__14),
        .I3(next_slip_c0__0),
        .I4(RXGEARBOXSLIP_OUT_i_4_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_5_n_0),
        .O(slip_pulse_i));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    RXGEARBOXSLIP_OUT_i_2
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(RXGEARBOXSLIP_OUT_i_2_n_0));
  LUT5 #(
    .INIT(32'h0800FFFF)) 
    RXGEARBOXSLIP_OUT_i_3
       (.I0(sync_done_r_i_5_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_6_n_0),
        .I2(sync_header_invalid_count_i_reg__0[3]),
        .I3(sync_header_invalid_count_i_reg__0[4]),
        .I4(blocksync_out_i),
        .O(next_slip_c0__0));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_4
       (.I0(p_1_in[3]),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .O(RXGEARBOXSLIP_OUT_i_4_n_0));
  LUT4 #(
    .INIT(16'h8F88)) 
    RXGEARBOXSLIP_OUT_i_5
       (.I0(p_1_in[2]),
        .I1(next_slip_c0__0),
        .I2(slip_done_i),
        .I3(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_6
       (.I0(sync_header_invalid_count_i_reg__0[2]),
        .I1(sync_header_invalid_count_i_reg__0[1]),
        .I2(sync_header_invalid_count_i_reg__0[0]),
        .O(RXGEARBOXSLIP_OUT_i_6_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hCCCCCCCCEEFECCCC)) 
    begin_r_i_1__0
       (.I0(p_1_in[2]),
        .I1(begin_r_i_2__0_n_0),
        .I2(p_1_in[3]),
        .I3(sh_invalid_cnt_equals_zero_i__4),
        .I4(sh_count_equals_max_i__14),
        .I5(next_slip_c0__0),
        .O(next_begin_c));
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__0
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(sync_done_r),
        .I2(p_1_in[1]),
        .I3(slip_done_i),
        .O(begin_r_i_2__0_n_0));
  FDSE begin_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_valid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  FDRE sh_invalid_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_valid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    sh_valid_r_i_2
       (.I0(sync_done_r),
        .I1(rxheadervalid_i),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .O(sh_valid_r_i_2_n_0));
  FDRE sh_valid_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1 
       (.I0(p_1_in[1]),
        .O(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(\slip_count_i_reg_n_0_[0] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[9] ),
        .Q(\slip_count_i_reg_n_0_[10] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[10] ),
        .Q(\slip_count_i_reg_n_0_[11] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[11] ),
        .Q(\slip_count_i_reg_n_0_[12] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[12] ),
        .Q(\slip_count_i_reg_n_0_[13] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[13] ),
        .Q(\slip_count_i_reg_n_0_[14] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[14] ),
        .Q(slip_done_i),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[0] ),
        .Q(\slip_count_i_reg_n_0_[1] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[1] ),
        .Q(\slip_count_i_reg_n_0_[2] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[2] ),
        .Q(\slip_count_i_reg_n_0_[3] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[3] ),
        .Q(\slip_count_i_reg_n_0_[4] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[4] ),
        .Q(\slip_count_i_reg_n_0_[5] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[5] ),
        .Q(\slip_count_i_reg_n_0_[6] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[6] ),
        .Q(\slip_count_i_reg_n_0_[7] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[7] ),
        .Q(\slip_count_i_reg_n_0_[8] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  FDRE \slip_count_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\slip_count_i_reg_n_0_[8] ),
        .Q(\slip_count_i_reg_n_0_[9] ),
        .R(\slip_count_i[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    slip_r_i_1
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_4_n_0),
        .I4(p_1_in[2]),
        .I5(slip_r_i_2_n_0),
        .O(next_slip_c));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    slip_r_i_2
       (.I0(p_1_in[1]),
        .I1(slip_done_i),
        .O(slip_r_i_2_n_0));
  FDRE slip_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1
       (.I0(sh_invalid_cnt_equals_zero_i__4),
        .I1(sync_done_r_i_3_n_0),
        .I2(sh_count_equals_max_i__14),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    sync_done_r_i_2
       (.I0(sync_header_invalid_count_i_reg__0[3]),
        .I1(sync_header_invalid_count_i_reg__0[4]),
        .I2(sync_header_invalid_count_i_reg__0[2]),
        .I3(sync_header_invalid_count_i_reg__0[1]),
        .I4(sync_header_invalid_count_i_reg__0[0]),
        .I5(sync_done_r_i_5_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_3
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    sync_done_r_i_4
       (.I0(sync_done_r_i_6_n_0),
        .I1(sync_header_count_i_reg__0[1]),
        .I2(sync_header_count_i_reg__0[0]),
        .I3(sync_header_count_i_reg__0[3]),
        .I4(sync_header_count_i_reg__0[2]),
        .I5(sync_done_r_i_7_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h00000001)) 
    sync_done_r_i_5
       (.I0(sync_header_invalid_count_i_reg__0[5]),
        .I1(sync_header_invalid_count_i_reg__0[6]),
        .I2(sync_header_invalid_count_i_reg__0[7]),
        .I3(sync_header_invalid_count_i_reg__0[9]),
        .I4(sync_header_invalid_count_i_reg__0[8]),
        .O(sync_done_r_i_5_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    sync_done_r_i_6
       (.I0(sync_header_count_i_reg__0[7]),
        .I1(sync_header_count_i_reg__0[6]),
        .I2(sync_header_count_i_reg__0[4]),
        .I3(sync_header_count_i_reg__0[5]),
        .O(sync_done_r_i_6_n_0));
  LUT5 #(
    .INIT(32'h20000000)) 
    sync_done_r_i_7
       (.I0(sync_header_count_i_reg__0[13]),
        .I1(sync_header_count_i_reg__0[12]),
        .I2(sync_header_count_i_reg__0[14]),
        .I3(sync_header_count_i_reg__0[15]),
        .I4(sync_done_r_i_8_n_0),
        .O(sync_done_r_i_7_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    sync_done_r_i_8
       (.I0(sync_header_count_i_reg__0[10]),
        .I1(sync_header_count_i_reg__0[11]),
        .I2(sync_header_count_i_reg__0[8]),
        .I3(sync_header_count_i_reg__0[9]),
        .O(sync_done_r_i_8_n_0));
  FDRE sync_done_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg__0[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,NLW_sync_header_count_i0_carry_CO_UNCONNECTED[3],sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__4[8:1]),
        .S(sync_header_count_i_reg__0[8:1]));
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[3],sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({NLW_sync_header_count_i0_carry__0_DI_UNCONNECTED[7],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__4[15:9]}),
        .S({NLW_sync_header_count_i0_carry__0_S_UNCONNECTED[7],sync_header_count_i_reg__0[15:9]}));
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1 
       (.I0(sync_header_count_i_reg__0[0]),
        .O(p_0_in__4[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(sync_header_count_i0));
  FDRE \sync_header_count_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[0]),
        .Q(sync_header_count_i_reg__0[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[10]),
        .Q(sync_header_count_i_reg__0[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[11]),
        .Q(sync_header_count_i_reg__0[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[12]),
        .Q(sync_header_count_i_reg__0[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[13]),
        .Q(sync_header_count_i_reg__0[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[14]),
        .Q(sync_header_count_i_reg__0[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[15]),
        .Q(sync_header_count_i_reg__0[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[1]),
        .Q(sync_header_count_i_reg__0[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[2]),
        .Q(sync_header_count_i_reg__0[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[3]),
        .Q(sync_header_count_i_reg__0[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[4]),
        .Q(sync_header_count_i_reg__0[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[5]),
        .Q(sync_header_count_i_reg__0[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[6]),
        .Q(sync_header_count_i_reg__0[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[7]),
        .Q(sync_header_count_i_reg__0[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[8]),
        .Q(sync_header_count_i_reg__0[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__4[9]),
        .Q(sync_header_count_i_reg__0[9]),
        .R(begin_r));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[0]),
        .O(p_0_in__5[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[0]),
        .I1(sync_header_invalid_count_i_reg__0[1]),
        .O(p_0_in__5[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[0]),
        .I1(sync_header_invalid_count_i_reg__0[1]),
        .I2(sync_header_invalid_count_i_reg__0[2]),
        .O(p_0_in__5[2]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[1]),
        .I1(sync_header_invalid_count_i_reg__0[0]),
        .I2(sync_header_invalid_count_i_reg__0[2]),
        .I3(sync_header_invalid_count_i_reg__0[3]),
        .O(p_0_in__5[3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[2]),
        .I1(sync_header_invalid_count_i_reg__0[0]),
        .I2(sync_header_invalid_count_i_reg__0[1]),
        .I3(sync_header_invalid_count_i_reg__0[3]),
        .I4(sync_header_invalid_count_i_reg__0[4]),
        .O(p_0_in__5[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[3]),
        .I1(sync_header_invalid_count_i_reg__0[1]),
        .I2(sync_header_invalid_count_i_reg__0[0]),
        .I3(sync_header_invalid_count_i_reg__0[2]),
        .I4(sync_header_invalid_count_i_reg__0[4]),
        .I5(sync_header_invalid_count_i_reg__0[5]),
        .O(p_0_in__5[5]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg__0[6]),
        .O(p_0_in__5[6]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg__0[6]),
        .I2(sync_header_invalid_count_i_reg__0[7]),
        .O(p_0_in__5[7]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg__0[7]),
        .I3(sync_header_invalid_count_i_reg__0[8]),
        .O(p_0_in__5[8]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1 
       (.I0(sync_header_invalid_count_i_reg__0[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg__0[6]),
        .I3(sync_header_invalid_count_i_reg__0[8]),
        .I4(sync_header_invalid_count_i_reg__0[9]),
        .O(p_0_in__5[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2 
       (.I0(sync_header_invalid_count_i_reg__0[5]),
        .I1(sync_header_invalid_count_i_reg__0[3]),
        .I2(sync_header_invalid_count_i_reg__0[1]),
        .I3(sync_header_invalid_count_i_reg__0[0]),
        .I4(sync_header_invalid_count_i_reg__0[2]),
        .I5(sync_header_invalid_count_i_reg__0[4]),
        .O(\sync_header_invalid_count_i[9]_i_2_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[0]),
        .Q(sync_header_invalid_count_i_reg__0[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[1]),
        .Q(sync_header_invalid_count_i_reg__0[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[2]),
        .Q(sync_header_invalid_count_i_reg__0[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[3]),
        .Q(sync_header_invalid_count_i_reg__0[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[4]),
        .Q(sync_header_invalid_count_i_reg__0[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[5]),
        .Q(sync_header_invalid_count_i_reg__0[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[6]),
        .Q(sync_header_invalid_count_i_reg__0[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[7]),
        .Q(sync_header_invalid_count_i_reg__0[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[8]),
        .Q(sync_header_invalid_count_i_reg__0[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__5[9]),
        .Q(sync_header_invalid_count_i_reg__0[9]),
        .R(begin_r));
  FDRE system_reset_r2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  FDRE system_reset_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(SR),
        .Q(system_reset_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8888AAAA888888A8)) 
    test_sh_r_i_1
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(test_sh_r_i_2_n_0),
        .I2(p_1_in[2]),
        .I3(next_slip_c0__0),
        .I4(sh_count_equals_max_i__14),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_2
       (.I0(rxheadervalid_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_2_n_0));
  FDRE test_sh_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_CHANNEL_BOND_GEN" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_CHANNEL_BOND_GEN
   (gen_ch_bond_i,
    extend_cc_r1,
    user_clk,
    SYSTEM_RESET_reg,
    CHANNEL_UP_TX_IF_reg);
  output gen_ch_bond_i;
  input extend_cc_r1;
  input user_clk;
  input SYSTEM_RESET_reg;
  input CHANNEL_UP_TX_IF_reg;

  wire CHANNEL_UP_TX_IF_reg;
  wire SYSTEM_RESET_reg;
  wire extend_cc_r1;
  wire \free_count_r[0]_i_1_n_0 ;
  wire \free_count_r[0]_i_2_n_0 ;
  wire \free_count_r[0]_i_4_n_0 ;
  wire [0:4]free_count_r_reg__0;
  wire freeze_free_count_r;
  wire gen_ch_bond_i;
  wire gen_ch_bond_int_i_1_n_0;
  wire [4:0]p_0_in;
  wire user_clk;

  LUT3 #(
    .INIT(8'hAB)) 
    \free_count_r[0]_i_1 
       (.I0(SYSTEM_RESET_reg),
        .I1(\free_count_r[0]_i_4_n_0 ),
        .I2(freeze_free_count_r),
        .O(\free_count_r[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \free_count_r[0]_i_2 
       (.I0(freeze_free_count_r),
        .O(\free_count_r[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \free_count_r[0]_i_3 
       (.I0(free_count_r_reg__0[0]),
        .I1(free_count_r_reg__0[2]),
        .I2(free_count_r_reg__0[3]),
        .I3(free_count_r_reg__0[4]),
        .I4(free_count_r_reg__0[1]),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    \free_count_r[0]_i_4 
       (.I0(free_count_r_reg__0[4]),
        .I1(free_count_r_reg__0[3]),
        .I2(free_count_r_reg__0[2]),
        .I3(free_count_r_reg__0[0]),
        .I4(free_count_r_reg__0[1]),
        .O(\free_count_r[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \free_count_r[1]_i_1 
       (.I0(free_count_r_reg__0[1]),
        .I1(free_count_r_reg__0[4]),
        .I2(free_count_r_reg__0[3]),
        .I3(free_count_r_reg__0[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \free_count_r[2]_i_1 
       (.I0(free_count_r_reg__0[2]),
        .I1(free_count_r_reg__0[3]),
        .I2(free_count_r_reg__0[4]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \free_count_r[3]_i_1 
       (.I0(free_count_r_reg__0[4]),
        .I1(free_count_r_reg__0[3]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \free_count_r[4]_i_1 
       (.I0(free_count_r_reg__0[4]),
        .O(p_0_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[0] 
       (.C(user_clk),
        .CE(\free_count_r[0]_i_2_n_0 ),
        .D(p_0_in[4]),
        .Q(free_count_r_reg__0[0]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[1] 
       (.C(user_clk),
        .CE(\free_count_r[0]_i_2_n_0 ),
        .D(p_0_in[3]),
        .Q(free_count_r_reg__0[1]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[2] 
       (.C(user_clk),
        .CE(\free_count_r[0]_i_2_n_0 ),
        .D(p_0_in[2]),
        .Q(free_count_r_reg__0[2]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[3] 
       (.C(user_clk),
        .CE(\free_count_r[0]_i_2_n_0 ),
        .D(p_0_in[1]),
        .Q(free_count_r_reg__0[3]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[4] 
       (.C(user_clk),
        .CE(\free_count_r[0]_i_2_n_0 ),
        .D(p_0_in[0]),
        .Q(free_count_r_reg__0[4]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE freeze_free_count_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(extend_cc_r1),
        .Q(freeze_free_count_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    gen_ch_bond_int_i_1
       (.I0(CHANNEL_UP_TX_IF_reg),
        .I1(free_count_r_reg__0[1]),
        .I2(free_count_r_reg__0[0]),
        .I3(free_count_r_reg__0[2]),
        .I4(free_count_r_reg__0[3]),
        .I5(free_count_r_reg__0[4]),
        .O(gen_ch_bond_int_i_1_n_0));
  FDRE gen_ch_bond_int_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(gen_ch_bond_int_i_1_n_0),
        .Q(gen_ch_bond_i),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_CHANNEL_ERR_DETECT" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_CHANNEL_ERR_DETECT
   (hard_err,
    hard_err_i,
    user_clk);
  output hard_err;
  input hard_err_i;
  input user_clk;

  wire hard_err;
  wire hard_err_i;
  wire user_clk;

  FDRE CHANNEL_HARD_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(hard_err_i),
        .Q(hard_err),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_CHANNEL_INIT_SM" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_CHANNEL_INIT_SM
   (reset_lanes_i,
    SR,
    channel_up,
    soft_err_reg,
    GEN_SEP_reg,
    R0,
    soft_err_reg_0,
    rx_sep_c,
    count_13d_flop_r_reg,
    reset_lanes_c,
    user_clk,
    wait_for_lane_up_r0,
    remote_ready_i,
    got_idles_i,
    SYSTEM_RESET_reg,
    s_axi_tx_tready_reg,
    soft_err_i,
    D);
  output reset_lanes_i;
  output [0:0]SR;
  output channel_up;
  output soft_err_reg;
  output GEN_SEP_reg;
  output R0;
  output soft_err_reg_0;
  output rx_sep_c;
  output count_13d_flop_r_reg;
  input reset_lanes_c;
  input user_clk;
  input wait_for_lane_up_r0;
  input remote_ready_i;
  input got_idles_i;
  input SYSTEM_RESET_reg;
  input s_axi_tx_tready_reg;
  input soft_err_i;
  input [0:0]D;

  wire [0:0]D;
  wire GEN_SEP_reg;
  wire R0;
  wire [0:0]SR;
  wire SYSTEM_RESET_reg;
  wire any_idles_r;
  (* RTL_KEEP = "true" *) wire [8:0]chan_bond_timeout_val;
  wire channel_up;
  wire channel_up_c;
  wire count_13d_flop_r_reg;
  wire got_idles_i;
  wire idle_xmit_cntr;
  wire \idle_xmit_cntr[0]_i_2_n_0 ;
  wire \idle_xmit_cntr[0]_i_3_n_0 ;
  wire \idle_xmit_cntr[0]_i_4_n_0 ;
  wire \idle_xmit_cntr[1]_i_1_n_0 ;
  wire \idle_xmit_cntr[2]_i_1_n_0 ;
  wire \idle_xmit_cntr[3]_i_1_n_0 ;
  wire \idle_xmit_cntr[4]_i_1_n_0 ;
  wire \idle_xmit_cntr[5]_i_1_n_0 ;
  wire \idle_xmit_cntr_reg_n_0_[0] ;
  wire \idle_xmit_cntr_reg_n_0_[1] ;
  wire \idle_xmit_cntr_reg_n_0_[2] ;
  wire \idle_xmit_cntr_reg_n_0_[3] ;
  wire \idle_xmit_cntr_reg_n_0_[4] ;
  wire \idle_xmit_cntr_reg_n_0_[5] ;
  wire next_ready_c;
  wire next_wait_for_remote_c;
  wire ready_r;
  wire remote_ready_i;
  wire remote_ready_r;
  wire reset_lanes_c;
  wire reset_lanes_i;
  wire rx_sep_c;
  wire s_axi_tx_tready_reg;
  wire soft_err_i;
  wire soft_err_reg;
  wire soft_err_reg_0;
  wire user_clk;
  wire wait_for_lane_up_r0;
  wire wait_for_remote_r;

  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_RX_IF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_r),
        .Q(channel_up),
        .R(SYSTEM_RESET_reg));
  LUT5 #(
    .INIT(32'h50001000)) 
    CHANNEL_UP_TX_IF_i_1
       (.I0(SR),
        .I1(wait_for_remote_r),
        .I2(ready_r),
        .I3(remote_ready_r),
        .I4(\idle_xmit_cntr[0]_i_3_n_0 ),
        .O(channel_up_c));
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_TX_IF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_up_c),
        .Q(soft_err_reg),
        .R(SYSTEM_RESET_reg));
  FDRE #(
    .INIT(1'b0)) 
    any_idles_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(got_idles_i),
        .Q(any_idles_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    gen_sep_r_i_3
       (.I0(soft_err_reg),
        .I1(s_axi_tx_tready_reg),
        .O(GEN_SEP_reg));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT1 #(
    .INIT(2'h1)) 
    hold_valid_r_i_1
       (.I0(channel_up),
        .O(count_13d_flop_r_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(chan_bond_timeout_val[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(chan_bond_timeout_val[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(chan_bond_timeout_val[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(chan_bond_timeout_val[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(chan_bond_timeout_val[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(chan_bond_timeout_val[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b1),
        .O(chan_bond_timeout_val[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(chan_bond_timeout_val[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(chan_bond_timeout_val[0]));
  LUT4 #(
    .INIT(16'hFBAA)) 
    \idle_xmit_cntr[0]_i_1 
       (.I0(\idle_xmit_cntr[0]_i_3_n_0 ),
        .I1(\idle_xmit_cntr[0]_i_4_n_0 ),
        .I2(any_idles_r),
        .I3(wait_for_remote_r),
        .O(idle_xmit_cntr));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    \idle_xmit_cntr[0]_i_2 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[2] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \idle_xmit_cntr[0]_i_3 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[2] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \idle_xmit_cntr[0]_i_4 
       (.I0(\idle_xmit_cntr_reg_n_0_[4] ),
        .I1(\idle_xmit_cntr_reg_n_0_[5] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(\idle_xmit_cntr_reg_n_0_[0] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFC0000000)) 
    \idle_xmit_cntr[1]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[2] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8FFFFFFFF0000000)) 
    \idle_xmit_cntr[2]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[1] ),
        .I1(\idle_xmit_cntr_reg_n_0_[0] ),
        .I2(\idle_xmit_cntr_reg_n_0_[4] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[3] ),
        .I5(\idle_xmit_cntr_reg_n_0_[2] ),
        .O(\idle_xmit_cntr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80FFFFFFFF000000)) 
    \idle_xmit_cntr[3]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[1] ),
        .I1(\idle_xmit_cntr_reg_n_0_[2] ),
        .I2(\idle_xmit_cntr_reg_n_0_[0] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[3] ),
        .O(\idle_xmit_cntr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFFFFFF0000)) 
    \idle_xmit_cntr[4]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[1] ),
        .I1(\idle_xmit_cntr_reg_n_0_[3] ),
        .I2(\idle_xmit_cntr_reg_n_0_[2] ),
        .I3(\idle_xmit_cntr_reg_n_0_[0] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[5] ),
        .O(\idle_xmit_cntr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \idle_xmit_cntr[5]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[1] ),
        .I1(\idle_xmit_cntr_reg_n_0_[4] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(\idle_xmit_cntr_reg_n_0_[0] ),
        .I5(\idle_xmit_cntr_reg_n_0_[5] ),
        .O(\idle_xmit_cntr[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[0] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[0]_i_2_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[1] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[1]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[2] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[2]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[3] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[3]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[4] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[4]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[5] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[5]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[5] ),
        .R(SR));
  LUT4 #(
    .INIT(16'hCC80)) 
    ready_r_i_1__0
       (.I0(\idle_xmit_cntr[0]_i_3_n_0 ),
        .I1(remote_ready_r),
        .I2(wait_for_remote_r),
        .I3(ready_r),
        .O(next_ready_c));
  FDRE #(
    .INIT(1'b0)) 
    ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(wait_for_lane_up_r0));
  FDRE #(
    .INIT(1'b0)) 
    remote_ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_i),
        .Q(remote_ready_r),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_lanes_flop_0_i
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_lanes_c),
        .Q(reset_lanes_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    rx_sep_r_i_1
       (.I0(channel_up),
        .I1(D),
        .O(rx_sep_c));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_tx_tready_i_1
       (.I0(soft_err_reg),
        .O(R0));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    soft_err_i_1
       (.I0(soft_err_reg),
        .I1(soft_err_i),
        .O(soft_err_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_lane_up_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(wait_for_lane_up_r0),
        .Q(SR),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFF7730)) 
    wait_for_remote_r_i_1
       (.I0(\idle_xmit_cntr[0]_i_3_n_0 ),
        .I1(remote_ready_r),
        .I2(ready_r),
        .I3(wait_for_remote_r),
        .I4(SR),
        .O(next_wait_for_remote_c));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_remote_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_wait_for_remote_c),
        .Q(wait_for_remote_r),
        .R(wait_for_lane_up_r0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_CLOCK_CORRECTION_CHANNEL_BONDING" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_CLOCK_CORRECTION_CHANNEL_BONDING
   (do_rd_en_i,
    master_do_rd_en,
    rx_header_err_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    link_reset_0_c,
    rx_lossofsync_i,
    final_gater_for_fifo_din_i,
    bit_err_chan_bond_i,
    START_CB_WRITES_OUT,
    ANY_VLD_BTF_FLAG,
    valid_btf_detect_dlyd1,
    Q,
    rxdatavalid_i,
    gtwiz_reset_rx_datapath_in,
    LINK_RESET_OUT0,
    HARD_ERR_reg,
    \RX_DATA_REG_reg[0] ,
    ANY_VLD_BTF_FLAG0__4,
    srst,
    rxusrclk_out,
    user_clk,
    out,
    in0,
    D,
    SR,
    init_clk,
    cbcc_reset_cbstg2_rd_clk,
    stg5,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk_reg,
    p_9_in,
    CB_detect0,
    stg5_reg,
    RESET,
    cdr_reset_fsm_lnkreset,
    enable_err_detect_i,
    all_start_cb_writes_out_reg,
    all_vld_btf_out_reg,
    cbcc_fifo_reset_wr_clk_reg_0,
    stg9_reg,
    CB_detect,
    new_gtx_rx_pcsreset_comb_reg);
  output do_rd_en_i;
  output master_do_rd_en;
  output rx_header_err_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output link_reset_0_c;
  output rx_lossofsync_i;
  output final_gater_for_fifo_din_i;
  output bit_err_chan_bond_i;
  output START_CB_WRITES_OUT;
  output ANY_VLD_BTF_FLAG;
  output valid_btf_detect_dlyd1;
  output [66:0]Q;
  output rxdatavalid_i;
  output [0:0]gtwiz_reset_rx_datapath_in;
  output LINK_RESET_OUT0;
  output HARD_ERR_reg;
  output \RX_DATA_REG_reg[0] ;
  output ANY_VLD_BTF_FLAG0__4;
  input srst;
  input rxusrclk_out;
  input user_clk;
  input out;
  input in0;
  input [66:0]D;
  input [0:0]SR;
  input init_clk;
  input cbcc_reset_cbstg2_rd_clk;
  input stg5;
  input CC_detect_pulse_i;
  input [0:0]cbcc_fifo_reset_wr_clk_reg;
  input p_9_in;
  input CB_detect0;
  input stg5_reg;
  input RESET;
  input cdr_reset_fsm_lnkreset;
  input enable_err_detect_i;
  input all_start_cb_writes_out_reg;
  input all_vld_btf_out_reg;
  input cbcc_fifo_reset_wr_clk_reg_0;
  input [0:0]stg9_reg;
  input CB_detect;
  input [0:0]new_gtx_rx_pcsreset_comb_reg;

  wire ANY_VLD_BTF_FLAG;
  wire ANY_VLD_BTF_FLAG0__4;
  wire ANY_VLD_BTF_FLAG_i_1_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CC_RX_HEADER_OUT_ERR0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire [66:0]D;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__20;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0;
  wire HARD_ERR_reg;
  wire \LINK_RESET[0]_i_2_n_0 ;
  wire \LINK_RESET[0]_i_3_n_0 ;
  wire \LINK_RESET[0]_i_4_n_0 ;
  wire \LINK_RESET[0]_i_5_n_0 ;
  wire \LINK_RESET[0]_i_6_n_0 ;
  wire LINK_RESET_OUT0;
  wire [66:0]Q;
  wire RESET;
  wire \RX_DATA_REG_reg[0] ;
  wire [0:0]SR;
  wire START_CB_WRITES_OUT;
  wire START_CB_WRITES_OUT_i_1_n_0;
  wire all_start_cb_writes_out_reg;
  wire all_vld_btf_out_reg;
  wire bit_err_chan_bond_i;
  wire buffer_too_empty_c;
  wire [0:0]cbcc_fifo_reset_wr_clk_reg;
  wire cbcc_fifo_reset_wr_clk_reg_0;
  wire cbcc_reset_cbstg2_rd_clk;
  wire cdr_reset_fsm_lnkreset;
  wire \count_for_reset_r[0]_i_3_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1_n_9 ;
  wire \count_for_reset_r_reg[8]_i_1_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1_n_9 ;
  wire do_rd_en0;
  wire do_rd_en_i;
  wire do_wr_en;
  wire do_wr_en_i_1_n_0;
  wire enable_err_detect_i;
  wire \fifo_din_i_reg[71]_i_1_n_0 ;
  wire \fifo_din_i_reg[71]_i_3_n_0 ;
  wire \fifo_din_i_reg[71]_i_4_n_0 ;
  wire \fifo_din_i_reg[71]_i_5_n_0 ;
  wire \fifo_din_i_reg[71]_i_6_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [68:0]fifo_dout_i;
  wire final_gater_for_fifo_din_i;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire hold_reg;
  wire hold_reg_r;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire master_do_rd_en;
  wire master_do_rd_en_q;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1_n_0;
  wire [0:0]new_gtx_rx_pcsreset_comb_reg;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire [3:0]p_0_in__1;
  wire [5:0]p_0_in__6;
  wire [4:0]p_0_in__7;
  wire p_7_in;
  wire p_9_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rd_err_pre_0;
  wire rx_header_err_i;
  wire rx_lossofsync_i;
  wire [1:0]rxbuferr_out_i;
  wire rxdatavalid_i;
  wire rxdatavalid_lookahead_i;
  wire rxusrclk_out;
  wire srst;
  wire stg5;
  wire stg5_reg;
  wire [0:0]stg9_reg;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire user_clk;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire \wait_for_rd_en[3]_i_1_n_0 ;
  wire [3:1]wait_for_rd_en_reg__0;
  wire \wait_for_rd_en_reg_n_0_[0] ;
  wire \wait_for_wr_en[5]_i_1_n_0 ;
  wire [5:0]wait_for_wr_en_reg__0;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg__0;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [3:3]\NLW_count_for_reset_r_reg[0]_i_2_CO_UNCONNECTED ;
  wire [7:3]\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_count_for_reset_r_reg[8]_i_1_CO_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:69]\NLW_master_fifo.data_fifo_dout_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    ANY_VLD_BTF_FLAG_i_1
       (.I0(ANY_VLD_BTF_FLAG),
        .I1(p_7_in),
        .I2(cbcc_fifo_reset_wr_clk_reg_0),
        .O(ANY_VLD_BTF_FLAG_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1_n_0),
        .Q(ANY_VLD_BTF_FLAG),
        .R(1'b0));
  FDRE CB_detect_dlyd0p5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk_reg));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1
       (.I0(CB_detect_dlyd0p5),
        .I1(CB_detect_dlyd1p0),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE CB_detect_dlyd1p0_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE CC_RXLOSSOFSYNC_OUT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(rx_lossofsync_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h88080888)) 
    CC_RX_HEADER_OUT_ERR_i_1
       (.I0(Q[66]),
        .I1(master_do_rd_en),
        .I2(hold_reg_r),
        .I3(Q[65]),
        .I4(Q[64]),
        .O(CC_RX_HEADER_OUT_ERR0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR0),
        .Q(rx_header_err_i),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(p_9_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE CC_detect_pulse_r_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1
       (.I0(all_start_cb_writes_out_reg),
        .I1(p_7_in),
        .I2(final_gater_for_fifo_din_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0),
        .Q(final_gater_for_fifo_din_i),
        .R(cbcc_fifo_reset_wr_clk_reg));
  LUT4 #(
    .INIT(16'h00E2)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1
       (.I0(bit_err_chan_bond_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFBFFFF00040000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2
       (.I0(wr_monitor_flag_reg__0[4]),
        .I1(wr_monitor_flag_reg__0[3]),
        .I2(wr_monitor_flag_reg__0[2]),
        .I3(wr_monitor_flag_reg__0[0]),
        .I4(wr_monitor_flag_reg__0[1]),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT1__20),
        .O(FIRST_CB_BITERR_CB_RESET_OUT));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3
       (.I0(stg9_reg),
        .I1(wr_monitor_flag_reg__0[3]),
        .I2(wr_monitor_flag_reg__0[4]),
        .I3(wr_monitor_flag_reg__0[2]),
        .I4(wr_monitor_flag_reg__0[1]),
        .I5(wr_monitor_flag_reg__0[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__20));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0),
        .Q(bit_err_chan_bond_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hA8)) 
    HARD_ERR_i_1
       (.I0(enable_err_detect_i),
        .I1(rxbuferr_out_i[0]),
        .I2(rxbuferr_out_i[1]),
        .O(HARD_ERR_reg));
  LUT6 #(
    .INIT(64'hABA8000000000000)) 
    \LINK_RESET[0]_i_1 
       (.I0(\LINK_RESET[0]_i_2_n_0 ),
        .I1(count_for_reset_r_reg[1]),
        .I2(count_for_reset_r_reg[2]),
        .I3(\LINK_RESET[0]_i_3_n_0 ),
        .I4(\LINK_RESET[0]_i_4_n_0 ),
        .I5(\LINK_RESET[0]_i_5_n_0 ),
        .O(link_reset_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \LINK_RESET[0]_i_2 
       (.I0(count_for_reset_r_reg[3]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[7]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[4]),
        .O(\LINK_RESET[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3 
       (.I0(count_for_reset_r_reg[6]),
        .I1(count_for_reset_r_reg[7]),
        .I2(count_for_reset_r_reg[4]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[3]),
        .I5(count_for_reset_r_reg[0]),
        .O(\LINK_RESET[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_6_n_0 ),
        .O(\LINK_RESET[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_6 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'hE)) 
    LINK_RESET_OUT_i_1
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(link_reset_0_c),
        .O(LINK_RESET_OUT0));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_0_c),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RXDATAVALID_IN_REG_i_1
       (.I0(master_do_rd_en),
        .I1(Q[66]),
        .O(rxdatavalid_i));
  LUT1 #(
    .INIT(2'h1)) 
    \RX_DATA_REG[63]_i_1 
       (.I0(hold_reg_r),
        .O(\RX_DATA_REG_reg[0] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(D[66]),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    START_CB_WRITES_OUT_i_1
       (.I0(all_vld_btf_out_reg),
        .I1(p_7_in),
        .I2(START_CB_WRITES_OUT),
        .O(START_CB_WRITES_OUT_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    START_CB_WRITES_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(START_CB_WRITES_OUT_i_1_n_0),
        .Q(START_CB_WRITES_OUT),
        .R(cbcc_fifo_reset_wr_clk_reg));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    aurora_64b66b_25p78G_gt_i_i_1
       (.I0(link_reset_0_c),
        .I1(RESET),
        .I2(cdr_reset_fsm_lnkreset),
        .O(gtwiz_reset_rx_datapath_in));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(stg5_reg));
  CARRY8 \count_for_reset_r_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2_n_0 ,\count_for_reset_r_reg[0]_i_2_n_1 ,\count_for_reset_r_reg[0]_i_2_n_2 ,\count_for_reset_r_reg[0]_i_2_n_3 ,\NLW_count_for_reset_r_reg[0]_i_2_CO_UNCONNECTED [3],\count_for_reset_r_reg[0]_i_2_n_5 ,\count_for_reset_r_reg[0]_i_2_n_6 ,\count_for_reset_r_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2_n_8 ,\count_for_reset_r_reg[0]_i_2_n_9 ,\count_for_reset_r_reg[0]_i_2_n_10 ,\count_for_reset_r_reg[0]_i_2_n_11 ,\count_for_reset_r_reg[0]_i_2_n_12 ,\count_for_reset_r_reg[0]_i_2_n_13 ,\count_for_reset_r_reg[0]_i_2_n_14 ,\count_for_reset_r_reg[0]_i_2_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(stg5_reg));
  CARRY8 \count_for_reset_r_reg[16]_i_1 
       (.CI(\count_for_reset_r_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1_n_1 ,\count_for_reset_r_reg[16]_i_1_n_2 ,\count_for_reset_r_reg[16]_i_1_n_3 ,\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED [3],\count_for_reset_r_reg[16]_i_1_n_5 ,\count_for_reset_r_reg[16]_i_1_n_6 ,\count_for_reset_r_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1_n_8 ,\count_for_reset_r_reg[16]_i_1_n_9 ,\count_for_reset_r_reg[16]_i_1_n_10 ,\count_for_reset_r_reg[16]_i_1_n_11 ,\count_for_reset_r_reg[16]_i_1_n_12 ,\count_for_reset_r_reg[16]_i_1_n_13 ,\count_for_reset_r_reg[16]_i_1_n_14 ,\count_for_reset_r_reg[16]_i_1_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(stg5_reg));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(stg5_reg));
  CARRY8 \count_for_reset_r_reg[8]_i_1 
       (.CI(\count_for_reset_r_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1_n_0 ,\count_for_reset_r_reg[8]_i_1_n_1 ,\count_for_reset_r_reg[8]_i_1_n_2 ,\count_for_reset_r_reg[8]_i_1_n_3 ,\NLW_count_for_reset_r_reg[8]_i_1_CO_UNCONNECTED [3],\count_for_reset_r_reg[8]_i_1_n_5 ,\count_for_reset_r_reg[8]_i_1_n_6 ,\count_for_reset_r_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1_n_8 ,\count_for_reset_r_reg[8]_i_1_n_9 ,\count_for_reset_r_reg[8]_i_1_n_10 ,\count_for_reset_r_reg[8]_i_1_n_11 ,\count_for_reset_r_reg[8]_i_1_n_12 ,\count_for_reset_r_reg[8]_i_1_n_13 ,\count_for_reset_r_reg[8]_i_1_n_14 ,\count_for_reset_r_reg[8]_i_1_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(stg5_reg));
  LUT5 #(
    .INIT(32'h00005444)) 
    do_rd_en_i_1
       (.I0(new_underflow_flag_c),
        .I1(wait_for_rd_en_reg__0[3]),
        .I2(wait_for_rd_en_reg__0[2]),
        .I3(wait_for_rd_en_reg__0[1]),
        .I4(SR),
        .O(do_rd_en0));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(do_rd_en0),
        .Q(do_rd_en_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000C000800080008)) 
    do_wr_en_i_1
       (.I0(final_gater_for_fifo_din_i),
        .I1(raw_data_r[66]),
        .I2(overflow_flag_c),
        .I3(cbcc_fifo_reset_wr_clk_reg_0),
        .I4(p_7_in),
        .I5(all_start_cb_writes_out_reg),
        .O(do_wr_en_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    do_wr_en_i_3
       (.I0(wait_for_wr_en_wr4[0]),
        .I1(wait_for_wr_en_wr4[5]),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .I4(wait_for_wr_en_wr4[2]),
        .I5(wait_for_wr_en_wr4[4]),
        .O(ANY_VLD_BTF_FLAG0__4));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h15)) 
    \fifo_din_i_reg[71]_i_1 
       (.I0(do_wr_en),
        .I1(p_7_in),
        .I2(all_start_cb_writes_out_reg),
        .O(\fifo_din_i_reg[71]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \fifo_din_i_reg[71]_i_2 
       (.I0(\fifo_din_i_reg[71]_i_3_n_0 ),
        .I1(\fifo_din_i_reg[71]_i_4_n_0 ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .I3(\raw_data_r_r_reg_n_0_[49] ),
        .I4(\raw_data_r_r_reg_n_0_[50] ),
        .I5(p_0_in3_in),
        .O(p_7_in));
  LUT5 #(
    .INIT(32'h10000000)) 
    \fifo_din_i_reg[71]_i_3 
       (.I0(\raw_data_r_r_reg_n_0_[63] ),
        .I1(\raw_data_r_r_reg_n_0_[64] ),
        .I2(\raw_data_r_r_reg_n_0_[65] ),
        .I3(p_0_in3_in),
        .I4(\fifo_din_i_reg[71]_i_5_n_0 ),
        .O(\fifo_din_i_reg[71]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \fifo_din_i_reg[71]_i_4 
       (.I0(\raw_data_r_r_reg_n_0_[51] ),
        .I1(\raw_data_r_r_reg_n_0_[52] ),
        .I2(\raw_data_r_r_reg_n_0_[54] ),
        .I3(\raw_data_r_r_reg_n_0_[53] ),
        .I4(\fifo_din_i_reg[71]_i_6_n_0 ),
        .O(\fifo_din_i_reg[71]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \fifo_din_i_reg[71]_i_5 
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(\fifo_din_i_reg[71]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \fifo_din_i_reg[71]_i_6 
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(\fifo_din_i_reg[71]_i_6_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(Q[65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[66]),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE hold_reg_r_reg
       (.C(user_clk),
        .CE(do_rd_en_i),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(stg5));
  FDRE hold_reg_reg
       (.C(user_clk),
        .CE(do_rd_en_i),
        .D(do_rd_en_i),
        .Q(hold_reg),
        .R(stg5));
  (* shift_extract = "{no}" *) 
  FDRE master_do_rd_en_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(out),
        .Q(master_do_rd_en_q),
        .R(SR));
  FDRE master_do_rd_en_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(master_do_rd_en_q),
        .Q(master_do_rd_en),
        .R(SR));
  (* CHECK_LICENSE_TYPE = "aurora_64b66b_25p78G_fifo_gen_master,fifo_generator_v13_2_0,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_0,Vivado 2017.3.1" *) 
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_fifo_gen_master \master_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_master_fifo.data_fifo_dout_UNCONNECTED [71:69],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(user_clk),
        .rd_en(out),
        .rd_rst_busy(\NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(rxusrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h00EA)) 
    new_do_wr_en_i_1
       (.I0(do_wr_en),
        .I1(p_7_in),
        .I2(all_start_cb_writes_out_reg),
        .I3(cbcc_fifo_reset_wr_clk_reg_0),
        .O(new_do_wr_en_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    new_underflow_flag_c_i_1
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  FDSE new_underflow_flag_c_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .S(SR));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[66]),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hAABF)) 
    rd_err_pre_i_1
       (.I0(SR),
        .I1(wait_for_rd_en_reg__0[1]),
        .I2(wait_for_rd_en_reg__0[2]),
        .I3(wait_for_rd_en_reg__0[3]),
        .O(rd_err_pre_0));
  FDRE rd_err_pre_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(rd_err_pre_0));
  FDRE rd_err_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_i[0]),
        .R(rd_err_pre_0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized2 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_24 u_cdc_rxlossofsync_in
       (.CC_RXLOSSOFSYNC_OUT_reg(u_cdc_rxlossofsync_in_n_0),
        .in0(in0),
        .stg5(stg5),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized2_25 u_cdc_wr_err_rd_clk
       (.SR(SR),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_26 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .valid_btf_detect_dlyd1_reg(u_rst_sync_btf_sync_n_0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1
       (.I0(underflow_flag_c),
        .I1(buffer_too_empty_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(SR));
  FDSE underflow_flag_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(SR));
  FDSE underflow_flag_r3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[2]),
        .I1(valid_btf_detect_extend_r[0]),
        .I2(valid_btf_detect_extend_r[1]),
        .I3(valid_btf_detect_extend_r[3]),
        .I4(valid_btf_detect_extend_r[4]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(p_9_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(\wait_for_rd_en_reg_n_0_[0] ),
        .O(p_0_in__1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(\wait_for_rd_en_reg_n_0_[0] ),
        .I1(wait_for_rd_en_reg__0[1]),
        .O(p_0_in__1[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \wait_for_rd_en[2]_i_1 
       (.I0(wait_for_rd_en_reg__0[2]),
        .I1(wait_for_rd_en_reg__0[1]),
        .I2(\wait_for_rd_en_reg_n_0_[0] ),
        .O(p_0_in__1[2]));
  LUT3 #(
    .INIT(8'h15)) 
    \wait_for_rd_en[3]_i_1 
       (.I0(wait_for_rd_en_reg__0[3]),
        .I1(wait_for_rd_en_reg__0[2]),
        .I2(wait_for_rd_en_reg__0[1]),
        .O(\wait_for_rd_en[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \wait_for_rd_en[3]_i_2 
       (.I0(\wait_for_rd_en_reg_n_0_[0] ),
        .I1(wait_for_rd_en_reg__0[1]),
        .I2(wait_for_rd_en_reg__0[2]),
        .O(p_0_in__1[3]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[3]_i_1_n_0 ),
        .D(p_0_in__1[0]),
        .Q(\wait_for_rd_en_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[3]_i_1_n_0 ),
        .D(p_0_in__1[1]),
        .Q(wait_for_rd_en_reg__0[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[3]_i_1_n_0 ),
        .D(p_0_in__1[2]),
        .Q(wait_for_rd_en_reg__0[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[3] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[3]_i_1_n_0 ),
        .D(p_0_in__1[3]),
        .Q(wait_for_rd_en_reg__0[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1 
       (.I0(wait_for_wr_en_reg__0[0]),
        .O(p_0_in__6[0]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1 
       (.I0(wait_for_wr_en_reg__0[0]),
        .I1(wait_for_wr_en_reg__0[1]),
        .O(p_0_in__6[1]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1 
       (.I0(wait_for_wr_en_reg__0[0]),
        .I1(wait_for_wr_en_reg__0[1]),
        .I2(wait_for_wr_en_reg__0[2]),
        .O(p_0_in__6[2]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1 
       (.I0(wait_for_wr_en_reg__0[1]),
        .I1(wait_for_wr_en_reg__0[0]),
        .I2(wait_for_wr_en_reg__0[2]),
        .I3(wait_for_wr_en_reg__0[3]),
        .O(p_0_in__6[3]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1 
       (.I0(wait_for_wr_en_reg__0[2]),
        .I1(wait_for_wr_en_reg__0[0]),
        .I2(wait_for_wr_en_reg__0[1]),
        .I3(wait_for_wr_en_reg__0[3]),
        .I4(wait_for_wr_en_reg__0[4]),
        .O(p_0_in__6[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1 
       (.I0(wait_for_wr_en_reg__0[5]),
        .O(\wait_for_wr_en[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2 
       (.I0(wait_for_wr_en_reg__0[3]),
        .I1(wait_for_wr_en_reg__0[1]),
        .I2(wait_for_wr_en_reg__0[0]),
        .I3(wait_for_wr_en_reg__0[2]),
        .I4(wait_for_wr_en_reg__0[4]),
        .O(p_0_in__6[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(rxusrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__6[0]),
        .Q(wait_for_wr_en_reg__0[0]),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(rxusrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__6[1]),
        .Q(wait_for_wr_en_reg__0[1]),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(rxusrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__6[2]),
        .Q(wait_for_wr_en_reg__0[2]),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(rxusrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__6[3]),
        .Q(wait_for_wr_en_reg__0[3]),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(rxusrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__6[4]),
        .Q(wait_for_wr_en_reg__0[4]),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(rxusrclk_out),
        .CE(\wait_for_wr_en[5]_i_1_n_0 ),
        .D(p_0_in__6[5]),
        .Q(wait_for_wr_en_reg__0[5]),
        .R(cbcc_fifo_reset_wr_clk_reg));
  (* srl_bus_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(wait_for_wr_en_reg__0[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(wait_for_wr_en_reg__0[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(wait_for_wr_en_reg__0[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(wait_for_wr_en_reg__0[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(wait_for_wr_en_reg__0[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(wait_for_wr_en_reg__0[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_i[1]),
        .R(rd_err_pre_0));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1 
       (.I0(wr_monitor_flag_reg__0[0]),
        .O(p_0_in__7[0]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1 
       (.I0(wr_monitor_flag_reg__0[0]),
        .I1(wr_monitor_flag_reg__0[1]),
        .O(p_0_in__7[1]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1 
       (.I0(wr_monitor_flag_reg__0[0]),
        .I1(wr_monitor_flag_reg__0[1]),
        .I2(wr_monitor_flag_reg__0[2]),
        .O(p_0_in__7[2]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1 
       (.I0(wr_monitor_flag_reg__0[1]),
        .I1(wr_monitor_flag_reg__0[0]),
        .I2(wr_monitor_flag_reg__0[2]),
        .I3(wr_monitor_flag_reg__0[3]),
        .O(p_0_in__7[3]));
  LUT6 #(
    .INIT(64'h0000000000AA2AAA)) 
    \wr_monitor_flag[4]_i_1 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg__0[1]),
        .I2(wr_monitor_flag_reg__0[0]),
        .I3(wr_monitor_flag_reg__0[3]),
        .I4(wr_monitor_flag_reg__0[2]),
        .I5(wr_monitor_flag_reg__0[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2 
       (.I0(wr_monitor_flag_reg__0[2]),
        .I1(wr_monitor_flag_reg__0[0]),
        .I2(wr_monitor_flag_reg__0[1]),
        .I3(wr_monitor_flag_reg__0[3]),
        .O(p_0_in__7[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(rxusrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__7[0]),
        .Q(wr_monitor_flag_reg__0[0]),
        .R(stg9_reg));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(rxusrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__7[1]),
        .Q(wr_monitor_flag_reg__0[1]),
        .R(stg9_reg));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(rxusrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__7[2]),
        .Q(wr_monitor_flag_reg__0[2]),
        .R(stg9_reg));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(rxusrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__7[3]),
        .Q(wr_monitor_flag_reg__0[3]),
        .R(stg9_reg));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(rxusrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__7[4]),
        .Q(wr_monitor_flag_reg__0[4]),
        .R(stg9_reg));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_DESCRAMBLER_64B66B" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_DESCRAMBLER_64B66B
   (CB_detect,
    CB_detect0,
    UNSCRAMBLED_DATA_OUT,
    CC_detect_pulse_i,
    p_9_in,
    in0,
    CB_detect_dlyd0p5,
    CC_detect_dlyd1,
    D,
    E,
    Q,
    rxusrclk_out);
  output CB_detect;
  output CB_detect0;
  output [63:0]UNSCRAMBLED_DATA_OUT;
  output CC_detect_pulse_i;
  output p_9_in;
  input in0;
  input CB_detect_dlyd0p5;
  input CC_detect_dlyd1;
  input [2:0]D;
  input [0:0]E;
  input [63:0]Q;
  input rxusrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd0p5_i_2_n_0;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2_n_0;
  wire CC_detect_dlyd1_i_3_n_0;
  wire CC_detect_dlyd1_i_4_n_0;
  wire CC_detect_dlyd1_i_5_n_0;
  wire CC_detect_pulse_i;
  wire [2:0]D;
  wire [0:0]E;
  wire [63:0]Q;
  wire [63:0]UNSCRAMBLED_DATA_OUT;
  wire \descrambler[57]_i_1_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire p_9_in;
  wire rxusrclk_out;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;

  LUT6 #(
    .INIT(64'h0000000000000800)) 
    CB_detect_dlyd0p5_i_1
       (.I0(CB_detect_dlyd0p5_i_2_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[54]),
        .I2(UNSCRAMBLED_DATA_OUT[53]),
        .I3(CC_detect_dlyd1_i_3_n_0),
        .I4(CC_detect_dlyd1_i_4_n_0),
        .I5(CC_detect_dlyd1_i_5_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    CB_detect_dlyd0p5_i_2
       (.I0(UNSCRAMBLED_DATA_OUT[55]),
        .I1(UNSCRAMBLED_DATA_OUT[56]),
        .I2(UNSCRAMBLED_DATA_OUT[59]),
        .I3(UNSCRAMBLED_DATA_OUT[57]),
        .I4(UNSCRAMBLED_DATA_OUT[63]),
        .I5(UNSCRAMBLED_DATA_OUT[62]),
        .O(CB_detect_dlyd0p5_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    CC_detect_dlyd1_i_1
       (.I0(CC_detect_dlyd1_i_2_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[53]),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(CC_detect_dlyd1_i_3_n_0),
        .I4(CC_detect_dlyd1_i_4_n_0),
        .I5(CC_detect_dlyd1_i_5_n_0),
        .O(p_9_in));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    CC_detect_dlyd1_i_2
       (.I0(UNSCRAMBLED_DATA_OUT[55]),
        .I1(UNSCRAMBLED_DATA_OUT[56]),
        .I2(UNSCRAMBLED_DATA_OUT[59]),
        .I3(UNSCRAMBLED_DATA_OUT[57]),
        .I4(UNSCRAMBLED_DATA_OUT[63]),
        .I5(UNSCRAMBLED_DATA_OUT[62]),
        .O(CC_detect_dlyd1_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    CC_detect_dlyd1_i_3
       (.I0(UNSCRAMBLED_DATA_OUT[51]),
        .I1(UNSCRAMBLED_DATA_OUT[52]),
        .O(CC_detect_dlyd1_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_dlyd1_i_4
       (.I0(UNSCRAMBLED_DATA_OUT[58]),
        .I1(UNSCRAMBLED_DATA_OUT[50]),
        .I2(UNSCRAMBLED_DATA_OUT[49]),
        .I3(UNSCRAMBLED_DATA_OUT[48]),
        .O(CC_detect_dlyd1_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    CC_detect_dlyd1_i_5
       (.I0(D[1]),
        .I1(UNSCRAMBLED_DATA_OUT[61]),
        .I2(UNSCRAMBLED_DATA_OUT[60]),
        .I3(D[2]),
        .I4(D[0]),
        .O(CC_detect_dlyd1_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    CC_detect_pulse_r_i_1
       (.I0(p_9_in),
        .I1(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1 
       (.I0(in0),
        .O(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(Q[9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \fifo_din_i_reg[70]_i_1 
       (.I0(CB_detect0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[39]),
        .I2(Q[58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1 
       (.I0(Q[10]),
        .I1(Q[49]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1 
       (.I0(Q[11]),
        .I1(Q[50]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1 
       (.I0(Q[12]),
        .I1(Q[51]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1 
       (.I0(Q[13]),
        .I1(Q[52]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1 
       (.I0(Q[14]),
        .I1(Q[53]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1 
       (.I0(Q[15]),
        .I1(Q[54]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1 
       (.I0(Q[16]),
        .I1(Q[55]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1 
       (.I0(Q[17]),
        .I1(Q[56]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1 
       (.I0(Q[18]),
        .I1(Q[57]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1 
       (.I0(Q[19]),
        .I1(Q[58]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[40]),
        .I2(Q[59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1 
       (.I0(Q[20]),
        .I1(Q[59]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1 
       (.I0(Q[21]),
        .I1(Q[60]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1 
       (.I0(Q[22]),
        .I1(Q[61]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1 
       (.I0(Q[23]),
        .I1(Q[62]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1 
       (.I0(Q[24]),
        .I1(Q[63]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1 
       (.I0(Q[25]),
        .I1(p_97_in),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1 
       (.I0(Q[26]),
        .I1(p_101_in),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1 
       (.I0(Q[27]),
        .I1(p_105_in),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1 
       (.I0(Q[28]),
        .I1(p_109_in),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1 
       (.I0(Q[29]),
        .I1(p_113_in),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[41]),
        .I2(Q[60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1 
       (.I0(Q[30]),
        .I1(p_117_in),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1 
       (.I0(Q[31]),
        .I1(p_121_in),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1 
       (.I0(Q[32]),
        .I1(p_125_in),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1 
       (.I0(Q[33]),
        .I1(p_129_in),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1 
       (.I0(Q[34]),
        .I1(p_133_in),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1 
       (.I0(Q[35]),
        .I1(p_137_in),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1 
       (.I0(Q[36]),
        .I1(p_141_in),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1 
       (.I0(Q[37]),
        .I1(p_145_in),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1 
       (.I0(Q[38]),
        .I1(p_149_in),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1 
       (.I0(Q[39]),
        .I1(p_153_in),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[42]),
        .I2(Q[61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1 
       (.I0(Q[40]),
        .I1(p_157_in),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1 
       (.I0(Q[41]),
        .I1(p_161_in),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1 
       (.I0(Q[42]),
        .I1(p_165_in),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1 
       (.I0(Q[43]),
        .I1(p_169_in),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1 
       (.I0(Q[44]),
        .I1(p_173_in),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1 
       (.I0(Q[45]),
        .I1(p_177_in),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1 
       (.I0(Q[46]),
        .I1(p_181_in),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1 
       (.I0(Q[47]),
        .I1(p_185_in),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1 
       (.I0(Q[48]),
        .I1(p_189_in),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1 
       (.I0(Q[49]),
        .I1(p_193_in),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[43]),
        .I2(Q[62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1 
       (.I0(Q[50]),
        .I1(p_197_in),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1 
       (.I0(Q[51]),
        .I1(p_201_in),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1 
       (.I0(Q[52]),
        .I1(p_205_in),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1 
       (.I0(Q[53]),
        .I1(p_209_in),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1 
       (.I0(Q[54]),
        .I1(p_213_in),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1 
       (.I0(Q[55]),
        .I1(p_217_in),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1 
       (.I0(Q[56]),
        .I1(p_221_in),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1 
       (.I0(Q[57]),
        .I1(p_225_in),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1 
       (.I0(Q[58]),
        .I1(p_229_in),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1 
       (.I0(Q[59]),
        .I1(p_233_in),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[44]),
        .I2(Q[63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1 
       (.I0(Q[60]),
        .I1(p_237_in),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1 
       (.I0(Q[61]),
        .I1(p_241_in),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1 
       (.I0(Q[62]),
        .I1(p_245_in),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1 
       (.I0(Q[63]),
        .I1(p_249_in),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1 
       (.I0(Q[6]),
        .I1(Q[45]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1 
       (.I0(Q[7]),
        .I1(Q[46]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1 
       (.I0(Q[8]),
        .I1(Q[47]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1 
       (.I0(Q[9]),
        .I1(Q[48]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(UNSCRAMBLED_DATA_OUT[0]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(UNSCRAMBLED_DATA_OUT[10]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(UNSCRAMBLED_DATA_OUT[11]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(UNSCRAMBLED_DATA_OUT[12]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(UNSCRAMBLED_DATA_OUT[13]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(UNSCRAMBLED_DATA_OUT[14]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(UNSCRAMBLED_DATA_OUT[15]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(UNSCRAMBLED_DATA_OUT[16]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(UNSCRAMBLED_DATA_OUT[17]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(UNSCRAMBLED_DATA_OUT[18]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(UNSCRAMBLED_DATA_OUT[19]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(UNSCRAMBLED_DATA_OUT[1]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(UNSCRAMBLED_DATA_OUT[20]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(UNSCRAMBLED_DATA_OUT[21]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(UNSCRAMBLED_DATA_OUT[22]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(UNSCRAMBLED_DATA_OUT[23]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(UNSCRAMBLED_DATA_OUT[24]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(UNSCRAMBLED_DATA_OUT[25]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(UNSCRAMBLED_DATA_OUT[26]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(UNSCRAMBLED_DATA_OUT[27]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(UNSCRAMBLED_DATA_OUT[28]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(UNSCRAMBLED_DATA_OUT[29]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(UNSCRAMBLED_DATA_OUT[2]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(UNSCRAMBLED_DATA_OUT[30]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(UNSCRAMBLED_DATA_OUT[31]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(UNSCRAMBLED_DATA_OUT[32]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(UNSCRAMBLED_DATA_OUT[33]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(UNSCRAMBLED_DATA_OUT[34]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(UNSCRAMBLED_DATA_OUT[35]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(UNSCRAMBLED_DATA_OUT[36]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(UNSCRAMBLED_DATA_OUT[37]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(UNSCRAMBLED_DATA_OUT[38]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(UNSCRAMBLED_DATA_OUT[39]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(UNSCRAMBLED_DATA_OUT[3]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(UNSCRAMBLED_DATA_OUT[40]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(UNSCRAMBLED_DATA_OUT[41]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(UNSCRAMBLED_DATA_OUT[42]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(UNSCRAMBLED_DATA_OUT[43]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(UNSCRAMBLED_DATA_OUT[44]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(UNSCRAMBLED_DATA_OUT[45]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(UNSCRAMBLED_DATA_OUT[46]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(UNSCRAMBLED_DATA_OUT[47]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(UNSCRAMBLED_DATA_OUT[48]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(UNSCRAMBLED_DATA_OUT[49]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(UNSCRAMBLED_DATA_OUT[4]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(UNSCRAMBLED_DATA_OUT[50]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(UNSCRAMBLED_DATA_OUT[51]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(UNSCRAMBLED_DATA_OUT[52]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(UNSCRAMBLED_DATA_OUT[53]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(UNSCRAMBLED_DATA_OUT[54]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(UNSCRAMBLED_DATA_OUT[55]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(UNSCRAMBLED_DATA_OUT[56]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(UNSCRAMBLED_DATA_OUT[57]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(UNSCRAMBLED_DATA_OUT[58]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(UNSCRAMBLED_DATA_OUT[59]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(UNSCRAMBLED_DATA_OUT[5]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(UNSCRAMBLED_DATA_OUT[60]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(UNSCRAMBLED_DATA_OUT[61]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(UNSCRAMBLED_DATA_OUT[62]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(UNSCRAMBLED_DATA_OUT[63]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(UNSCRAMBLED_DATA_OUT[6]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(UNSCRAMBLED_DATA_OUT[7]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(UNSCRAMBLED_DATA_OUT[8]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(UNSCRAMBLED_DATA_OUT[9]),
        .R(\descrambler[57]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_ERR_DETECT" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_ERR_DETECT
   (soft_err_i,
    hard_err_i,
    ready_r_reg0,
    rx_header_err_i,
    user_clk,
    enable_err_detect_i,
    illegal_btf_i,
    Q,
    master_do_rd_en,
    ENABLE_ERR_DETECT_reg,
    SYSTEM_RESET_reg);
  output soft_err_i;
  output hard_err_i;
  output ready_r_reg0;
  input rx_header_err_i;
  input user_clk;
  input enable_err_detect_i;
  input illegal_btf_i;
  input [0:0]Q;
  input master_do_rd_en;
  input ENABLE_ERR_DETECT_reg;
  input SYSTEM_RESET_reg;

  wire ENABLE_ERR_DETECT_reg;
  wire [0:0]Q;
  wire SOFT_ERR0__0;
  wire SYSTEM_RESET_reg;
  wire enable_err_detect_i;
  wire hard_err_i;
  wire illegal_btf_i;
  wire master_do_rd_en;
  wire ready_r_reg0;
  wire rx_header_err_i;
  wire rx_header_err_r;
  wire soft_err_i;
  wire user_clk;

  FDRE HARD_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ENABLE_ERR_DETECT_reg),
        .Q(hard_err_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    SOFT_ERR0
       (.I0(enable_err_detect_i),
        .I1(illegal_btf_i),
        .I2(Q),
        .I3(master_do_rd_en),
        .I4(rx_header_err_r),
        .O(SOFT_ERR0__0));
  FDRE SOFT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SOFT_ERR0__0),
        .Q(soft_err_i),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    ready_r_i_1
       (.I0(hard_err_i),
        .I1(SYSTEM_RESET_reg),
        .O(ready_r_reg0));
  FDRE rx_header_err_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_header_err_i),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_GLOBAL_LOGIC" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_GLOBAL_LOGIC
   (reset_lanes_i,
    gen_na_idles_i,
    channel_up,
    channel_up_tx_if,
    gen_ch_bond_i,
    hard_err,
    GEN_SEP_reg,
    R0,
    soft_err_reg,
    rx_sep_c,
    SR,
    reset_lanes_c,
    user_clk,
    wait_for_lane_up_r0,
    remote_ready_i,
    got_idles_i,
    SYSTEM_RESET_reg,
    extend_cc_r1,
    hard_err_i,
    s_axi_tx_tready_reg,
    soft_err_i,
    D);
  output reset_lanes_i;
  output gen_na_idles_i;
  output channel_up;
  output channel_up_tx_if;
  output gen_ch_bond_i;
  output hard_err;
  output GEN_SEP_reg;
  output R0;
  output soft_err_reg;
  output rx_sep_c;
  output SR;
  input reset_lanes_c;
  input user_clk;
  input wait_for_lane_up_r0;
  input remote_ready_i;
  input got_idles_i;
  input SYSTEM_RESET_reg;
  input extend_cc_r1;
  input hard_err_i;
  input s_axi_tx_tready_reg;
  input soft_err_i;
  input [0:0]D;

  wire [0:0]D;
  wire GEN_SEP_reg;
  wire R0;
  wire SR;
  wire SYSTEM_RESET_reg;
  wire channel_up;
  wire channel_up_tx_if;
  wire extend_cc_r1;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire got_idles_i;
  wire hard_err;
  wire hard_err_i;
  wire remote_ready_i;
  wire reset_lanes_c;
  wire reset_lanes_i;
  wire rx_sep_c;
  wire s_axi_tx_tready_reg;
  wire soft_err_i;
  wire soft_err_reg;
  wire user_clk;
  wire wait_for_lane_up_r0;

  aurora_64b66b_25p78G_aurora_64b66b_25p78G_CHANNEL_BOND_GEN channel_bond_gen_i
       (.CHANNEL_UP_TX_IF_reg(channel_up_tx_if),
        .SYSTEM_RESET_reg(SYSTEM_RESET_reg),
        .extend_cc_r1(extend_cc_r1),
        .gen_ch_bond_i(gen_ch_bond_i),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_CHANNEL_ERR_DETECT channel_err_detect_i
       (.hard_err(hard_err),
        .hard_err_i(hard_err_i),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_CHANNEL_INIT_SM channel_init_sm_i
       (.D(D),
        .GEN_SEP_reg(GEN_SEP_reg),
        .R0(R0),
        .SR(gen_na_idles_i),
        .SYSTEM_RESET_reg(SYSTEM_RESET_reg),
        .channel_up(channel_up),
        .count_13d_flop_r_reg(SR),
        .got_idles_i(got_idles_i),
        .remote_ready_i(remote_ready_i),
        .reset_lanes_c(reset_lanes_c),
        .reset_lanes_i(reset_lanes_i),
        .rx_sep_c(rx_sep_c),
        .s_axi_tx_tready_reg(s_axi_tx_tready_reg),
        .soft_err_i(soft_err_i),
        .soft_err_reg(channel_up_tx_if),
        .soft_err_reg_0(soft_err_reg),
        .user_clk(user_clk),
        .wait_for_lane_up_r0(wait_for_lane_up_r0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_LANE_INIT_SM" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_LANE_INIT_SM
   (\lane_up[0] ,
    rxreset_for_lanes_q_reg,
    enable_err_detect_i,
    s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg,
    in0,
    RX_NEG_OUT_reg,
    user_clk,
    SYSTEM_RESET_reg,
    reset_count_r0,
    ready_r_reg0,
    reset_lanes_i,
    rx_lossofsync_i);
  output \lane_up[0] ;
  output rxreset_for_lanes_q_reg;
  output enable_err_detect_i;
  output s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg;
  output in0;
  input RX_NEG_OUT_reg;
  input user_clk;
  input SYSTEM_RESET_reg;
  input reset_count_r0;
  input ready_r_reg0;
  input reset_lanes_i;
  input rx_lossofsync_i;

  wire RX_NEG_OUT_reg;
  wire SYSTEM_RESET_reg;
  wire align_r;
  wire align_r_i_2_n_0;
  wire begin_r;
  wire begin_r_i_2_n_0;
  wire check_polarity_r_i_1_n_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire in0;
  wire \lane_up[0] ;
  wire next_align_c;
  wire next_begin_c;
  wire \next_begin_c_inferred__1/i__n_0 ;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in;
  wire polarity_r;
  wire polarity_r_i_2_n_0;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1_n_0;
  wire ready_r;
  wire ready_r_reg0;
  wire reset_count_r;
  wire reset_count_r0;
  wire reset_lanes_i;
  wire rst_r_i_2_n_0;
  wire rx_lossofsync_i;
  wire rx_polarity_dlyd_i;
  wire rxreset_for_lanes_q_reg;
  wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire user_clk;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_lane_0_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT3 #(
    .INIT(8'h01)) 
    align_r_i_1
       (.I0(polarity_r),
        .I1(ready_r),
        .I2(align_r_i_2_n_0),
        .O(next_align_c));
  LUT6 #(
    .INIT(64'hFFFFFCFFFFFFF7F7)) 
    align_r_i_2
       (.I0(rx_lossofsync_i),
        .I1(align_r),
        .I2(begin_r),
        .I3(count_8d_done_r),
        .I4(reset_lanes_i),
        .I5(rxreset_for_lanes_q_reg),
        .O(align_r_i_2_n_0));
  FDRE align_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFDFDF555)) 
    begin_r_i_2
       (.I0(\next_begin_c_inferred__1/i__n_0 ),
        .I1(rx_lossofsync_i),
        .I2(reset_lanes_i),
        .I3(align_r),
        .I4(ready_r),
        .O(begin_r_i_2_n_0));
  FDSE begin_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hDC)) 
    check_polarity_r_i_1
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(in0),
        .O(check_polarity_r_i_1_n_0));
  FDRE check_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(check_polarity_r_i_1_n_0),
        .Q(in0),
        .R(SYSTEM_RESET_reg));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \counter1_r[0]_i_1 
       (.I0(count_8d_done_r),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \counter1_r[1]_i_1 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .I2(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(\lane_up[0] ),
        .R(SYSTEM_RESET_reg));
  LUT5 #(
    .INIT(32'h00010116)) 
    \next_begin_c_inferred__1/i_ 
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rxreset_for_lanes_q_reg),
        .I4(begin_r),
        .O(\next_begin_c_inferred__1/i__n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    polarity_r_i_1
       (.I0(ready_r),
        .I1(rxreset_for_lanes_q_reg),
        .I2(begin_r),
        .I3(polarity_r_i_2_n_0),
        .O(next_polarity_c));
  LUT5 #(
    .INIT(32'hFFFCFBFB)) 
    polarity_r_i_2
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(reset_lanes_i),
        .I3(rx_lossofsync_i),
        .I4(align_r),
        .O(polarity_r_i_2_n_0));
  FDRE polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    prev_rx_polarity_r_i_1
       (.I0(s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg),
        .I1(rxreset_for_lanes_q_reg),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1_n_0),
        .Q(prev_rx_polarity_r),
        .R(SYSTEM_RESET_reg));
  FDRE ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  FDRE reset_count_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_count_r0),
        .Q(reset_count_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000B0F0000000000)) 
    rst_r_i_1
       (.I0(reset_lanes_i),
        .I1(count_8d_done_r),
        .I2(align_r),
        .I3(begin_r),
        .I4(rxreset_for_lanes_q_reg),
        .I5(rst_r_i_2_n_0),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rst_r_i_2
       (.I0(ready_r),
        .I1(polarity_r),
        .O(rst_r_i_2_n_0));
  FDRE rst_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rxreset_for_lanes_q_reg),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg),
        .R(1'b0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync u_cdc_rxlossofsync_in
       (.CC_RXLOSSOFSYNC_OUT_reg(begin_r_i_2_n_0),
        .RX_NEG_OUT_reg(RX_NEG_OUT_reg),
        .SYSTEM_RESET_reg(SYSTEM_RESET_reg),
        .align_r(align_r),
        .begin_r(begin_r),
        .next_begin_c(next_begin_c),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .ready_r(ready_r),
        .reset_lanes_i(reset_lanes_i),
        .rst_r_reg(rxreset_for_lanes_q_reg),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(u_cdc_rxlossofsync_in_n_2),
        .rx_polarity_r_reg_0(s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_MULTI_GT" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_MULTI_GT
   (rxusrclk_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gt_to_common_qpllreset_out,
    D,
    DRPDO_OUT,
    DRPRDY_OUT,
    gt_powergood,
    txn,
    txp,
    rxdatavalid_out,
    \pre_r1_rxheader_from_gtx_i_reg[1] ,
    rxheadervalid_out,
    tx_out_clk,
    E,
    bufg_gt_clr_out,
    new_gtx_rx_pcsreset_comb0,
    init_clk,
    RESET,
    gtwiz_reset_rx_datapath_in,
    out,
    SCRAMBLED_DATA_OUT,
    DRPADDR_IN,
    DRPDI_IN,
    drpen_in,
    drpwe_in,
    gt_refclk1,
    rxn,
    rxp,
    loopback,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_rxcdrovrden_in,
    RXGEARBOXSLIP_OUT_reg,
    s_level_out_d3_reg,
    Q,
    \txseq_counter_i_reg[6] ,
    sync_clk,
    user_clk,
    mmcm_not_locked,
    fsm_resetdone_to_rxreset_in,
    fsm_resetdone_to_new_gtx_rx_comb);
  output rxusrclk_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output gt_to_common_qpllreset_out;
  output [63:0]D;
  output [15:0]DRPDO_OUT;
  output DRPRDY_OUT;
  output [0:0]gt_powergood;
  output txn;
  output txp;
  output [0:0]rxdatavalid_out;
  output [1:0]\pre_r1_rxheader_from_gtx_i_reg[1] ;
  output [0:0]rxheadervalid_out;
  output tx_out_clk;
  output [0:0]E;
  output bufg_gt_clr_out;
  output new_gtx_rx_pcsreset_comb0;
  input init_clk;
  input RESET;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input out;
  input [63:0]SCRAMBLED_DATA_OUT;
  input [9:0]DRPADDR_IN;
  input [15:0]DRPDI_IN;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input gt_refclk1;
  input rxn;
  input rxp;
  input [2:0]loopback;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_rxcdrovrden_in;
  input [0:0]RXGEARBOXSLIP_OUT_reg;
  input s_level_out_d3_reg;
  input [1:0]Q;
  input [6:0]\txseq_counter_i_reg[6] ;
  input sync_clk;
  input user_clk;
  input mmcm_not_locked;
  input fsm_resetdone_to_rxreset_in;
  input fsm_resetdone_to_new_gtx_rx_comb;

  wire [63:0]D;
  wire [9:0]DRPADDR_IN;
  wire [15:0]DRPDI_IN;
  wire [15:0]DRPDO_OUT;
  wire DRPRDY_OUT;
  wire [0:0]E;
  wire [1:0]Q;
  wire RESET;
  wire [0:0]RXGEARBOXSLIP_OUT_reg;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire aurora_64b66b_25p78G_gt_i_n_0;
  wire aurora_64b66b_25p78G_gt_i_n_101;
  wire aurora_64b66b_25p78G_gt_i_n_105;
  wire aurora_64b66b_25p78G_gt_i_n_106;
  wire aurora_64b66b_25p78G_gt_i_n_107;
  wire aurora_64b66b_25p78G_gt_i_n_118;
  wire aurora_64b66b_25p78G_gt_i_n_119;
  wire aurora_64b66b_25p78G_gt_i_n_120;
  wire aurora_64b66b_25p78G_gt_i_n_121;
  wire aurora_64b66b_25p78G_gt_i_n_124;
  wire aurora_64b66b_25p78G_gt_i_n_125;
  wire aurora_64b66b_25p78G_gt_i_n_127;
  wire aurora_64b66b_25p78G_gt_i_n_128;
  wire aurora_64b66b_25p78G_gt_i_n_130;
  wire aurora_64b66b_25p78G_gt_i_n_68;
  wire aurora_64b66b_25p78G_gt_i_n_69;
  wire aurora_64b66b_25p78G_gt_i_n_70;
  wire aurora_64b66b_25p78G_gt_i_n_71;
  wire aurora_64b66b_25p78G_gt_i_n_72;
  wire aurora_64b66b_25p78G_gt_i_n_73;
  wire aurora_64b66b_25p78G_gt_i_n_74;
  wire aurora_64b66b_25p78G_gt_i_n_75;
  wire aurora_64b66b_25p78G_gt_i_n_76;
  wire aurora_64b66b_25p78G_gt_i_n_77;
  wire aurora_64b66b_25p78G_gt_i_n_78;
  wire aurora_64b66b_25p78G_gt_i_n_79;
  wire aurora_64b66b_25p78G_gt_i_n_80;
  wire aurora_64b66b_25p78G_gt_i_n_81;
  wire aurora_64b66b_25p78G_gt_i_n_82;
  wire aurora_64b66b_25p78G_gt_i_n_83;
  wire bufg_gt_clr_out;
  wire clear;
  wire [0:0]drpen_in;
  wire [0:0]drpwe_in;
  wire \fabric_pcs_rst_extend_cntr[9]_i_3_n_0 ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[0] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[1] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[2] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[3] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[4] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[5] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[6] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[7] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[8] ;
  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire fsm_resetdone_to_rxreset_in;
  wire [0:0]gt_powergood;
  wire gt_qpllclk_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_refclk1;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_userclk_rx_active_in;
  wire gtwiz_userclk_rx_reset_in;
  wire gtwiz_userclk_rx_reset_in_r;
  wire gtwiz_userclk_tx_active_in;
  wire init_clk;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mmcm_not_locked;
  wire new_gtx_rx_pcsreset_comb0;
  wire out;
  wire [9:0]p_0_in;
  wire p_0_in_0;
  wire [7:0]p_0_in__0;
  wire [7:0]p_0_in__2;
  wire [1:0]\pre_r1_rxheader_from_gtx_i_reg[1] ;
  wire [0:0]rxdatavalid_out;
  wire [0:0]rxheadervalid_out;
  wire rxn;
  wire rxp;
  wire rxusrclk_out;
  wire s_level_out_d3_reg;
  wire sync_clk;
  wire tx_out_clk;
  wire txn;
  wire txp;
  wire txpmaresetdone_out;
  wire [6:0]\txseq_counter_i_reg[6] ;
  wire ultrascale_rx_userclk_n_1;
  wire user_clk;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ;
  wire [1:1]NLW_aurora_64b66b_25p78G_gt_i_rxdatavalid_out_UNCONNECTED;
  wire [5:2]NLW_aurora_64b66b_25p78G_gt_i_rxheader_out_UNCONNECTED;
  wire [1:1]NLW_aurora_64b66b_25p78G_gt_i_rxheadervalid_out_UNCONNECTED;
  wire [1:0]NLW_aurora_64b66b_25p78G_gt_i_rxstartofseq_out_UNCONNECTED;

  (* CHECK_LICENSE_TYPE = "aurora_64b66b_25p78G_gt,aurora_64b66b_25p78G_gt_gtwizard_top,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "aurora_64b66b_25p78G_gt_gtwizard_top,Vivado 2017.3.1" *) 
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt aurora_64b66b_25p78G_gt_i
       (.dmonitorout_out({aurora_64b66b_25p78G_gt_i_n_68,aurora_64b66b_25p78G_gt_i_n_69,aurora_64b66b_25p78G_gt_i_n_70,aurora_64b66b_25p78G_gt_i_n_71,aurora_64b66b_25p78G_gt_i_n_72,aurora_64b66b_25p78G_gt_i_n_73,aurora_64b66b_25p78G_gt_i_n_74,aurora_64b66b_25p78G_gt_i_n_75,aurora_64b66b_25p78G_gt_i_n_76,aurora_64b66b_25p78G_gt_i_n_77,aurora_64b66b_25p78G_gt_i_n_78,aurora_64b66b_25p78G_gt_i_n_79,aurora_64b66b_25p78G_gt_i_n_80,aurora_64b66b_25p78G_gt_i_n_81,aurora_64b66b_25p78G_gt_i_n_82,aurora_64b66b_25p78G_gt_i_n_83}),
        .drpaddr_in(DRPADDR_IN),
        .drpclk_in(init_clk),
        .drpdi_in(DRPDI_IN),
        .drpdo_out(DRPDO_OUT),
        .drpen_in(drpen_in),
        .drprdy_out(DRPRDY_OUT),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(aurora_64b66b_25p78G_gt_i_n_101),
        .eyescanreset_in(1'b0),
        .eyescantrigger_in(1'b0),
        .gtpowergood_out(gt_powergood),
        .gtrefclk0_in(gt_refclk1),
        .gtwiz_reset_all_in(RESET),
        .gtwiz_reset_clk_freerun_in(init_clk),
        .gtwiz_reset_qpll0lock_in(out),
        .gtwiz_reset_qpll0reset_out(gt_to_common_qpllreset_out),
        .gtwiz_reset_rx_cdr_stable_out(aurora_64b66b_25p78G_gt_i_n_0),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(RESET),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userdata_rx_out(D),
        .gtwiz_userdata_tx_in(SCRAMBLED_DATA_OUT),
        .gtyrxn_in(rxn),
        .gtyrxp_in(rxp),
        .gtytxn_out(txn),
        .gtytxp_out(txp),
        .loopback_in(loopback),
        .lopt(lopt),
        .lopt_1(gtwiz_userclk_rx_reset_in_r),
        .lopt_2(lopt_1),
        .lopt_3(lopt_2),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0clk_in(gt_qpllclk_quad1_in),
        .qpll0refclk_in(gt_qpllrefclk_quad1_in),
        .qpll1clk_in(1'b0),
        .qpll1refclk_in(1'b0),
        .rxbufreset_in(1'b0),
        .rxbufstatus_out({aurora_64b66b_25p78G_gt_i_n_105,aurora_64b66b_25p78G_gt_i_n_106,aurora_64b66b_25p78G_gt_i_n_107}),
        .rxcdrhold_in(1'b0),
        .rxcdrovrden_in(gt_rxcdrovrden_in),
        .rxdatavalid_out({NLW_aurora_64b66b_25p78G_gt_i_rxdatavalid_out_UNCONNECTED[1],rxdatavalid_out}),
        .rxdfelpmreset_in(1'b0),
        .rxgearboxslip_in(RXGEARBOXSLIP_OUT_reg),
        .rxheader_out({NLW_aurora_64b66b_25p78G_gt_i_rxheader_out_UNCONNECTED[5:2],\pre_r1_rxheader_from_gtx_i_reg[1] }),
        .rxheadervalid_out({NLW_aurora_64b66b_25p78G_gt_i_rxheadervalid_out_UNCONNECTED[1],rxheadervalid_out}),
        .rxlpmen_in(1'b0),
        .rxoutclk_out(aurora_64b66b_25p78G_gt_i_n_118),
        .rxpcsreset_in(1'b0),
        .rxpmareset_in(1'b0),
        .rxpmaresetdone_out(aurora_64b66b_25p78G_gt_i_n_119),
        .rxpolarity_in(s_level_out_d3_reg),
        .rxprbscntreset_in(1'b0),
        .rxprbserr_out(aurora_64b66b_25p78G_gt_i_n_120),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .rxresetdone_out(aurora_64b66b_25p78G_gt_i_n_121),
        .rxstartofseq_out(NLW_aurora_64b66b_25p78G_gt_i_rxstartofseq_out_UNCONNECTED[1:0]),
        .rxusrclk2_in(rxusrclk_out),
        .rxusrclk_in(rxusrclk_out),
        .txbufstatus_out({aurora_64b66b_25p78G_gt_i_n_124,aurora_64b66b_25p78G_gt_i_n_125}),
        .txdiffctrl_in({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,Q}),
        .txinhibit_in(1'b0),
        .txoutclk_out(tx_out_clk),
        .txoutclkfabric_out(aurora_64b66b_25p78G_gt_i_n_127),
        .txoutclkpcs_out(aurora_64b66b_25p78G_gt_i_n_128),
        .txpcsreset_in(1'b0),
        .txpmareset_in(1'b0),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(1'b0),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprbsforceerr_in(1'b0),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txresetdone_out(aurora_64b66b_25p78G_gt_i_n_130),
        .txsequence_in(\txseq_counter_i_reg[6] ),
        .txusrclk2_in(user_clk),
        .txusrclk_in(sync_clk));
  LUT1 #(
    .INIT(2'h1)) 
    bufg_gt_clr_out_INST_0
       (.I0(txpmaresetdone_out),
        .O(bufg_gt_clr_out));
  LUT1 #(
    .INIT(2'h1)) 
    \fabric_pcs_rst_extend_cntr[0]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \fabric_pcs_rst_extend_cntr[1]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \fabric_pcs_rst_extend_cntr[2]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fabric_pcs_rst_extend_cntr[3]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \fabric_pcs_rst_extend_cntr[4]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \fabric_pcs_rst_extend_cntr[5]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I5(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \fabric_pcs_rst_extend_cntr[6]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I1(\fabric_pcs_rst_extend_cntr[9]_i_3_n_0 ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \fabric_pcs_rst_extend_cntr[7]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I1(\fabric_pcs_rst_extend_cntr[9]_i_3_n_0 ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fabric_pcs_rst_extend_cntr[8]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I2(\fabric_pcs_rst_extend_cntr[9]_i_3_n_0 ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .O(p_0_in[8]));
  LUT4 #(
    .INIT(16'h8000)) 
    \fabric_pcs_rst_extend_cntr[9]_i_2 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I1(\fabric_pcs_rst_extend_cntr[9]_i_3_n_0 ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .O(p_0_in[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \fabric_pcs_rst_extend_cntr[9]_i_3 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I5(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .O(\fabric_pcs_rst_extend_cntr[9]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[0] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[0]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[1] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[1]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[2] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[2]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[3] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[3]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[4] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[4]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[5] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[5]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[6] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[6]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[7] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[7]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[8] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[8]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[9] 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in[9]),
        .Q(p_0_in_0),
        .R(clear));
  LUT1 #(
    .INIT(2'h1)) 
    gtwiz_userclk_rx_reset_in_r_i_1
       (.I0(aurora_64b66b_25p78G_gt_i_n_119),
        .O(gtwiz_userclk_rx_reset_in));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_userclk_rx_reset_in_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_reset_in),
        .Q(gtwiz_userclk_rx_reset_in_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hDF)) 
    new_gtx_rx_pcsreset_comb_i_1
       (.I0(gtwiz_userclk_rx_active_in),
        .I1(fsm_resetdone_to_rxreset_in),
        .I2(fsm_resetdone_to_new_gtx_rx_comb),
        .O(new_gtx_rx_pcsreset_comb0));
  LUT1 #(
    .INIT(2'h1)) 
    prmry_in_inferred_i_1__0
       (.I0(p_0_in_0),
        .O(E));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_27 u_rst_gtwiz_userclk_tx_active_out
       (.SR(clear),
        .mmcm_not_locked(mmcm_not_locked),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_ultrascale_rx_userclk ultrascale_rx_userclk
       (.SR(ultrascale_rx_userclk_n_1),
        .gtwiz_userclk_rx_reset_in_r(gtwiz_userclk_rx_reset_in_r),
        .init_clk(init_clk),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .rxoutclk_out(aurora_64b66b_25p78G_gt_i_n_118),
        .rxusrclk2_in(rxusrclk_out));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \usrclk_rx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \usrclk_rx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \usrclk_rx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \usrclk_rx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__2[5]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__2[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_2 
       (.I0(gtwiz_userclk_rx_active_in),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_3 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__2[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_4 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[0] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[0]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .R(ultrascale_rx_userclk_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[1] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[1]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .R(ultrascale_rx_userclk_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[2] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[2]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .R(ultrascale_rx_userclk_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[3] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[3]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .R(ultrascale_rx_userclk_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[4] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[4]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .R(ultrascale_rx_userclk_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[5] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[5]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .R(ultrascale_rx_userclk_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[6] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[6]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .R(ultrascale_rx_userclk_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[7] 
       (.C(rxusrclk_out),
        .CE(\usrclk_rx_active_in_extend_cntr[7]_i_2_n_0 ),
        .D(p_0_in__2[7]),
        .Q(gtwiz_userclk_rx_active_in),
        .R(ultrascale_rx_userclk_n_1));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_tx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_tx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \usrclk_tx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \usrclk_tx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \usrclk_tx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \usrclk_tx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I5(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_tx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .I1(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .O(p_0_in__0[6]));
  LUT2 #(
    .INIT(4'h2)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_1 
       (.I0(p_0_in_0),
        .I1(gtwiz_userclk_tx_active_in),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_2 
       (.I0(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__0[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_3 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I5(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[0] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[0]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[1] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[1]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[2] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[2]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[3] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[3]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[4] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[4]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[5] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[5]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[6] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[6]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[7] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .D(p_0_in__0[7]),
        .Q(gtwiz_userclk_tx_active_in),
        .R(clear));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_RESET_LOGIC" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_RESET_LOGIC
   (sys_reset_out,
    wait_for_lane_up_r0,
    reset_count_r0,
    reset_lanes_c,
    stg3_reg,
    link_reset_out,
    power_down,
    sysreset_to_core_sync,
    user_clk,
    lane_up,
    tx_reset_i,
    gen_na_idles_i);
  output sys_reset_out;
  output wait_for_lane_up_r0;
  output reset_count_r0;
  output reset_lanes_c;
  input stg3_reg;
  input link_reset_out;
  input power_down;
  input sysreset_to_core_sync;
  input user_clk;
  input lane_up;
  input tx_reset_i;
  input gen_na_idles_i;

  wire SYSTEM_RESET0_n_0;
  wire fsm_resetdone_sync;
  wire gen_na_idles_i;
  wire lane_up;
  wire link_reset_out;
  wire link_reset_sync;
  wire power_down;
  wire power_down_sync;
  wire reset_count_r0;
  wire reset_lanes_c;
  wire stg3_reg;
  wire sys_reset_out;
  wire sysreset_to_core_sync;
  wire tx_reset_i;
  wire user_clk;
  wire wait_for_lane_up_r0;

  LUT4 #(
    .INIT(16'hFFFD)) 
    SYSTEM_RESET0
       (.I0(fsm_resetdone_sync),
        .I1(power_down_sync),
        .I2(sysreset_to_core_sync),
        .I3(link_reset_sync),
        .O(SYSTEM_RESET0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    SYSTEM_RESET_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SYSTEM_RESET0_n_0),
        .Q(sys_reset_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    reset_count_r_i_1
       (.I0(sys_reset_out),
        .I1(tx_reset_i),
        .O(reset_count_r0));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    reset_lanes_flop_0_i_i_1
       (.I0(sys_reset_out),
        .I1(gen_na_idles_i),
        .I2(lane_up),
        .O(reset_lanes_c));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_1 u_link_rst_sync
       (.link_reset_out(link_reset_out),
        .link_reset_sync(link_reset_sync),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_2 u_pd_sync
       (.power_down(power_down),
        .power_down_sync(power_down_sync),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_3 u_rst_done_sync
       (.fsm_resetdone_sync(fsm_resetdone_sync),
        .stg3_reg_0(stg3_reg),
        .user_clk(user_clk));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'hB)) 
    wait_for_lane_up_r_i_1
       (.I0(sys_reset_out),
        .I1(lane_up),
        .O(wait_for_lane_up_r0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_RX_LL" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_RX_LL
   (m_axi_rx_tvalid,
    m_axi_rx_tlast,
    m_axi_rx_tdata,
    m_axi_rx_tkeep,
    got_cc_i,
    user_clk,
    rx_pe_data_v_c,
    rxdatavalid_to_ll_i,
    rx_sep_c,
    SR,
    CHANNEL_UP_RX_IF_reg,
    E,
    D);
  output m_axi_rx_tvalid;
  output m_axi_rx_tlast;
  output [0:63]m_axi_rx_tdata;
  output [0:7]m_axi_rx_tkeep;
  input got_cc_i;
  input user_clk;
  input rx_pe_data_v_c;
  input rxdatavalid_to_ll_i;
  input rx_sep_c;
  input SR;
  input CHANNEL_UP_RX_IF_reg;
  input [0:0]E;
  input [73:0]D;

  wire CHANNEL_UP_RX_IF_reg;
  wire [73:0]D;
  wire [0:0]E;
  wire SR;
  wire got_cc_i;
  wire [0:63]m_axi_rx_tdata;
  wire [0:7]m_axi_rx_tkeep;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tvalid;
  wire rx_pe_data_v_c;
  wire rx_sep_c;
  wire rxdatavalid_to_ll_i;
  wire user_clk;

  aurora_64b66b_25p78G_aurora_64b66b_25p78G_RX_LL_DATAPATH rx_ll_datapath_i
       (.CHANNEL_UP_RX_IF_reg(CHANNEL_UP_RX_IF_reg),
        .D(D),
        .E(E),
        .SR(SR),
        .got_cc_i(got_cc_i),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tkeep(m_axi_rx_tkeep),
        .m_axi_rx_tlast(m_axi_rx_tlast),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .rx_pe_data_v_c(rx_pe_data_v_c),
        .rx_sep_c(rx_sep_c),
        .rxdatavalid_to_ll_i(rxdatavalid_to_ll_i),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_RX_LL_DATAPATH" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_RX_LL_DATAPATH
   (m_axi_rx_tvalid,
    m_axi_rx_tlast,
    m_axi_rx_tdata,
    m_axi_rx_tkeep,
    got_cc_i,
    user_clk,
    rx_pe_data_v_c,
    rxdatavalid_to_ll_i,
    rx_sep_c,
    SR,
    CHANNEL_UP_RX_IF_reg,
    E,
    D);
  output m_axi_rx_tvalid;
  output m_axi_rx_tlast;
  output [0:63]m_axi_rx_tdata;
  output [0:7]m_axi_rx_tkeep;
  input got_cc_i;
  input user_clk;
  input rx_pe_data_v_c;
  input rxdatavalid_to_ll_i;
  input rx_sep_c;
  input SR;
  input CHANNEL_UP_RX_IF_reg;
  input [0:0]E;
  input [73:0]D;

  wire CHANNEL_UP_RX_IF_reg;
  wire [73:0]D;
  wire [0:0]E;
  wire SR;
  wire got_cc_i;
  wire hold_valid;
  wire hold_valid_r;
  wire hold_valid_r_i_3_n_0;
  wire [0:63]m_axi_rx_tdata;
  wire \m_axi_rx_tdata[0]_i_3_n_0 ;
  wire [0:7]m_axi_rx_tkeep;
  wire \m_axi_rx_tkeep[0]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[0]_i_2_n_0 ;
  wire \m_axi_rx_tkeep[1]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[2]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[3]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[4]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[5]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[6]_i_1_n_0 ;
  wire \m_axi_rx_tkeep[7]_i_1_n_0 ;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tlast_i_1_n_0;
  wire m_axi_rx_tvalid;
  wire m_axi_rx_tvalid_i_1_n_0;
  wire p_0_in;
  wire [63:0]pipe2_rx_pe_data_r;
  wire pipe2_rx_sep_r;
  wire \raw_data_r2_reg_n_0_[0] ;
  wire \raw_data_r2_reg_n_0_[2] ;
  wire \raw_data_r2_reg_n_0_[3] ;
  wire \raw_data_r2_reg_n_0_[4] ;
  wire \raw_data_r2_reg_n_0_[5] ;
  wire \raw_data_r2_reg_n_0_[6] ;
  wire \raw_data_r2_reg_n_0_[7] ;
  wire \raw_data_r2_reg_n_0_[8] ;
  wire \raw_data_r2_reg_n_0_[9] ;
  wire \raw_data_r_reg_n_0_[0] ;
  wire \raw_data_r_reg_n_0_[10] ;
  wire \raw_data_r_reg_n_0_[11] ;
  wire \raw_data_r_reg_n_0_[12] ;
  wire \raw_data_r_reg_n_0_[13] ;
  wire \raw_data_r_reg_n_0_[14] ;
  wire \raw_data_r_reg_n_0_[15] ;
  wire \raw_data_r_reg_n_0_[16] ;
  wire \raw_data_r_reg_n_0_[17] ;
  wire \raw_data_r_reg_n_0_[18] ;
  wire \raw_data_r_reg_n_0_[19] ;
  wire \raw_data_r_reg_n_0_[1] ;
  wire \raw_data_r_reg_n_0_[20] ;
  wire \raw_data_r_reg_n_0_[21] ;
  wire \raw_data_r_reg_n_0_[22] ;
  wire \raw_data_r_reg_n_0_[23] ;
  wire \raw_data_r_reg_n_0_[24] ;
  wire \raw_data_r_reg_n_0_[25] ;
  wire \raw_data_r_reg_n_0_[26] ;
  wire \raw_data_r_reg_n_0_[27] ;
  wire \raw_data_r_reg_n_0_[28] ;
  wire \raw_data_r_reg_n_0_[29] ;
  wire \raw_data_r_reg_n_0_[2] ;
  wire \raw_data_r_reg_n_0_[30] ;
  wire \raw_data_r_reg_n_0_[31] ;
  wire \raw_data_r_reg_n_0_[32] ;
  wire \raw_data_r_reg_n_0_[33] ;
  wire \raw_data_r_reg_n_0_[34] ;
  wire \raw_data_r_reg_n_0_[35] ;
  wire \raw_data_r_reg_n_0_[36] ;
  wire \raw_data_r_reg_n_0_[37] ;
  wire \raw_data_r_reg_n_0_[38] ;
  wire \raw_data_r_reg_n_0_[39] ;
  wire \raw_data_r_reg_n_0_[3] ;
  wire \raw_data_r_reg_n_0_[40] ;
  wire \raw_data_r_reg_n_0_[41] ;
  wire \raw_data_r_reg_n_0_[42] ;
  wire \raw_data_r_reg_n_0_[43] ;
  wire \raw_data_r_reg_n_0_[44] ;
  wire \raw_data_r_reg_n_0_[45] ;
  wire \raw_data_r_reg_n_0_[46] ;
  wire \raw_data_r_reg_n_0_[47] ;
  wire \raw_data_r_reg_n_0_[48] ;
  wire \raw_data_r_reg_n_0_[49] ;
  wire \raw_data_r_reg_n_0_[4] ;
  wire \raw_data_r_reg_n_0_[50] ;
  wire \raw_data_r_reg_n_0_[51] ;
  wire \raw_data_r_reg_n_0_[52] ;
  wire \raw_data_r_reg_n_0_[53] ;
  wire \raw_data_r_reg_n_0_[54] ;
  wire \raw_data_r_reg_n_0_[55] ;
  wire \raw_data_r_reg_n_0_[56] ;
  wire \raw_data_r_reg_n_0_[57] ;
  wire \raw_data_r_reg_n_0_[58] ;
  wire \raw_data_r_reg_n_0_[59] ;
  wire \raw_data_r_reg_n_0_[5] ;
  wire \raw_data_r_reg_n_0_[60] ;
  wire \raw_data_r_reg_n_0_[61] ;
  wire \raw_data_r_reg_n_0_[62] ;
  wire \raw_data_r_reg_n_0_[63] ;
  wire \raw_data_r_reg_n_0_[64] ;
  wire \raw_data_r_reg_n_0_[65] ;
  wire \raw_data_r_reg_n_0_[66] ;
  wire \raw_data_r_reg_n_0_[67] ;
  wire \raw_data_r_reg_n_0_[68] ;
  wire \raw_data_r_reg_n_0_[69] ;
  wire \raw_data_r_reg_n_0_[6] ;
  wire \raw_data_r_reg_n_0_[70] ;
  wire \raw_data_r_reg_n_0_[71] ;
  wire \raw_data_r_reg_n_0_[72] ;
  wire \raw_data_r_reg_n_0_[73] ;
  wire \raw_data_r_reg_n_0_[7] ;
  wire \raw_data_r_reg_n_0_[8] ;
  wire \raw_data_r_reg_n_0_[9] ;
  wire rx_cc_r1;
  wire rx_cc_r2;
  wire rx_ll_dv_r1;
  wire rx_ll_dv_r2;
  wire rx_pe_data_v_c;
  wire rx_pe_data_v_r;
  wire rx_pe_data_v_r2;
  wire rx_sep_c;
  wire rx_sep_r;
  wire rx_tvalid_c;
  wire rxdatavalid_to_ll_i;
  wire sep0_detect__0;
  wire user_clk;

  LUT5 #(
    .INIT(32'hFFFFF700)) 
    hold_valid_r_i_2
       (.I0(rx_ll_dv_r2),
        .I1(rx_pe_data_v_r2),
        .I2(rx_cc_r2),
        .I3(hold_valid_r),
        .I4(hold_valid_r_i_3_n_0),
        .O(hold_valid));
  LUT6 #(
    .INIT(64'hAAAA002AAAAAAAAA)) 
    hold_valid_r_i_3
       (.I0(rx_pe_data_v_r2),
        .I1(rx_sep_r),
        .I2(\raw_data_r_reg_n_0_[2] ),
        .I3(rx_pe_data_v_r),
        .I4(rx_cc_r1),
        .I5(rx_ll_dv_r1),
        .O(hold_valid_r_i_3_n_0));
  FDRE hold_valid_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(hold_valid),
        .Q(hold_valid_r),
        .R(SR));
  LUT6 #(
    .INIT(64'hEEEFEEEEEEEEEEEE)) 
    \m_axi_rx_tdata[0]_i_1 
       (.I0(sep0_detect__0),
        .I1(rx_pe_data_v_r2),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(hold_valid),
        .I5(\m_axi_rx_tdata[0]_i_3_n_0 ),
        .O(rx_tvalid_c));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rx_tdata[0]_i_2 
       (.I0(\raw_data_r_reg_n_0_[2] ),
        .I1(rx_sep_r),
        .O(sep0_detect__0));
  LUT3 #(
    .INIT(8'h40)) 
    \m_axi_rx_tdata[0]_i_3 
       (.I0(rx_cc_r1),
        .I1(rx_pe_data_v_r),
        .I2(rx_ll_dv_r1),
        .O(\m_axi_rx_tdata[0]_i_3_n_0 ));
  FDRE \m_axi_rx_tdata_reg[0] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[63]),
        .Q(m_axi_rx_tdata[0]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[10] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[53]),
        .Q(m_axi_rx_tdata[10]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[11] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[52]),
        .Q(m_axi_rx_tdata[11]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[12] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[51]),
        .Q(m_axi_rx_tdata[12]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[13] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[50]),
        .Q(m_axi_rx_tdata[13]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[14] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[49]),
        .Q(m_axi_rx_tdata[14]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[15] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[48]),
        .Q(m_axi_rx_tdata[15]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[16] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[47]),
        .Q(m_axi_rx_tdata[16]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[17] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[46]),
        .Q(m_axi_rx_tdata[17]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[18] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[45]),
        .Q(m_axi_rx_tdata[18]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[19] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[44]),
        .Q(m_axi_rx_tdata[19]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[1] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[62]),
        .Q(m_axi_rx_tdata[1]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[20] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[43]),
        .Q(m_axi_rx_tdata[20]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[21] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[42]),
        .Q(m_axi_rx_tdata[21]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[22] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[41]),
        .Q(m_axi_rx_tdata[22]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[23] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[40]),
        .Q(m_axi_rx_tdata[23]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[24] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[39]),
        .Q(m_axi_rx_tdata[24]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[25] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[38]),
        .Q(m_axi_rx_tdata[25]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[26] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[37]),
        .Q(m_axi_rx_tdata[26]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[27] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[36]),
        .Q(m_axi_rx_tdata[27]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[28] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[35]),
        .Q(m_axi_rx_tdata[28]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[29] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[34]),
        .Q(m_axi_rx_tdata[29]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[2] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[61]),
        .Q(m_axi_rx_tdata[2]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[30] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[33]),
        .Q(m_axi_rx_tdata[30]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[31] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[32]),
        .Q(m_axi_rx_tdata[31]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[32] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[31]),
        .Q(m_axi_rx_tdata[32]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[33] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[30]),
        .Q(m_axi_rx_tdata[33]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[34] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[29]),
        .Q(m_axi_rx_tdata[34]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[35] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[28]),
        .Q(m_axi_rx_tdata[35]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[36] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[27]),
        .Q(m_axi_rx_tdata[36]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[37] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[26]),
        .Q(m_axi_rx_tdata[37]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[38] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[25]),
        .Q(m_axi_rx_tdata[38]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[39] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[24]),
        .Q(m_axi_rx_tdata[39]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[3] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[60]),
        .Q(m_axi_rx_tdata[3]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[40] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[23]),
        .Q(m_axi_rx_tdata[40]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[41] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[22]),
        .Q(m_axi_rx_tdata[41]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[42] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[21]),
        .Q(m_axi_rx_tdata[42]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[43] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[20]),
        .Q(m_axi_rx_tdata[43]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[44] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[19]),
        .Q(m_axi_rx_tdata[44]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[45] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[18]),
        .Q(m_axi_rx_tdata[45]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[46] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[17]),
        .Q(m_axi_rx_tdata[46]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[47] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[16]),
        .Q(m_axi_rx_tdata[47]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[48] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[15]),
        .Q(m_axi_rx_tdata[48]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[49] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[14]),
        .Q(m_axi_rx_tdata[49]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[4] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[59]),
        .Q(m_axi_rx_tdata[4]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[50] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[13]),
        .Q(m_axi_rx_tdata[50]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[51] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[12]),
        .Q(m_axi_rx_tdata[51]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[52] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[11]),
        .Q(m_axi_rx_tdata[52]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[53] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[10]),
        .Q(m_axi_rx_tdata[53]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[54] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[9]),
        .Q(m_axi_rx_tdata[54]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[55] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[8]),
        .Q(m_axi_rx_tdata[55]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[56] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[7]),
        .Q(m_axi_rx_tdata[56]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[57] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[6]),
        .Q(m_axi_rx_tdata[57]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[58] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[5]),
        .Q(m_axi_rx_tdata[58]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[59] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[4]),
        .Q(m_axi_rx_tdata[59]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[5] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[58]),
        .Q(m_axi_rx_tdata[5]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[60] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[3]),
        .Q(m_axi_rx_tdata[60]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[61] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[2]),
        .Q(m_axi_rx_tdata[61]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[62] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[1]),
        .Q(m_axi_rx_tdata[62]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[63] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[0]),
        .Q(m_axi_rx_tdata[63]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[6] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[57]),
        .Q(m_axi_rx_tdata[6]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[7] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[56]),
        .Q(m_axi_rx_tdata[7]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[8] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[55]),
        .Q(m_axi_rx_tdata[8]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[9] 
       (.C(user_clk),
        .CE(rx_tvalid_c),
        .D(pipe2_rx_pe_data_r[54]),
        .Q(m_axi_rx_tdata[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00007077)) 
    \m_axi_rx_tkeep[0]_i_1 
       (.I0(\raw_data_r_reg_n_0_[2] ),
        .I1(rx_sep_r),
        .I2(\raw_data_r2_reg_n_0_[2] ),
        .I3(pipe2_rx_sep_r),
        .I4(\raw_data_r2_reg_n_0_[0] ),
        .O(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \m_axi_rx_tkeep[0]_i_2 
       (.I0(\raw_data_r2_reg_n_0_[9] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(\raw_data_r_reg_n_0_[9] ),
        .O(\m_axi_rx_tkeep[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \m_axi_rx_tkeep[1]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[8] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(\raw_data_r_reg_n_0_[8] ),
        .O(\m_axi_rx_tkeep[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \m_axi_rx_tkeep[2]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[7] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(\raw_data_r_reg_n_0_[7] ),
        .O(\m_axi_rx_tkeep[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \m_axi_rx_tkeep[3]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[6] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(\raw_data_r_reg_n_0_[6] ),
        .O(\m_axi_rx_tkeep[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \m_axi_rx_tkeep[4]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[5] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(\raw_data_r_reg_n_0_[5] ),
        .O(\m_axi_rx_tkeep[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \m_axi_rx_tkeep[5]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[4] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(\raw_data_r_reg_n_0_[4] ),
        .O(\m_axi_rx_tkeep[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAEFAA20)) 
    \m_axi_rx_tkeep[6]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[3] ),
        .I1(\raw_data_r2_reg_n_0_[2] ),
        .I2(pipe2_rx_sep_r),
        .I3(\raw_data_r2_reg_n_0_[0] ),
        .I4(\raw_data_r_reg_n_0_[3] ),
        .O(\m_axi_rx_tkeep[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABA0)) 
    \m_axi_rx_tkeep[7]_i_1 
       (.I0(\raw_data_r2_reg_n_0_[2] ),
        .I1(pipe2_rx_sep_r),
        .I2(\raw_data_r2_reg_n_0_[0] ),
        .I3(\raw_data_r_reg_n_0_[2] ),
        .O(\m_axi_rx_tkeep[7]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[0]_i_2_n_0 ),
        .Q(m_axi_rx_tkeep[0]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[1]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[1]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[2]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[2]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[3]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[3]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[4]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[4]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[5]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[5]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[6]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[6]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  FDSE \m_axi_rx_tkeep_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\m_axi_rx_tkeep[7]_i_1_n_0 ),
        .Q(m_axi_rx_tkeep[7]),
        .S(\m_axi_rx_tkeep[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA8880000)) 
    m_axi_rx_tlast_i_1
       (.I0(CHANNEL_UP_RX_IF_reg),
        .I1(p_0_in),
        .I2(rx_sep_r),
        .I3(\raw_data_r_reg_n_0_[2] ),
        .I4(rx_tvalid_c),
        .O(m_axi_rx_tlast_i_1_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    m_axi_rx_tlast_i_2
       (.I0(\raw_data_r2_reg_n_0_[2] ),
        .I1(pipe2_rx_sep_r),
        .I2(\raw_data_r2_reg_n_0_[0] ),
        .O(p_0_in));
  FDRE m_axi_rx_tlast_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(m_axi_rx_tlast_i_1_n_0),
        .Q(m_axi_rx_tlast),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEF000000FF000000)) 
    m_axi_rx_tvalid_i_1
       (.I0(pipe2_rx_sep_r),
        .I1(\raw_data_r2_reg_n_0_[0] ),
        .I2(hold_valid),
        .I3(rx_tvalid_c),
        .I4(CHANNEL_UP_RX_IF_reg),
        .I5(rx_pe_data_v_r2),
        .O(m_axi_rx_tvalid_i_1_n_0));
  FDRE m_axi_rx_tvalid_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(m_axi_rx_tvalid_i_1_n_0),
        .Q(m_axi_rx_tvalid),
        .R(1'b0));
  FDRE \raw_data_r2_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[0] ),
        .Q(\raw_data_r2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[10] ),
        .Q(pipe2_rx_pe_data_r[0]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[11] ),
        .Q(pipe2_rx_pe_data_r[1]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[12] ),
        .Q(pipe2_rx_pe_data_r[2]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[13] ),
        .Q(pipe2_rx_pe_data_r[3]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[14] ),
        .Q(pipe2_rx_pe_data_r[4]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[15] ),
        .Q(pipe2_rx_pe_data_r[5]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[16] ),
        .Q(pipe2_rx_pe_data_r[6]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[17] ),
        .Q(pipe2_rx_pe_data_r[7]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[18] ),
        .Q(pipe2_rx_pe_data_r[8]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[19] ),
        .Q(pipe2_rx_pe_data_r[9]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[1] ),
        .Q(pipe2_rx_sep_r),
        .R(1'b0));
  FDRE \raw_data_r2_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[20] ),
        .Q(pipe2_rx_pe_data_r[10]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[21] ),
        .Q(pipe2_rx_pe_data_r[11]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[22] ),
        .Q(pipe2_rx_pe_data_r[12]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[23] ),
        .Q(pipe2_rx_pe_data_r[13]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[24] ),
        .Q(pipe2_rx_pe_data_r[14]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[25] ),
        .Q(pipe2_rx_pe_data_r[15]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[26] ),
        .Q(pipe2_rx_pe_data_r[16]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[27] ),
        .Q(pipe2_rx_pe_data_r[17]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[28] ),
        .Q(pipe2_rx_pe_data_r[18]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[29] ),
        .Q(pipe2_rx_pe_data_r[19]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[2] ),
        .Q(\raw_data_r2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[30] ),
        .Q(pipe2_rx_pe_data_r[20]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[31] ),
        .Q(pipe2_rx_pe_data_r[21]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[32] ),
        .Q(pipe2_rx_pe_data_r[22]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[33] ),
        .Q(pipe2_rx_pe_data_r[23]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[34] ),
        .Q(pipe2_rx_pe_data_r[24]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[35] ),
        .Q(pipe2_rx_pe_data_r[25]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[36] ),
        .Q(pipe2_rx_pe_data_r[26]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[37] ),
        .Q(pipe2_rx_pe_data_r[27]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[38] ),
        .Q(pipe2_rx_pe_data_r[28]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[39] ),
        .Q(pipe2_rx_pe_data_r[29]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[3] ),
        .Q(\raw_data_r2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[40] ),
        .Q(pipe2_rx_pe_data_r[30]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[41] ),
        .Q(pipe2_rx_pe_data_r[31]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[42] ),
        .Q(pipe2_rx_pe_data_r[32]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[43] ),
        .Q(pipe2_rx_pe_data_r[33]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[44] ),
        .Q(pipe2_rx_pe_data_r[34]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[45] ),
        .Q(pipe2_rx_pe_data_r[35]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[46] ),
        .Q(pipe2_rx_pe_data_r[36]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[47] ),
        .Q(pipe2_rx_pe_data_r[37]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[48] ),
        .Q(pipe2_rx_pe_data_r[38]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[49] ),
        .Q(pipe2_rx_pe_data_r[39]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[4] ),
        .Q(\raw_data_r2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[50] ),
        .Q(pipe2_rx_pe_data_r[40]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[51] ),
        .Q(pipe2_rx_pe_data_r[41]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[52] ),
        .Q(pipe2_rx_pe_data_r[42]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[53] ),
        .Q(pipe2_rx_pe_data_r[43]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[54] ),
        .Q(pipe2_rx_pe_data_r[44]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[55] ),
        .Q(pipe2_rx_pe_data_r[45]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[56] ),
        .Q(pipe2_rx_pe_data_r[46]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[57] ),
        .Q(pipe2_rx_pe_data_r[47]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[58] ),
        .Q(pipe2_rx_pe_data_r[48]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[59] ),
        .Q(pipe2_rx_pe_data_r[49]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[5] ),
        .Q(\raw_data_r2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[60] ),
        .Q(pipe2_rx_pe_data_r[50]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[61] ),
        .Q(pipe2_rx_pe_data_r[51]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[62] ),
        .Q(pipe2_rx_pe_data_r[52]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[63] ),
        .Q(pipe2_rx_pe_data_r[53]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[64] ),
        .Q(pipe2_rx_pe_data_r[54]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[65] ),
        .Q(pipe2_rx_pe_data_r[55]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[66] ),
        .Q(pipe2_rx_pe_data_r[56]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[67] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[67] ),
        .Q(pipe2_rx_pe_data_r[57]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[68] ),
        .Q(pipe2_rx_pe_data_r[58]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[69] ),
        .Q(pipe2_rx_pe_data_r[59]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[6] ),
        .Q(\raw_data_r2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[70] ),
        .Q(pipe2_rx_pe_data_r[60]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[71] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[71] ),
        .Q(pipe2_rx_pe_data_r[61]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[72] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[72] ),
        .Q(pipe2_rx_pe_data_r[62]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[73] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[73] ),
        .Q(pipe2_rx_pe_data_r[63]),
        .R(1'b0));
  FDRE \raw_data_r2_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[7] ),
        .Q(\raw_data_r2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[8] ),
        .Q(\raw_data_r2_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \raw_data_r2_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\raw_data_r_reg_n_0_[9] ),
        .Q(\raw_data_r2_reg_n_0_[9] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[0] 
       (.C(user_clk),
        .CE(E),
        .D(D[0]),
        .Q(\raw_data_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[10] 
       (.C(user_clk),
        .CE(E),
        .D(D[10]),
        .Q(\raw_data_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[11] 
       (.C(user_clk),
        .CE(E),
        .D(D[11]),
        .Q(\raw_data_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[12] 
       (.C(user_clk),
        .CE(E),
        .D(D[12]),
        .Q(\raw_data_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[13] 
       (.C(user_clk),
        .CE(E),
        .D(D[13]),
        .Q(\raw_data_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[14] 
       (.C(user_clk),
        .CE(E),
        .D(D[14]),
        .Q(\raw_data_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[15] 
       (.C(user_clk),
        .CE(E),
        .D(D[15]),
        .Q(\raw_data_r_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[16] 
       (.C(user_clk),
        .CE(E),
        .D(D[16]),
        .Q(\raw_data_r_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[17] 
       (.C(user_clk),
        .CE(E),
        .D(D[17]),
        .Q(\raw_data_r_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[18] 
       (.C(user_clk),
        .CE(E),
        .D(D[18]),
        .Q(\raw_data_r_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[19] 
       (.C(user_clk),
        .CE(E),
        .D(D[19]),
        .Q(\raw_data_r_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[1] 
       (.C(user_clk),
        .CE(E),
        .D(D[1]),
        .Q(\raw_data_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[20] 
       (.C(user_clk),
        .CE(E),
        .D(D[20]),
        .Q(\raw_data_r_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[21] 
       (.C(user_clk),
        .CE(E),
        .D(D[21]),
        .Q(\raw_data_r_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[22] 
       (.C(user_clk),
        .CE(E),
        .D(D[22]),
        .Q(\raw_data_r_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[23] 
       (.C(user_clk),
        .CE(E),
        .D(D[23]),
        .Q(\raw_data_r_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[24] 
       (.C(user_clk),
        .CE(E),
        .D(D[24]),
        .Q(\raw_data_r_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[25] 
       (.C(user_clk),
        .CE(E),
        .D(D[25]),
        .Q(\raw_data_r_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[26] 
       (.C(user_clk),
        .CE(E),
        .D(D[26]),
        .Q(\raw_data_r_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[27] 
       (.C(user_clk),
        .CE(E),
        .D(D[27]),
        .Q(\raw_data_r_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[28] 
       (.C(user_clk),
        .CE(E),
        .D(D[28]),
        .Q(\raw_data_r_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[29] 
       (.C(user_clk),
        .CE(E),
        .D(D[29]),
        .Q(\raw_data_r_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[2] 
       (.C(user_clk),
        .CE(E),
        .D(D[2]),
        .Q(\raw_data_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[30] 
       (.C(user_clk),
        .CE(E),
        .D(D[30]),
        .Q(\raw_data_r_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[31] 
       (.C(user_clk),
        .CE(E),
        .D(D[31]),
        .Q(\raw_data_r_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[32] 
       (.C(user_clk),
        .CE(E),
        .D(D[32]),
        .Q(\raw_data_r_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[33] 
       (.C(user_clk),
        .CE(E),
        .D(D[33]),
        .Q(\raw_data_r_reg_n_0_[33] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[34] 
       (.C(user_clk),
        .CE(E),
        .D(D[34]),
        .Q(\raw_data_r_reg_n_0_[34] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[35] 
       (.C(user_clk),
        .CE(E),
        .D(D[35]),
        .Q(\raw_data_r_reg_n_0_[35] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[36] 
       (.C(user_clk),
        .CE(E),
        .D(D[36]),
        .Q(\raw_data_r_reg_n_0_[36] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[37] 
       (.C(user_clk),
        .CE(E),
        .D(D[37]),
        .Q(\raw_data_r_reg_n_0_[37] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[38] 
       (.C(user_clk),
        .CE(E),
        .D(D[38]),
        .Q(\raw_data_r_reg_n_0_[38] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[39] 
       (.C(user_clk),
        .CE(E),
        .D(D[39]),
        .Q(\raw_data_r_reg_n_0_[39] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[3] 
       (.C(user_clk),
        .CE(E),
        .D(D[3]),
        .Q(\raw_data_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[40] 
       (.C(user_clk),
        .CE(E),
        .D(D[40]),
        .Q(\raw_data_r_reg_n_0_[40] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[41] 
       (.C(user_clk),
        .CE(E),
        .D(D[41]),
        .Q(\raw_data_r_reg_n_0_[41] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[42] 
       (.C(user_clk),
        .CE(E),
        .D(D[42]),
        .Q(\raw_data_r_reg_n_0_[42] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[43] 
       (.C(user_clk),
        .CE(E),
        .D(D[43]),
        .Q(\raw_data_r_reg_n_0_[43] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[44] 
       (.C(user_clk),
        .CE(E),
        .D(D[44]),
        .Q(\raw_data_r_reg_n_0_[44] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[45] 
       (.C(user_clk),
        .CE(E),
        .D(D[45]),
        .Q(\raw_data_r_reg_n_0_[45] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[46] 
       (.C(user_clk),
        .CE(E),
        .D(D[46]),
        .Q(\raw_data_r_reg_n_0_[46] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[47] 
       (.C(user_clk),
        .CE(E),
        .D(D[47]),
        .Q(\raw_data_r_reg_n_0_[47] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[48] 
       (.C(user_clk),
        .CE(E),
        .D(D[48]),
        .Q(\raw_data_r_reg_n_0_[48] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[49] 
       (.C(user_clk),
        .CE(E),
        .D(D[49]),
        .Q(\raw_data_r_reg_n_0_[49] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[4] 
       (.C(user_clk),
        .CE(E),
        .D(D[4]),
        .Q(\raw_data_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[50] 
       (.C(user_clk),
        .CE(E),
        .D(D[50]),
        .Q(\raw_data_r_reg_n_0_[50] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[51] 
       (.C(user_clk),
        .CE(E),
        .D(D[51]),
        .Q(\raw_data_r_reg_n_0_[51] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[52] 
       (.C(user_clk),
        .CE(E),
        .D(D[52]),
        .Q(\raw_data_r_reg_n_0_[52] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[53] 
       (.C(user_clk),
        .CE(E),
        .D(D[53]),
        .Q(\raw_data_r_reg_n_0_[53] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[54] 
       (.C(user_clk),
        .CE(E),
        .D(D[54]),
        .Q(\raw_data_r_reg_n_0_[54] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[55] 
       (.C(user_clk),
        .CE(E),
        .D(D[55]),
        .Q(\raw_data_r_reg_n_0_[55] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[56] 
       (.C(user_clk),
        .CE(E),
        .D(D[56]),
        .Q(\raw_data_r_reg_n_0_[56] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[57] 
       (.C(user_clk),
        .CE(E),
        .D(D[57]),
        .Q(\raw_data_r_reg_n_0_[57] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[58] 
       (.C(user_clk),
        .CE(E),
        .D(D[58]),
        .Q(\raw_data_r_reg_n_0_[58] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[59] 
       (.C(user_clk),
        .CE(E),
        .D(D[59]),
        .Q(\raw_data_r_reg_n_0_[59] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[5] 
       (.C(user_clk),
        .CE(E),
        .D(D[5]),
        .Q(\raw_data_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[60] 
       (.C(user_clk),
        .CE(E),
        .D(D[60]),
        .Q(\raw_data_r_reg_n_0_[60] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[61] 
       (.C(user_clk),
        .CE(E),
        .D(D[61]),
        .Q(\raw_data_r_reg_n_0_[61] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[62] 
       (.C(user_clk),
        .CE(E),
        .D(D[62]),
        .Q(\raw_data_r_reg_n_0_[62] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[63] 
       (.C(user_clk),
        .CE(E),
        .D(D[63]),
        .Q(\raw_data_r_reg_n_0_[63] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[64] 
       (.C(user_clk),
        .CE(E),
        .D(D[64]),
        .Q(\raw_data_r_reg_n_0_[64] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[65] 
       (.C(user_clk),
        .CE(E),
        .D(D[65]),
        .Q(\raw_data_r_reg_n_0_[65] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[66] 
       (.C(user_clk),
        .CE(E),
        .D(D[66]),
        .Q(\raw_data_r_reg_n_0_[66] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[67] 
       (.C(user_clk),
        .CE(E),
        .D(D[67]),
        .Q(\raw_data_r_reg_n_0_[67] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[68] 
       (.C(user_clk),
        .CE(E),
        .D(D[68]),
        .Q(\raw_data_r_reg_n_0_[68] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[69] 
       (.C(user_clk),
        .CE(E),
        .D(D[69]),
        .Q(\raw_data_r_reg_n_0_[69] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[6] 
       (.C(user_clk),
        .CE(E),
        .D(D[6]),
        .Q(\raw_data_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[70] 
       (.C(user_clk),
        .CE(E),
        .D(D[70]),
        .Q(\raw_data_r_reg_n_0_[70] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[71] 
       (.C(user_clk),
        .CE(E),
        .D(D[71]),
        .Q(\raw_data_r_reg_n_0_[71] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[72] 
       (.C(user_clk),
        .CE(E),
        .D(D[72]),
        .Q(\raw_data_r_reg_n_0_[72] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[73] 
       (.C(user_clk),
        .CE(E),
        .D(D[73]),
        .Q(\raw_data_r_reg_n_0_[73] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[7] 
       (.C(user_clk),
        .CE(E),
        .D(D[7]),
        .Q(\raw_data_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[8] 
       (.C(user_clk),
        .CE(E),
        .D(D[8]),
        .Q(\raw_data_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \raw_data_r_reg[9] 
       (.C(user_clk),
        .CE(E),
        .D(D[9]),
        .Q(\raw_data_r_reg_n_0_[9] ),
        .R(1'b0));
  FDRE rx_cc_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(got_cc_i),
        .Q(rx_cc_r1),
        .R(1'b0));
  FDRE rx_cc_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_cc_r1),
        .Q(rx_cc_r2),
        .R(1'b0));
  FDRE rx_ll_dv_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdatavalid_to_ll_i),
        .Q(rx_ll_dv_r1),
        .R(1'b0));
  FDRE rx_ll_dv_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_ll_dv_r1),
        .Q(rx_ll_dv_r2),
        .R(1'b0));
  FDRE rx_pdu_ok_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_pe_data_v_r),
        .Q(rx_pe_data_v_r2),
        .R(1'b0));
  FDRE rx_pe_data_v_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_pe_data_v_c),
        .Q(rx_pe_data_v_r),
        .R(1'b0));
  FDRE rx_sep_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_sep_c),
        .Q(rx_sep_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_SCRAMBLER_64B66B" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_SCRAMBLER_64B66B
   (\SCRAMBLED_DATA_OUT_reg[0]_0 ,
    SCRAMBLED_DATA_OUT,
    Q,
    user_clk,
    \TXDATA_IN_REG_reg[63] );
  output \SCRAMBLED_DATA_OUT_reg[0]_0 ;
  output [63:0]SCRAMBLED_DATA_OUT;
  input [6:0]Q;
  input user_clk;
  input [63:0]\TXDATA_IN_REG_reg[63] ;

  wire [6:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire \SCRAMBLED_DATA_OUT_reg[0]_0 ;
  wire [63:0]\TXDATA_IN_REG_reg[63] ;
  wire data_valid_i;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [58]),
        .I1(p_229_in),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [59]),
        .I1(p_233_in),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [60]),
        .I1(p_237_in),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [61]),
        .I1(p_241_in),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [62]),
        .I1(p_245_in),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [63]),
        .I1(p_249_in),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0),
        .Q(SCRAMBLED_DATA_OUT[0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData040_out),
        .Q(SCRAMBLED_DATA_OUT[10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData044_out),
        .Q(SCRAMBLED_DATA_OUT[11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData048_out),
        .Q(SCRAMBLED_DATA_OUT[12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData052_out),
        .Q(SCRAMBLED_DATA_OUT[13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData056_out),
        .Q(SCRAMBLED_DATA_OUT[14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData060_out),
        .Q(SCRAMBLED_DATA_OUT[15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData064_out),
        .Q(SCRAMBLED_DATA_OUT[16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData068_out),
        .Q(SCRAMBLED_DATA_OUT[17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData072_out),
        .Q(SCRAMBLED_DATA_OUT[18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData076_out),
        .Q(SCRAMBLED_DATA_OUT[19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData04_out),
        .Q(SCRAMBLED_DATA_OUT[1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData080_out),
        .Q(SCRAMBLED_DATA_OUT[20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData084_out),
        .Q(SCRAMBLED_DATA_OUT[21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData088_out),
        .Q(SCRAMBLED_DATA_OUT[22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData092_out),
        .Q(SCRAMBLED_DATA_OUT[23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData096_out),
        .Q(SCRAMBLED_DATA_OUT[24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0100_out),
        .Q(SCRAMBLED_DATA_OUT[25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0104_out),
        .Q(SCRAMBLED_DATA_OUT[26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0108_out),
        .Q(SCRAMBLED_DATA_OUT[27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0112_out),
        .Q(SCRAMBLED_DATA_OUT[28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0116_out),
        .Q(SCRAMBLED_DATA_OUT[29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData08_out),
        .Q(SCRAMBLED_DATA_OUT[2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0120_out),
        .Q(SCRAMBLED_DATA_OUT[30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0124_out),
        .Q(SCRAMBLED_DATA_OUT[31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0128_out),
        .Q(SCRAMBLED_DATA_OUT[32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0132_out),
        .Q(SCRAMBLED_DATA_OUT[33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0136_out),
        .Q(SCRAMBLED_DATA_OUT[34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0140_out),
        .Q(SCRAMBLED_DATA_OUT[35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0144_out),
        .Q(SCRAMBLED_DATA_OUT[36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0148_out),
        .Q(SCRAMBLED_DATA_OUT[37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0152_out),
        .Q(SCRAMBLED_DATA_OUT[38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0156_out),
        .Q(SCRAMBLED_DATA_OUT[39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData012_out),
        .Q(SCRAMBLED_DATA_OUT[3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0160_out),
        .Q(SCRAMBLED_DATA_OUT[40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0164_out),
        .Q(SCRAMBLED_DATA_OUT[41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0168_out),
        .Q(SCRAMBLED_DATA_OUT[42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0172_out),
        .Q(SCRAMBLED_DATA_OUT[43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0176_out),
        .Q(SCRAMBLED_DATA_OUT[44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0180_out),
        .Q(SCRAMBLED_DATA_OUT[45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0184_out),
        .Q(SCRAMBLED_DATA_OUT[46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0188_out),
        .Q(SCRAMBLED_DATA_OUT[47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0192_out),
        .Q(SCRAMBLED_DATA_OUT[48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0196_out),
        .Q(SCRAMBLED_DATA_OUT[49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData016_out),
        .Q(SCRAMBLED_DATA_OUT[4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0200_out),
        .Q(SCRAMBLED_DATA_OUT[50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0204_out),
        .Q(SCRAMBLED_DATA_OUT[51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0208_out),
        .Q(SCRAMBLED_DATA_OUT[52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0212_out),
        .Q(SCRAMBLED_DATA_OUT[53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0216_out),
        .Q(SCRAMBLED_DATA_OUT[54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0220_out),
        .Q(SCRAMBLED_DATA_OUT[55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0224_out),
        .Q(SCRAMBLED_DATA_OUT[56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0228_out),
        .Q(SCRAMBLED_DATA_OUT[57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0232_out),
        .Q(SCRAMBLED_DATA_OUT[58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0236_out),
        .Q(SCRAMBLED_DATA_OUT[59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData020_out),
        .Q(SCRAMBLED_DATA_OUT[5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0240_out),
        .Q(SCRAMBLED_DATA_OUT[60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0244_out),
        .Q(SCRAMBLED_DATA_OUT[61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0248_out),
        .Q(SCRAMBLED_DATA_OUT[62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0252_out),
        .Q(SCRAMBLED_DATA_OUT[63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData024_out),
        .Q(SCRAMBLED_DATA_OUT[6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData028_out),
        .Q(SCRAMBLED_DATA_OUT[7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData032_out),
        .Q(SCRAMBLED_DATA_OUT[8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData036_out),
        .Q(SCRAMBLED_DATA_OUT[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [0]),
        .I1(\TXDATA_IN_REG_reg[63] [39]),
        .I2(p_153_in),
        .I3(\TXDATA_IN_REG_reg[63] [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [10]),
        .I1(\TXDATA_IN_REG_reg[63] [49]),
        .I2(p_193_in),
        .I3(\scrambler_reg_n_0_[43] ),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [11]),
        .I1(\TXDATA_IN_REG_reg[63] [50]),
        .I2(p_197_in),
        .I3(\scrambler_reg_n_0_[44] ),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [12]),
        .I1(\TXDATA_IN_REG_reg[63] [51]),
        .I2(p_201_in),
        .I3(\scrambler_reg_n_0_[45] ),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [13]),
        .I1(\TXDATA_IN_REG_reg[63] [52]),
        .I2(p_205_in),
        .I3(\scrambler_reg_n_0_[46] ),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [14]),
        .I1(\TXDATA_IN_REG_reg[63] [53]),
        .I2(p_209_in),
        .I3(\scrambler_reg_n_0_[47] ),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [15]),
        .I1(\TXDATA_IN_REG_reg[63] [54]),
        .I2(p_213_in),
        .I3(\scrambler_reg_n_0_[48] ),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [16]),
        .I1(\TXDATA_IN_REG_reg[63] [55]),
        .I2(p_217_in),
        .I3(\scrambler_reg_n_0_[49] ),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [17]),
        .I1(\TXDATA_IN_REG_reg[63] [56]),
        .I2(p_221_in),
        .I3(\scrambler_reg_n_0_[50] ),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [18]),
        .I1(\TXDATA_IN_REG_reg[63] [57]),
        .I2(p_225_in),
        .I3(\scrambler_reg_n_0_[51] ),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [19]),
        .I1(\TXDATA_IN_REG_reg[63] [58]),
        .I2(p_229_in),
        .I3(\scrambler_reg_n_0_[52] ),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [1]),
        .I1(\TXDATA_IN_REG_reg[63] [40]),
        .I2(p_157_in),
        .I3(\TXDATA_IN_REG_reg[63] [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [20]),
        .I1(\TXDATA_IN_REG_reg[63] [59]),
        .I2(p_233_in),
        .I3(\scrambler_reg_n_0_[53] ),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [21]),
        .I1(\TXDATA_IN_REG_reg[63] [60]),
        .I2(p_237_in),
        .I3(\scrambler_reg_n_0_[54] ),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [22]),
        .I1(\TXDATA_IN_REG_reg[63] [61]),
        .I2(p_241_in),
        .I3(\scrambler_reg_n_0_[55] ),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [23]),
        .I1(\TXDATA_IN_REG_reg[63] [62]),
        .I2(p_245_in),
        .I3(\scrambler_reg_n_0_[56] ),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [24]),
        .I1(\TXDATA_IN_REG_reg[63] [63]),
        .I2(p_249_in),
        .I3(\scrambler_reg_n_0_[57] ),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [25]),
        .I1(p_97_in),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [26]),
        .I1(p_101_in),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [27]),
        .I1(p_105_in),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [28]),
        .I1(p_109_in),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [29]),
        .I1(p_113_in),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [2]),
        .I1(\TXDATA_IN_REG_reg[63] [41]),
        .I2(p_161_in),
        .I3(\TXDATA_IN_REG_reg[63] [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [30]),
        .I1(p_117_in),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [31]),
        .I1(p_121_in),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [32]),
        .I1(p_125_in),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [33]),
        .I1(p_129_in),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [34]),
        .I1(p_133_in),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [35]),
        .I1(p_137_in),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [36]),
        .I1(p_141_in),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [37]),
        .I1(p_145_in),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [38]),
        .I1(p_149_in),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [39]),
        .I1(p_153_in),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [3]),
        .I1(\TXDATA_IN_REG_reg[63] [42]),
        .I2(p_165_in),
        .I3(\TXDATA_IN_REG_reg[63] [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [40]),
        .I1(p_157_in),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [41]),
        .I1(p_161_in),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [42]),
        .I1(p_165_in),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [43]),
        .I1(p_169_in),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [44]),
        .I1(p_173_in),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [45]),
        .I1(p_177_in),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [46]),
        .I1(p_181_in),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [47]),
        .I1(p_185_in),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [48]),
        .I1(p_189_in),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [49]),
        .I1(p_193_in),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [4]),
        .I1(\TXDATA_IN_REG_reg[63] [43]),
        .I2(p_169_in),
        .I3(\TXDATA_IN_REG_reg[63] [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [50]),
        .I1(p_197_in),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [51]),
        .I1(p_201_in),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [52]),
        .I1(p_205_in),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [53]),
        .I1(p_209_in),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [54]),
        .I1(p_213_in),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [55]),
        .I1(p_217_in),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [56]),
        .I1(p_221_in),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \scrambler[57]_i_1 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[0]_0 ),
        .O(data_valid_i));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2 
       (.I0(\TXDATA_IN_REG_reg[63] [57]),
        .I1(p_225_in),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \scrambler[57]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[6]),
        .I3(Q[4]),
        .O(\SCRAMBLED_DATA_OUT_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [5]),
        .I1(\TXDATA_IN_REG_reg[63] [44]),
        .I2(p_173_in),
        .I3(\TXDATA_IN_REG_reg[63] [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [6]),
        .I1(\TXDATA_IN_REG_reg[63] [45]),
        .I2(p_177_in),
        .I3(\scrambler_reg_n_0_[39] ),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [7]),
        .I1(\TXDATA_IN_REG_reg[63] [46]),
        .I2(p_181_in),
        .I3(\scrambler_reg_n_0_[40] ),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [8]),
        .I1(\TXDATA_IN_REG_reg[63] [47]),
        .I2(p_185_in),
        .I3(\scrambler_reg_n_0_[41] ),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1 
       (.I0(\TXDATA_IN_REG_reg[63] [9]),
        .I1(\TXDATA_IN_REG_reg[63] [48]),
        .I2(p_189_in),
        .I3(\scrambler_reg_n_0_[42] ),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_STANDARD_CC_MODULE" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_STANDARD_CC_MODULE
   (do_cc_r_reg0,
    Q,
    SR,
    user_clk,
    extend_cc_r,
    CHANNEL_UP_RX_IF_reg);
  output do_cc_r_reg0;
  output Q;
  input SR;
  input user_clk;
  input extend_cc_r;
  input CHANNEL_UP_RX_IF_reg;

  wire CHANNEL_UP_RX_IF_reg;
  wire DO_CC_i_1_n_0;
  wire Q;
  wire SR;
  wire \cc_count_r_reg_n_0_[5] ;
  wire count_13d_flop_r;
  wire count_13d_flop_r_i_1_n_0;
  wire count_13d_flop_r_i_2_n_0;
  wire count_13d_flop_r_i_3_n_0;
  wire \count_13d_srl_r_reg_n_0_[0] ;
  wire \count_13d_srl_r_reg_n_0_[10] ;
  wire \count_13d_srl_r_reg_n_0_[11] ;
  wire \count_13d_srl_r_reg_n_0_[1] ;
  wire \count_13d_srl_r_reg_n_0_[2] ;
  wire \count_13d_srl_r_reg_n_0_[3] ;
  wire \count_13d_srl_r_reg_n_0_[4] ;
  wire \count_13d_srl_r_reg_n_0_[5] ;
  wire \count_13d_srl_r_reg_n_0_[6] ;
  wire \count_13d_srl_r_reg_n_0_[7] ;
  wire \count_13d_srl_r_reg_n_0_[8] ;
  wire \count_13d_srl_r_reg_n_0_[9] ;
  wire count_16d_flop_r;
  wire count_16d_flop_r0;
  wire count_16d_flop_r_i_1_n_0;
  wire count_16d_flop_r_i_3_n_0;
  wire count_16d_flop_r_i_4_n_0;
  wire count_16d_flop_r_i_5_n_0;
  wire count_16d_srl_r0;
  wire \count_16d_srl_r_reg_n_0_[0] ;
  wire \count_16d_srl_r_reg_n_0_[10] ;
  wire \count_16d_srl_r_reg_n_0_[11] ;
  wire \count_16d_srl_r_reg_n_0_[12] ;
  wire \count_16d_srl_r_reg_n_0_[13] ;
  wire \count_16d_srl_r_reg_n_0_[14] ;
  wire \count_16d_srl_r_reg_n_0_[1] ;
  wire \count_16d_srl_r_reg_n_0_[2] ;
  wire \count_16d_srl_r_reg_n_0_[3] ;
  wire \count_16d_srl_r_reg_n_0_[4] ;
  wire \count_16d_srl_r_reg_n_0_[5] ;
  wire \count_16d_srl_r_reg_n_0_[6] ;
  wire \count_16d_srl_r_reg_n_0_[7] ;
  wire \count_16d_srl_r_reg_n_0_[8] ;
  wire \count_16d_srl_r_reg_n_0_[9] ;
  wire count_24d_flop_r;
  wire count_24d_flop_r0;
  wire count_24d_flop_r_i_1_n_0;
  wire count_24d_flop_r_i_3_n_0;
  wire count_24d_flop_r_i_4_n_0;
  wire count_24d_flop_r_i_5_n_0;
  wire count_24d_flop_r_i_6_n_0;
  wire count_24d_flop_r_i_7_n_0;
  wire count_24d_flop_r_i_8_n_0;
  wire count_24d_srl_r0;
  wire \count_24d_srl_r_reg_n_0_[0] ;
  wire \count_24d_srl_r_reg_n_0_[10] ;
  wire \count_24d_srl_r_reg_n_0_[11] ;
  wire \count_24d_srl_r_reg_n_0_[12] ;
  wire \count_24d_srl_r_reg_n_0_[13] ;
  wire \count_24d_srl_r_reg_n_0_[14] ;
  wire \count_24d_srl_r_reg_n_0_[15] ;
  wire \count_24d_srl_r_reg_n_0_[16] ;
  wire \count_24d_srl_r_reg_n_0_[17] ;
  wire \count_24d_srl_r_reg_n_0_[18] ;
  wire \count_24d_srl_r_reg_n_0_[19] ;
  wire \count_24d_srl_r_reg_n_0_[1] ;
  wire \count_24d_srl_r_reg_n_0_[20] ;
  wire \count_24d_srl_r_reg_n_0_[21] ;
  wire \count_24d_srl_r_reg_n_0_[22] ;
  wire \count_24d_srl_r_reg_n_0_[2] ;
  wire \count_24d_srl_r_reg_n_0_[3] ;
  wire \count_24d_srl_r_reg_n_0_[4] ;
  wire \count_24d_srl_r_reg_n_0_[5] ;
  wire \count_24d_srl_r_reg_n_0_[6] ;
  wire \count_24d_srl_r_reg_n_0_[7] ;
  wire \count_24d_srl_r_reg_n_0_[8] ;
  wire \count_24d_srl_r_reg_n_0_[9] ;
  wire do_cc_r_reg0;
  wire extend_cc_r;
  wire p_1_in;
  wire [4:0]p_1_in__0;
  wire [5:5]p_2_out;
  wire reset_r;
  wire user_clk;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    DO_CC0
       (.I0(p_1_in__0[1]),
        .I1(\cc_count_r_reg_n_0_[5] ),
        .I2(p_1_in__0[0]),
        .I3(p_1_in__0[3]),
        .I4(p_1_in__0[2]),
        .I5(p_1_in__0[4]),
        .O(p_1_in));
  LUT5 #(
    .INIT(32'hFFFFEAAA)) 
    DO_CC_i_1
       (.I0(p_1_in),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(\count_24d_srl_r_reg_n_0_[22] ),
        .I4(reset_r),
        .O(DO_CC_i_1_n_0));
  FDRE DO_CC_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(DO_CC_i_1_n_0),
        .Q(Q),
        .R(SR));
  LUT4 #(
    .INIT(16'h80FF)) 
    \cc_count_r[0]_i_1 
       (.I0(\count_24d_srl_r_reg_n_0_[22] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(\count_16d_srl_r_reg_n_0_[14] ),
        .I3(CHANNEL_UP_RX_IF_reg),
        .O(p_2_out));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_out),
        .Q(p_1_in__0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(\cc_count_r_reg_n_0_[5] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hF0F8F0F0)) 
    count_13d_flop_r_i_1
       (.I0(count_13d_flop_r_i_2_n_0),
        .I1(reset_r),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(\count_13d_srl_r_reg_n_0_[10] ),
        .I4(count_13d_flop_r_i_3_n_0),
        .O(count_13d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_13d_flop_r_i_2
       (.I0(\count_13d_srl_r_reg_n_0_[5] ),
        .I1(\count_13d_srl_r_reg_n_0_[4] ),
        .I2(\count_13d_srl_r_reg_n_0_[3] ),
        .I3(\count_13d_srl_r_reg_n_0_[2] ),
        .I4(\count_13d_srl_r_reg_n_0_[0] ),
        .I5(\count_13d_srl_r_reg_n_0_[1] ),
        .O(count_13d_flop_r_i_2_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_13d_flop_r_i_3
       (.I0(\count_13d_srl_r_reg_n_0_[6] ),
        .I1(\count_13d_srl_r_reg_n_0_[7] ),
        .I2(\count_13d_srl_r_reg_n_0_[8] ),
        .I3(\count_13d_srl_r_reg_n_0_[9] ),
        .O(count_13d_flop_r_i_3_n_0));
  FDRE count_13d_flop_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(count_13d_flop_r_i_1_n_0),
        .Q(count_13d_flop_r),
        .R(SR));
  FDRE \count_13d_srl_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(count_13d_flop_r),
        .Q(\count_13d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[9] ),
        .Q(\count_13d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[10] ),
        .Q(\count_13d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[0] ),
        .Q(\count_13d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[1] ),
        .Q(\count_13d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[2] ),
        .Q(\count_13d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[3] ),
        .Q(\count_13d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[4] ),
        .Q(\count_13d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[5] ),
        .Q(\count_13d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[6] ),
        .Q(\count_13d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[7] ),
        .Q(\count_13d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[8] ),
        .Q(\count_13d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFBF8)) 
    count_16d_flop_r_i_1
       (.I0(\count_16d_srl_r_reg_n_0_[14] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(count_16d_flop_r0),
        .I3(count_16d_flop_r),
        .O(count_16d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    count_16d_flop_r_i_2
       (.I0(count_16d_flop_r_i_3_n_0),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(reset_r),
        .I3(\count_16d_srl_r_reg_n_0_[12] ),
        .I4(\count_16d_srl_r_reg_n_0_[13] ),
        .I5(count_16d_flop_r_i_4_n_0),
        .O(count_16d_flop_r0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_16d_flop_r_i_3
       (.I0(\count_16d_srl_r_reg_n_0_[8] ),
        .I1(\count_16d_srl_r_reg_n_0_[9] ),
        .I2(\count_16d_srl_r_reg_n_0_[10] ),
        .I3(\count_16d_srl_r_reg_n_0_[11] ),
        .O(count_16d_flop_r_i_3_n_0));
  LUT5 #(
    .INIT(32'h00010000)) 
    count_16d_flop_r_i_4
       (.I0(\count_16d_srl_r_reg_n_0_[3] ),
        .I1(\count_16d_srl_r_reg_n_0_[2] ),
        .I2(\count_16d_srl_r_reg_n_0_[1] ),
        .I3(\count_16d_srl_r_reg_n_0_[0] ),
        .I4(count_16d_flop_r_i_5_n_0),
        .O(count_16d_flop_r_i_4_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_16d_flop_r_i_5
       (.I0(\count_16d_srl_r_reg_n_0_[4] ),
        .I1(\count_16d_srl_r_reg_n_0_[5] ),
        .I2(\count_16d_srl_r_reg_n_0_[6] ),
        .I3(\count_16d_srl_r_reg_n_0_[7] ),
        .O(count_16d_flop_r_i_5_n_0));
  FDRE count_16d_flop_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(count_16d_flop_r_i_1_n_0),
        .Q(count_16d_flop_r),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    \count_16d_srl_r[0]_i_1 
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(CHANNEL_UP_RX_IF_reg),
        .O(count_16d_srl_r0));
  FDRE \count_16d_srl_r_reg[0] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(count_16d_flop_r),
        .Q(\count_16d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[10] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[9] ),
        .Q(\count_16d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[11] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[10] ),
        .Q(\count_16d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[12] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[11] ),
        .Q(\count_16d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[13] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[12] ),
        .Q(\count_16d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[14] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[13] ),
        .Q(\count_16d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[1] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[0] ),
        .Q(\count_16d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[2] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[1] ),
        .Q(\count_16d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[3] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[2] ),
        .Q(\count_16d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[4] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[3] ),
        .Q(\count_16d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[5] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[4] ),
        .Q(\count_16d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[6] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[5] ),
        .Q(\count_16d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[7] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[6] ),
        .Q(\count_16d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[8] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[7] ),
        .Q(\count_16d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[9] 
       (.C(user_clk),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[8] ),
        .Q(\count_16d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFBFFF80)) 
    count_24d_flop_r_i_1
       (.I0(\count_24d_srl_r_reg_n_0_[22] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(count_24d_flop_r0),
        .I4(count_24d_flop_r),
        .O(count_24d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    count_24d_flop_r_i_2
       (.I0(count_24d_flop_r_i_3_n_0),
        .I1(count_24d_flop_r_i_4_n_0),
        .I2(count_24d_flop_r_i_5_n_0),
        .I3(count_24d_flop_r_i_6_n_0),
        .I4(count_24d_flop_r_i_7_n_0),
        .I5(count_24d_flop_r_i_8_n_0),
        .O(count_24d_flop_r0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_24d_flop_r_i_3
       (.I0(\count_24d_srl_r_reg_n_0_[8] ),
        .I1(\count_24d_srl_r_reg_n_0_[9] ),
        .I2(\count_24d_srl_r_reg_n_0_[10] ),
        .I3(\count_24d_srl_r_reg_n_0_[11] ),
        .O(count_24d_flop_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_24d_flop_r_i_4
       (.I0(\count_24d_srl_r_reg_n_0_[12] ),
        .I1(\count_24d_srl_r_reg_n_0_[13] ),
        .I2(\count_24d_srl_r_reg_n_0_[14] ),
        .I3(\count_24d_srl_r_reg_n_0_[15] ),
        .O(count_24d_flop_r_i_4_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    count_24d_flop_r_i_5
       (.I0(\count_24d_srl_r_reg_n_0_[22] ),
        .I1(reset_r),
        .I2(\count_24d_srl_r_reg_n_0_[20] ),
        .I3(\count_24d_srl_r_reg_n_0_[21] ),
        .O(count_24d_flop_r_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_24d_flop_r_i_6
       (.I0(\count_24d_srl_r_reg_n_0_[16] ),
        .I1(\count_24d_srl_r_reg_n_0_[17] ),
        .I2(\count_24d_srl_r_reg_n_0_[18] ),
        .I3(\count_24d_srl_r_reg_n_0_[19] ),
        .O(count_24d_flop_r_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_7
       (.I0(\count_24d_srl_r_reg_n_0_[3] ),
        .I1(\count_24d_srl_r_reg_n_0_[2] ),
        .I2(\count_24d_srl_r_reg_n_0_[0] ),
        .I3(\count_24d_srl_r_reg_n_0_[1] ),
        .O(count_24d_flop_r_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_8
       (.I0(\count_24d_srl_r_reg_n_0_[7] ),
        .I1(\count_24d_srl_r_reg_n_0_[6] ),
        .I2(\count_24d_srl_r_reg_n_0_[5] ),
        .I3(\count_24d_srl_r_reg_n_0_[4] ),
        .O(count_24d_flop_r_i_8_n_0));
  FDRE count_24d_flop_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(count_24d_flop_r_i_1_n_0),
        .Q(count_24d_flop_r),
        .R(SR));
  LUT3 #(
    .INIT(8'h8F)) 
    \count_24d_srl_r[0]_i_1 
       (.I0(\count_16d_srl_r_reg_n_0_[14] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(CHANNEL_UP_RX_IF_reg),
        .O(count_24d_srl_r0));
  FDRE \count_24d_srl_r_reg[0] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(count_24d_flop_r),
        .Q(\count_24d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[10] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[9] ),
        .Q(\count_24d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[11] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[10] ),
        .Q(\count_24d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[12] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[11] ),
        .Q(\count_24d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[13] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[12] ),
        .Q(\count_24d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[14] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[13] ),
        .Q(\count_24d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[15] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[14] ),
        .Q(\count_24d_srl_r_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[16] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[15] ),
        .Q(\count_24d_srl_r_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[17] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[16] ),
        .Q(\count_24d_srl_r_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[18] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[17] ),
        .Q(\count_24d_srl_r_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[19] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[18] ),
        .Q(\count_24d_srl_r_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[1] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[0] ),
        .Q(\count_24d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[20] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[19] ),
        .Q(\count_24d_srl_r_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[21] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[20] ),
        .Q(\count_24d_srl_r_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[22] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[21] ),
        .Q(\count_24d_srl_r_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[2] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[1] ),
        .Q(\count_24d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[3] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[2] ),
        .Q(\count_24d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[4] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[3] ),
        .Q(\count_24d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[5] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[4] ),
        .Q(\count_24d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[6] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[5] ),
        .Q(\count_24d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[7] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[6] ),
        .Q(\count_24d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[8] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[7] ),
        .Q(\count_24d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[9] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[8] ),
        .Q(\count_24d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    do_cc_r_i_1
       (.I0(Q),
        .I1(extend_cc_r),
        .O(do_cc_r_reg0));
  FDRE reset_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SR),
        .Q(reset_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_SYM_DEC" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_SYM_DEC
   (\raw_data_r_reg[1] ,
    \raw_data_r_reg[0] ,
    rx_ll_dv_r1_reg,
    illegal_btf_i,
    got_cc_i,
    got_idles_i,
    remote_ready_i,
    \raw_data_r_reg[73] ,
    E,
    rx_pe_data_v_c,
    rxdatavalid_i,
    user_clk,
    SYSTEM_RESET_reg,
    hold_reg_r_reg,
    Q,
    lane_up_flop_i,
    CHANNEL_UP_RX_IF_reg);
  output \raw_data_r_reg[1] ;
  output \raw_data_r_reg[0] ;
  output rx_ll_dv_r1_reg;
  output illegal_btf_i;
  output got_cc_i;
  output got_idles_i;
  output remote_ready_i;
  output [71:0]\raw_data_r_reg[73] ;
  output [0:0]E;
  output rx_pe_data_v_c;
  input rxdatavalid_i;
  input user_clk;
  input SYSTEM_RESET_reg;
  input hold_reg_r_reg;
  input [65:0]Q;
  input lane_up_flop_i;
  input CHANNEL_UP_RX_IF_reg;

  wire CHANNEL_UP_RX_IF_reg;
  wire [0:0]E;
  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2_n_0;
  wire ILLEGAL_BTF_i_3_n_0;
  wire ILLEGAL_BTF_i_4_n_0;
  wire ILLEGAL_BTF_i_5_n_0;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire RX_CC_i_2_n_0;
  wire RX_NA_IDLE_i_2_n_0;
  wire RX_NA_IDLE_i_3_n_0;
  wire RX_NA_IDLE_i_4_n_0;
  wire \RX_PE_DATA[0]_i_1_n_0 ;
  wire \RX_PE_DATA[48]_i_1_n_0 ;
  wire \RX_PE_DATA[48]_i_2_n_0 ;
  wire \RX_PE_DATA[49]_i_1_n_0 ;
  wire \RX_PE_DATA[50]_i_1_n_0 ;
  wire \RX_PE_DATA[51]_i_1_n_0 ;
  wire \RX_PE_DATA[52]_i_1_n_0 ;
  wire \RX_PE_DATA[53]_i_1_n_0 ;
  wire \RX_PE_DATA[54]_i_1_n_0 ;
  wire \RX_PE_DATA[55]_i_1_n_0 ;
  wire \RX_PE_DATA[56]_i_1_n_0 ;
  wire \RX_PE_DATA[56]_i_2_n_0 ;
  wire \RX_PE_DATA[57]_i_1_n_0 ;
  wire \RX_PE_DATA[57]_i_2_n_0 ;
  wire \RX_PE_DATA[57]_i_3_n_0 ;
  wire \RX_PE_DATA[58]_i_1_n_0 ;
  wire \RX_PE_DATA[59]_i_1_n_0 ;
  wire \RX_PE_DATA[60]_i_1_n_0 ;
  wire \RX_PE_DATA[60]_i_2_n_0 ;
  wire \RX_PE_DATA[61]_i_1_n_0 ;
  wire \RX_PE_DATA[62]_i_1_n_0 ;
  wire \RX_PE_DATA[63]_i_1_n_0 ;
  wire RX_PE_DATA_V113_in;
  wire RX_SEP7_i_1_n_0;
  wire \RX_SEP_NB[0]_i_1_n_0 ;
  wire \RX_SEP_NB[1]_i_1_n_0 ;
  wire \RX_SEP_NB[2]_i_1_n_0 ;
  wire SYSTEM_RESET_reg;
  wire got_cc_i;
  wire got_idles_i;
  wire got_na_idles_i;
  wire hold_reg_r_reg;
  wire illegal_btf_i;
  wire lane_up_flop_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__0;
  wire [2:0]p_1_in;
  wire \raw_data_r[8]_i_2_n_0 ;
  wire \raw_data_r_reg[0] ;
  wire \raw_data_r_reg[1] ;
  wire [71:0]\raw_data_r_reg[73] ;
  wire [0:2]remote_rdy_cntr;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1_n_0 ;
  wire \remote_rdy_cntr[0]_i_4_n_0 ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire remote_ready_i;
  wire rx_cc_c;
  wire rx_idle_c;
  wire rx_ll_dv_r1_reg;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg__0;
  wire rx_pe_data_v_c;
  wire rx_pe_data_v_i;
  wire rx_pe_data_v_r_i_2_n_0;
  wire rx_sep_c;
  wire [0:2]rx_sep_nb_i;
  wire [63:16]rxdata_s;
  wire rxdatavalid_i;
  wire [0:1]sync_header_c;
  wire [0:1]sync_header_r;
  wire user_clk;

  LUT6 #(
    .INIT(64'h0000000000000004)) 
    ILLEGAL_BTF_i_1
       (.I0(rx_na_idle_c),
        .I1(ILLEGAL_BTF_i_2_n_0),
        .I2(rx_idle_c),
        .I3(ILLEGAL_BTF_i_3_n_0),
        .I4(rx_cc_c),
        .I5(ILLEGAL_BTF_i_4_n_0),
        .O(ILLEGAL_BTF0));
  LUT4 #(
    .INIT(16'h0800)) 
    ILLEGAL_BTF_i_2
       (.I0(lane_up_flop_i),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .I3(sync_header_c[0]),
        .O(ILLEGAL_BTF_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    ILLEGAL_BTF_i_3
       (.I0(RX_SEP7_i_1_n_0),
        .I1(rx_sep_c),
        .O(ILLEGAL_BTF_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT5 #(
    .INIT(32'h00002000)) 
    ILLEGAL_BTF_i_4
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(RXDATAVALID_IN_REG),
        .I3(RX_NA_IDLE_i_2_n_0),
        .I4(ILLEGAL_BTF_i_5_n_0),
        .O(ILLEGAL_BTF_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFBF)) 
    ILLEGAL_BTF_i_5
       (.I0(RX_CC_i_2_n_0),
        .I1(p_0_in[11]),
        .I2(p_0_in[6]),
        .I3(p_0_in[4]),
        .I4(p_0_in[7]),
        .O(ILLEGAL_BTF_i_5_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(SYSTEM_RESET_reg));
  FDRE RXDATAVALID_IN_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdatavalid_i),
        .Q(RXDATAVALID_IN_REG),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    RX_CC_i_1
       (.I0(RX_NA_IDLE_i_2_n_0),
        .I1(RX_CC_i_2_n_0),
        .I2(p_0_in[7]),
        .I3(p_0_in[6]),
        .I4(\RX_PE_DATA[57]_i_2_n_0 ),
        .I5(p_0_in[11]),
        .O(rx_cc_c));
  LUT4 #(
    .INIT(16'hFF7F)) 
    RX_CC_i_2
       (.I0(p_0_in[12]),
        .I1(p_0_in[13]),
        .I2(p_0_in[14]),
        .I3(p_0_in[5]),
        .O(RX_CC_i_2_n_0));
  FDRE RX_CC_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_cc_c),
        .Q(got_cc_i),
        .R(SYSTEM_RESET_reg));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rxdata_s[56]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(rxdata_s[50]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(rxdata_s[51]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(rxdata_s[52]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(rxdata_s[53]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(rxdata_s[54]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(rxdata_s[55]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(rxdata_s[40]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(rxdata_s[41]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(rxdata_s[42]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(rxdata_s[43]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rxdata_s[57]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(rxdata_s[44]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(rxdata_s[45]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(rxdata_s[46]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(rxdata_s[47]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(rxdata_s[32]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(rxdata_s[33]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(rxdata_s[34]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(rxdata_s[35]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rxdata_s[36]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rxdata_s[37]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(rxdata_s[58]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(rxdata_s[38]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(rxdata_s[39]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[32]),
        .Q(rxdata_s[24]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rxdata_s[25]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[34]),
        .Q(rxdata_s[26]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[35]),
        .Q(rxdata_s[27]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[36]),
        .Q(rxdata_s[28]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[37]),
        .Q(rxdata_s[29]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[38]),
        .Q(rxdata_s[30]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[39]),
        .Q(rxdata_s[31]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rxdata_s[59]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[40]),
        .Q(rxdata_s[16]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[41]),
        .Q(rxdata_s[17]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[42]),
        .Q(rxdata_s[18]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[43]),
        .Q(rxdata_s[19]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[44]),
        .Q(rxdata_s[20]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[45]),
        .Q(rxdata_s[21]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[46]),
        .Q(rxdata_s[22]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[47]),
        .Q(rxdata_s[23]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in[0]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in[1]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(rxdata_s[60]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in[2]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in[3]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in[4]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in[5]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in[6]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in[7]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in[8]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in[9]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in[10]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in[11]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(rxdata_s[61]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in[12]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in[13]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in[14]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[63]),
        .Q(p_0_in[15]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(rxdata_s[62]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(rxdata_s[63]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(rxdata_s[48]),
        .R(hold_reg_r_reg));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(rxdata_s[49]),
        .R(hold_reg_r_reg));
  FDRE RX_HEADER_0_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[64]),
        .Q(sync_header_c[1]),
        .R(hold_reg_r_reg));
  FDRE RX_HEADER_1_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[65]),
        .Q(sync_header_c[0]),
        .R(hold_reg_r_reg));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    RX_IDLE_i_1
       (.I0(RX_NA_IDLE_i_2_n_0),
        .I1(p_0_in[14]),
        .I2(p_0_in[5]),
        .I3(sync_header_c[0]),
        .I4(sync_header_c[1]),
        .I5(RX_NA_IDLE_i_3_n_0),
        .O(rx_idle_c));
  FDRE RX_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(got_idles_i),
        .R(SYSTEM_RESET_reg));
  LUT5 #(
    .INIT(32'h00004000)) 
    RX_NA_IDLE_i_1
       (.I0(\RX_PE_DATA[57]_i_2_n_0 ),
        .I1(RX_NA_IDLE_i_2_n_0),
        .I2(p_0_in[14]),
        .I3(p_0_in[5]),
        .I4(RX_NA_IDLE_i_3_n_0),
        .O(rx_na_idle_c));
  LUT5 #(
    .INIT(32'h00000001)) 
    RX_NA_IDLE_i_2
       (.I0(p_0_in[15]),
        .I1(p_0_in[3]),
        .I2(p_0_in[1]),
        .I3(p_0_in[0]),
        .I4(RX_NA_IDLE_i_4_n_0),
        .O(RX_NA_IDLE_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFF7FFFFFFFFFFFF)) 
    RX_NA_IDLE_i_3
       (.I0(p_0_in[12]),
        .I1(p_0_in[13]),
        .I2(p_0_in[6]),
        .I3(p_0_in[7]),
        .I4(p_0_in[11]),
        .I5(p_0_in[4]),
        .O(RX_NA_IDLE_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    RX_NA_IDLE_i_4
       (.I0(p_0_in[10]),
        .I1(p_0_in[9]),
        .I2(p_0_in[2]),
        .I3(p_0_in[8]),
        .O(RX_NA_IDLE_i_4_n_0));
  FDRE RX_NA_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(got_na_idles_i),
        .R(SYSTEM_RESET_reg));
  LUT6 #(
    .INIT(64'hABABABABAAABABAB)) 
    \RX_PE_DATA[0]_i_1 
       (.I0(SYSTEM_RESET_reg),
        .I1(rx_sep_c),
        .I2(RX_SEP7_i_1_n_0),
        .I3(RXDATAVALID_IN_REG),
        .I4(sync_header_c[1]),
        .I5(sync_header_c[0]),
        .O(\RX_PE_DATA[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAEFFF)) 
    \RX_PE_DATA[48]_i_1 
       (.I0(SYSTEM_RESET_reg),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(RXDATAVALID_IN_REG),
        .I4(RX_SEP7_i_1_n_0),
        .O(\RX_PE_DATA[48]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[48]_i_2 
       (.I0(p_0_in[7]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[48]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[49]_i_1 
       (.I0(p_0_in[6]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[49]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[50]_i_1 
       (.I0(p_0_in[5]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[50]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[51]_i_1 
       (.I0(p_0_in[4]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[51]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[52]_i_1 
       (.I0(p_0_in[3]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[52]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[53]_i_1 
       (.I0(p_0_in[2]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[53]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[54]_i_1 
       (.I0(p_0_in[1]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[54]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RX_PE_DATA[55]_i_1 
       (.I0(p_0_in[0]),
        .I1(rx_sep_c),
        .O(\RX_PE_DATA[55]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFBF)) 
    \RX_PE_DATA[56]_i_1 
       (.I0(SYSTEM_RESET_reg),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .I3(sync_header_c[0]),
        .O(\RX_PE_DATA[56]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \RX_PE_DATA[56]_i_2 
       (.I0(RX_SEP7_i_1_n_0),
        .I1(rx_sep_c),
        .I2(p_0_in[15]),
        .O(\RX_PE_DATA[56]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0E0F0F0F0)) 
    \RX_PE_DATA[57]_i_1 
       (.I0(\RX_PE_DATA[57]_i_2_n_0 ),
        .I1(\RX_PE_DATA[57]_i_3_n_0 ),
        .I2(p_0_in[14]),
        .I3(p_0_in[13]),
        .I4(p_0_in[8]),
        .I5(p_0_in[11]),
        .O(\RX_PE_DATA[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \RX_PE_DATA[57]_i_2 
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(RXDATAVALID_IN_REG),
        .O(\RX_PE_DATA[57]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    \RX_PE_DATA[57]_i_3 
       (.I0(p_0_in[10]),
        .I1(p_0_in[9]),
        .I2(p_0_in[15]),
        .I3(p_0_in[12]),
        .O(\RX_PE_DATA[57]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \RX_PE_DATA[58]_i_1 
       (.I0(RX_SEP7_i_1_n_0),
        .I1(rx_sep_c),
        .I2(p_0_in[13]),
        .O(\RX_PE_DATA[58]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \RX_PE_DATA[59]_i_1 
       (.I0(RX_SEP7_i_1_n_0),
        .I1(rx_sep_c),
        .I2(p_0_in[12]),
        .O(\RX_PE_DATA[59]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \RX_PE_DATA[60]_i_1 
       (.I0(p_0_in[11]),
        .I1(\RX_PE_DATA[57]_i_2_n_0 ),
        .I2(\RX_PE_DATA[60]_i_2_n_0 ),
        .I3(p_0_in[14]),
        .I4(p_0_in[8]),
        .I5(p_0_in[13]),
        .O(\RX_PE_DATA[60]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \RX_PE_DATA[60]_i_2 
       (.I0(p_0_in[12]),
        .I1(p_0_in[15]),
        .I2(p_0_in[10]),
        .I3(p_0_in[9]),
        .O(\RX_PE_DATA[60]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \RX_PE_DATA[61]_i_1 
       (.I0(RX_SEP7_i_1_n_0),
        .I1(rx_sep_c),
        .I2(p_0_in[10]),
        .O(\RX_PE_DATA[61]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \RX_PE_DATA[62]_i_1 
       (.I0(RX_SEP7_i_1_n_0),
        .I1(rx_sep_c),
        .I2(p_0_in[9]),
        .O(\RX_PE_DATA[62]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \RX_PE_DATA[63]_i_1 
       (.I0(RX_SEP7_i_1_n_0),
        .I1(rx_sep_c),
        .I2(p_0_in[8]),
        .O(\RX_PE_DATA[63]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[63]),
        .Q(\raw_data_r_reg[73] [71]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[53]),
        .Q(\raw_data_r_reg[73] [61]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[52]),
        .Q(\raw_data_r_reg[73] [60]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[51]),
        .Q(\raw_data_r_reg[73] [59]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[50]),
        .Q(\raw_data_r_reg[73] [58]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[49]),
        .Q(\raw_data_r_reg[73] [57]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[48]),
        .Q(\raw_data_r_reg[73] [56]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[47]),
        .Q(\raw_data_r_reg[73] [55]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[46]),
        .Q(\raw_data_r_reg[73] [54]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[45]),
        .Q(\raw_data_r_reg[73] [53]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[44]),
        .Q(\raw_data_r_reg[73] [52]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[62]),
        .Q(\raw_data_r_reg[73] [70]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[43]),
        .Q(\raw_data_r_reg[73] [51]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[42]),
        .Q(\raw_data_r_reg[73] [50]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[41]),
        .Q(\raw_data_r_reg[73] [49]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[40]),
        .Q(\raw_data_r_reg[73] [48]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[39]),
        .Q(\raw_data_r_reg[73] [47]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[38]),
        .Q(\raw_data_r_reg[73] [46]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[37]),
        .Q(\raw_data_r_reg[73] [45]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[36]),
        .Q(\raw_data_r_reg[73] [44]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[35]),
        .Q(\raw_data_r_reg[73] [43]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[34]),
        .Q(\raw_data_r_reg[73] [42]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[61]),
        .Q(\raw_data_r_reg[73] [69]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[33]),
        .Q(\raw_data_r_reg[73] [41]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[32]),
        .Q(\raw_data_r_reg[73] [40]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[31]),
        .Q(\raw_data_r_reg[73] [39]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[30]),
        .Q(\raw_data_r_reg[73] [38]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[29]),
        .Q(\raw_data_r_reg[73] [37]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[28]),
        .Q(\raw_data_r_reg[73] [36]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[27]),
        .Q(\raw_data_r_reg[73] [35]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[26]),
        .Q(\raw_data_r_reg[73] [34]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[25]),
        .Q(\raw_data_r_reg[73] [33]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[24]),
        .Q(\raw_data_r_reg[73] [32]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[60]),
        .Q(\raw_data_r_reg[73] [68]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[23]),
        .Q(\raw_data_r_reg[73] [31]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[22]),
        .Q(\raw_data_r_reg[73] [30]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[21]),
        .Q(\raw_data_r_reg[73] [29]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[20]),
        .Q(\raw_data_r_reg[73] [28]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[19]),
        .Q(\raw_data_r_reg[73] [27]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[18]),
        .Q(\raw_data_r_reg[73] [26]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[17]),
        .Q(\raw_data_r_reg[73] [25]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[16]),
        .Q(\raw_data_r_reg[73] [24]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[48]_i_2_n_0 ),
        .Q(\raw_data_r_reg[73] [23]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[49]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [22]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[59]),
        .Q(\raw_data_r_reg[73] [67]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[50]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [21]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[51]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [20]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[52]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [19]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[53]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [18]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[54]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [17]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[55]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [16]),
        .R(\RX_PE_DATA[48]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[56]_i_2_n_0 ),
        .Q(\raw_data_r_reg[73] [15]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[57]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [14]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[58]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [13]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[59]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [12]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[58]),
        .Q(\raw_data_r_reg[73] [66]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[60]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [11]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[61]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [10]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[62]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [9]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_PE_DATA[63]_i_1_n_0 ),
        .Q(\raw_data_r_reg[73] [8]),
        .R(\RX_PE_DATA[56]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[57]),
        .Q(\raw_data_r_reg[73] [65]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[56]),
        .Q(\raw_data_r_reg[73] [64]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[55]),
        .Q(\raw_data_r_reg[73] [63]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdata_s[54]),
        .Q(\raw_data_r_reg[73] [62]),
        .R(\RX_PE_DATA[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    RX_SEP7_i_1
       (.I0(\RX_PE_DATA[57]_i_2_n_0 ),
        .I1(\RX_PE_DATA[57]_i_3_n_0 ),
        .I2(p_0_in[14]),
        .I3(p_0_in[13]),
        .I4(p_0_in[8]),
        .I5(p_0_in[11]),
        .O(RX_SEP7_i_1_n_0));
  FDRE RX_SEP7_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RX_SEP7_i_1_n_0),
        .Q(\raw_data_r_reg[0] ),
        .R(SYSTEM_RESET_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \RX_SEP_NB[0]_i_1 
       (.I0(p_0_in[2]),
        .I1(rx_sep_c),
        .I2(RX_SEP7_i_1_n_0),
        .O(\RX_SEP_NB[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \RX_SEP_NB[1]_i_1 
       (.I0(p_0_in[1]),
        .I1(rx_sep_c),
        .I2(RX_SEP7_i_1_n_0),
        .O(\RX_SEP_NB[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \RX_SEP_NB[2]_i_1 
       (.I0(p_0_in[0]),
        .I1(rx_sep_c),
        .I2(RX_SEP7_i_1_n_0),
        .O(\RX_SEP_NB[2]_i_1_n_0 ));
  FDRE \RX_SEP_NB_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_SEP_NB[0]_i_1_n_0 ),
        .Q(rx_sep_nb_i[0]),
        .R(SYSTEM_RESET_reg));
  FDRE \RX_SEP_NB_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_SEP_NB[1]_i_1_n_0 ),
        .Q(rx_sep_nb_i[1]),
        .R(SYSTEM_RESET_reg));
  FDRE \RX_SEP_NB_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_SEP_NB[2]_i_1_n_0 ),
        .Q(rx_sep_nb_i[2]),
        .R(SYSTEM_RESET_reg));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    RX_SEP_i_1
       (.I0(p_0_in[11]),
        .I1(\RX_PE_DATA[57]_i_2_n_0 ),
        .I2(\RX_PE_DATA[60]_i_2_n_0 ),
        .I3(p_0_in[14]),
        .I4(p_0_in[8]),
        .I5(p_0_in[13]),
        .O(rx_sep_c));
  FDRE RX_SEP_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_sep_c),
        .Q(\raw_data_r_reg[1] ),
        .R(SYSTEM_RESET_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000000E)) 
    \raw_data_r[2]_i_1 
       (.I0(\raw_data_r_reg[0] ),
        .I1(\raw_data_r_reg[1] ),
        .I2(rx_sep_nb_i[0]),
        .I3(rx_sep_nb_i[1]),
        .I4(rx_sep_nb_i[2]),
        .I5(\raw_data_r[8]_i_2_n_0 ),
        .O(\raw_data_r_reg[73] [0]));
  LUT6 #(
    .INIT(64'hEAABEAABEAABAAAA)) 
    \raw_data_r[3]_i_1 
       (.I0(\raw_data_r[8]_i_2_n_0 ),
        .I1(rx_sep_nb_i[2]),
        .I2(rx_sep_nb_i[1]),
        .I3(rx_sep_nb_i[0]),
        .I4(\raw_data_r_reg[0] ),
        .I5(\raw_data_r_reg[1] ),
        .O(\raw_data_r_reg[73] [1]));
  LUT6 #(
    .INIT(64'hFAABFAABFAABAAAA)) 
    \raw_data_r[4]_i_1 
       (.I0(\raw_data_r[8]_i_2_n_0 ),
        .I1(rx_sep_nb_i[2]),
        .I2(rx_sep_nb_i[1]),
        .I3(rx_sep_nb_i[0]),
        .I4(\raw_data_r_reg[1] ),
        .I5(\raw_data_r_reg[0] ),
        .O(\raw_data_r_reg[73] [2]));
  LUT6 #(
    .INIT(64'hFEFEFEAAABABABAA)) 
    \raw_data_r[5]_i_1 
       (.I0(\raw_data_r[8]_i_2_n_0 ),
        .I1(rx_sep_nb_i[1]),
        .I2(rx_sep_nb_i[2]),
        .I3(\raw_data_r_reg[1] ),
        .I4(\raw_data_r_reg[0] ),
        .I5(rx_sep_nb_i[0]),
        .O(\raw_data_r_reg[73] [3]));
  LUT6 #(
    .INIT(64'hFEAAFEAAFEAAFEFE)) 
    \raw_data_r[6]_i_1 
       (.I0(\raw_data_r[8]_i_2_n_0 ),
        .I1(\raw_data_r_reg[0] ),
        .I2(\raw_data_r_reg[1] ),
        .I3(rx_sep_nb_i[0]),
        .I4(rx_sep_nb_i[2]),
        .I5(rx_sep_nb_i[1]),
        .O(\raw_data_r_reg[73] [4]));
  LUT5 #(
    .INIT(32'h50505040)) 
    \raw_data_r[73]_i_1 
       (.I0(got_cc_i),
        .I1(\raw_data_r_reg[1] ),
        .I2(CHANNEL_UP_RX_IF_reg),
        .I3(\raw_data_r_reg[0] ),
        .I4(rx_pe_data_v_i),
        .O(E));
  LUT6 #(
    .INIT(64'hFF08FF08FF080808)) 
    \raw_data_r[73]_i_2 
       (.I0(rx_ll_dv_r1_reg),
        .I1(sync_header_r[1]),
        .I2(sync_header_r[0]),
        .I3(RX_PE_DATA_V113_in),
        .I4(\raw_data_r_reg[0] ),
        .I5(\raw_data_r_reg[1] ),
        .O(rx_pe_data_v_i));
  LUT6 #(
    .INIT(64'hFEFEFEFEFEAAAAFE)) 
    \raw_data_r[7]_i_1 
       (.I0(\raw_data_r[8]_i_2_n_0 ),
        .I1(\raw_data_r_reg[0] ),
        .I2(\raw_data_r_reg[1] ),
        .I3(rx_sep_nb_i[2]),
        .I4(rx_sep_nb_i[1]),
        .I5(rx_sep_nb_i[0]),
        .O(\raw_data_r_reg[73] [5]));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEE0E)) 
    \raw_data_r[8]_i_1 
       (.I0(\raw_data_r_reg[0] ),
        .I1(\raw_data_r_reg[1] ),
        .I2(rx_sep_nb_i[2]),
        .I3(rx_sep_nb_i[0]),
        .I4(rx_sep_nb_i[1]),
        .I5(\raw_data_r[8]_i_2_n_0 ),
        .O(\raw_data_r_reg[73] [6]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    \raw_data_r[8]_i_2 
       (.I0(sync_header_r[0]),
        .I1(sync_header_r[1]),
        .I2(rx_ll_dv_r1_reg),
        .I3(\raw_data_r_reg[1] ),
        .I4(\raw_data_r_reg[0] ),
        .O(\raw_data_r[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'hFFFFFF08)) 
    \raw_data_r[9]_i_1 
       (.I0(rx_ll_dv_r1_reg),
        .I1(sync_header_r[1]),
        .I2(sync_header_r[0]),
        .I3(\raw_data_r_reg[0] ),
        .I4(\raw_data_r_reg[1] ),
        .O(\raw_data_r_reg[73] [7]));
  LUT6 #(
    .INIT(64'h555555555555D555)) 
    \remote_rdy_cntr[0]_i_1 
       (.I0(lane_up_flop_i),
        .I1(remote_rdy_cntr[0]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_rdy_cntr[2]),
        .I4(rx_na_idles_cntr_reg__0[4]),
        .I5(\remote_rdy_cntr[0]_i_4_n_0 ),
        .O(\remote_rdy_cntr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \remote_rdy_cntr[0]_i_2 
       (.I0(remote_ready_det),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_rdy_cntr[0]),
        .O(remote_rdy_cntr01_out));
  LUT3 #(
    .INIT(8'h6A)) 
    \remote_rdy_cntr[0]_i_3 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[1]),
        .I2(remote_rdy_cntr[2]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4 
       (.I0(rx_na_idles_cntr_reg__0[2]),
        .I1(rx_na_idles_cntr_reg__0[0]),
        .I2(rx_na_idles_cntr_reg__0[1]),
        .I3(rx_na_idles_cntr_reg__0[3]),
        .O(\remote_rdy_cntr[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1 
       (.I0(remote_rdy_cntr[2]),
        .I1(remote_rdy_cntr[1]),
        .O(p_1_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1 
       (.I0(remote_rdy_cntr[2]),
        .O(p_1_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(p_1_in[2]),
        .Q(remote_rdy_cntr[0]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(p_1_in[1]),
        .Q(remote_rdy_cntr[1]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(p_1_in[0]),
        .Q(remote_rdy_cntr[2]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h08000000)) 
    remote_ready_det_i_1
       (.I0(rx_idle_c),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(RXDATAVALID_IN_REG),
        .I4(lane_up_flop_i),
        .O(remote_ready_det0));
  FDRE remote_ready_det_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(SYSTEM_RESET_reg));
  LUT3 #(
    .INIT(8'h80)) 
    remote_ready_r_i_1
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[1]),
        .I2(remote_rdy_cntr[2]),
        .O(remote_ready_i));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1 
       (.I0(rx_na_idles_cntr_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1 
       (.I0(rx_na_idles_cntr_reg__0[0]),
        .I1(rx_na_idles_cntr_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \rx_na_idles_cntr[2]_i_1 
       (.I0(rx_na_idles_cntr_reg__0[2]),
        .I1(rx_na_idles_cntr_reg__0[0]),
        .I2(rx_na_idles_cntr_reg__0[1]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_na_idles_cntr[3]_i_1 
       (.I0(rx_na_idles_cntr_reg__0[3]),
        .I1(rx_na_idles_cntr_reg__0[1]),
        .I2(rx_na_idles_cntr_reg__0[0]),
        .I3(rx_na_idles_cntr_reg__0[2]),
        .O(p_0_in__0[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1 
       (.I0(lane_up_flop_i),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_rdy_cntr[0]),
        .O(\rx_na_idles_cntr[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2 
       (.I0(rx_na_idles_cntr_reg__0[2]),
        .I1(rx_na_idles_cntr_reg__0[0]),
        .I2(rx_na_idles_cntr_reg__0[1]),
        .I3(rx_na_idles_cntr_reg__0[3]),
        .I4(rx_na_idles_cntr_reg__0[4]),
        .O(p_0_in__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(user_clk),
        .CE(got_na_idles_i),
        .D(p_0_in__0[0]),
        .Q(rx_na_idles_cntr_reg__0[0]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(user_clk),
        .CE(got_na_idles_i),
        .D(p_0_in__0[1]),
        .Q(rx_na_idles_cntr_reg__0[1]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(user_clk),
        .CE(got_na_idles_i),
        .D(p_0_in__0[2]),
        .Q(rx_na_idles_cntr_reg__0[2]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(user_clk),
        .CE(got_na_idles_i),
        .D(p_0_in__0[3]),
        .Q(rx_na_idles_cntr_reg__0[3]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(user_clk),
        .CE(got_na_idles_i),
        .D(p_0_in__0[4]),
        .Q(rx_na_idles_cntr_reg__0[4]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8F88888800000000)) 
    rx_pe_data_v_r_i_1
       (.I0(rx_pe_data_v_r_i_2_n_0),
        .I1(RX_PE_DATA_V113_in),
        .I2(sync_header_r[0]),
        .I3(sync_header_r[1]),
        .I4(rx_ll_dv_r1_reg),
        .I5(CHANNEL_UP_RX_IF_reg),
        .O(rx_pe_data_v_c));
  LUT2 #(
    .INIT(4'hE)) 
    rx_pe_data_v_r_i_2
       (.I0(\raw_data_r_reg[0] ),
        .I1(\raw_data_r_reg[1] ),
        .O(rx_pe_data_v_r_i_2_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    rx_pe_data_v_r_i_3
       (.I0(rx_sep_nb_i[2]),
        .I1(rx_sep_nb_i[1]),
        .I2(rx_sep_nb_i[0]),
        .O(RX_PE_DATA_V113_in));
  FDRE rxdatavalid_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RXDATAVALID_IN_REG),
        .Q(rx_ll_dv_r1_reg),
        .R(SYSTEM_RESET_reg));
  FDRE \sync_header_r_reg[0] 
       (.C(user_clk),
        .CE(RXDATAVALID_IN_REG),
        .D(sync_header_c[0]),
        .Q(sync_header_r[0]),
        .R(SYSTEM_RESET_reg));
  FDRE \sync_header_r_reg[1] 
       (.C(user_clk),
        .CE(RXDATAVALID_IN_REG),
        .D(sync_header_c[1]),
        .Q(sync_header_r[1]),
        .R(SYSTEM_RESET_reg));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_SYM_GEN" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_SYM_GEN
   (D,
    \TXDATA_IN_REG_reg[63] ,
    \txseq_counter_i_reg[3] ,
    txdatavalid_symgen_i,
    tx_header_1_c3_out,
    user_clk,
    GEN_SEP7_reg,
    \TX_PE_DATA_reg[56] ,
    CHANNEL_UP_TX_IF_reg,
    GEN_SEP_reg,
    GEN_SEP_reg_0,
    \TX_PE_DATA_reg[0] );
  output [1:0]D;
  output [63:0]\TXDATA_IN_REG_reg[63] ;
  input \txseq_counter_i_reg[3] ;
  input txdatavalid_symgen_i;
  input tx_header_1_c3_out;
  input user_clk;
  input GEN_SEP7_reg;
  input [13:0]\TX_PE_DATA_reg[56] ;
  input CHANNEL_UP_TX_IF_reg;
  input GEN_SEP_reg;
  input GEN_SEP_reg_0;
  input [47:0]\TX_PE_DATA_reg[0] ;

  wire CHANNEL_UP_TX_IF_reg;
  wire [1:0]D;
  wire GEN_SEP7_reg;
  wire GEN_SEP_reg;
  wire GEN_SEP_reg_0;
  wire [63:0]\TXDATA_IN_REG_reg[63] ;
  wire [47:0]\TX_PE_DATA_reg[0] ;
  wire [13:0]\TX_PE_DATA_reg[56] ;
  wire tx_header_1_c3_out;
  wire txdatavalid_symgen_i;
  wire \txseq_counter_i_reg[3] ;
  wire user_clk;

  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [40]),
        .Q(\TXDATA_IN_REG_reg[63] [0]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [34]),
        .Q(\TXDATA_IN_REG_reg[63] [10]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [35]),
        .Q(\TXDATA_IN_REG_reg[63] [11]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [36]),
        .Q(\TXDATA_IN_REG_reg[63] [12]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [37]),
        .Q(\TXDATA_IN_REG_reg[63] [13]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [38]),
        .Q(\TXDATA_IN_REG_reg[63] [14]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [39]),
        .Q(\TXDATA_IN_REG_reg[63] [15]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [24]),
        .Q(\TXDATA_IN_REG_reg[63] [16]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [25]),
        .Q(\TXDATA_IN_REG_reg[63] [17]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [26]),
        .Q(\TXDATA_IN_REG_reg[63] [18]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [27]),
        .Q(\TXDATA_IN_REG_reg[63] [19]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [41]),
        .Q(\TXDATA_IN_REG_reg[63] [1]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [28]),
        .Q(\TXDATA_IN_REG_reg[63] [20]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [29]),
        .Q(\TXDATA_IN_REG_reg[63] [21]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [30]),
        .Q(\TXDATA_IN_REG_reg[63] [22]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [31]),
        .Q(\TXDATA_IN_REG_reg[63] [23]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [16]),
        .Q(\TXDATA_IN_REG_reg[63] [24]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [17]),
        .Q(\TXDATA_IN_REG_reg[63] [25]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [18]),
        .Q(\TXDATA_IN_REG_reg[63] [26]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [19]),
        .Q(\TXDATA_IN_REG_reg[63] [27]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [20]),
        .Q(\TXDATA_IN_REG_reg[63] [28]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [21]),
        .Q(\TXDATA_IN_REG_reg[63] [29]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [42]),
        .Q(\TXDATA_IN_REG_reg[63] [2]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [22]),
        .Q(\TXDATA_IN_REG_reg[63] [30]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [23]),
        .Q(\TXDATA_IN_REG_reg[63] [31]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [8]),
        .Q(\TXDATA_IN_REG_reg[63] [32]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [9]),
        .Q(\TXDATA_IN_REG_reg[63] [33]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [10]),
        .Q(\TXDATA_IN_REG_reg[63] [34]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [11]),
        .Q(\TXDATA_IN_REG_reg[63] [35]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [12]),
        .Q(\TXDATA_IN_REG_reg[63] [36]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [13]),
        .Q(\TXDATA_IN_REG_reg[63] [37]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [14]),
        .Q(\TXDATA_IN_REG_reg[63] [38]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [15]),
        .Q(\TXDATA_IN_REG_reg[63] [39]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [43]),
        .Q(\TXDATA_IN_REG_reg[63] [3]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [0]),
        .Q(\TXDATA_IN_REG_reg[63] [40]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [1]),
        .Q(\TXDATA_IN_REG_reg[63] [41]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [2]),
        .Q(\TXDATA_IN_REG_reg[63] [42]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [3]),
        .Q(\TXDATA_IN_REG_reg[63] [43]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [4]),
        .Q(\TXDATA_IN_REG_reg[63] [44]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [5]),
        .Q(\TXDATA_IN_REG_reg[63] [45]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [6]),
        .Q(\TXDATA_IN_REG_reg[63] [46]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [7]),
        .Q(\TXDATA_IN_REG_reg[63] [47]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [0]),
        .Q(\TXDATA_IN_REG_reg[63] [48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [1]),
        .Q(\TXDATA_IN_REG_reg[63] [49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [44]),
        .Q(\TXDATA_IN_REG_reg[63] [4]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [2]),
        .Q(\TXDATA_IN_REG_reg[63] [50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [3]),
        .Q(\TXDATA_IN_REG_reg[63] [51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [4]),
        .Q(\TXDATA_IN_REG_reg[63] [52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [5]),
        .Q(\TXDATA_IN_REG_reg[63] [53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [6]),
        .Q(\TXDATA_IN_REG_reg[63] [54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [7]),
        .Q(\TXDATA_IN_REG_reg[63] [55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [8]),
        .Q(\TXDATA_IN_REG_reg[63] [56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(GEN_SEP_reg_0),
        .Q(\TXDATA_IN_REG_reg[63] [57]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(GEN_SEP_reg),
        .Q(\TXDATA_IN_REG_reg[63] [58]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [9]),
        .Q(\TXDATA_IN_REG_reg[63] [59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [45]),
        .Q(\TXDATA_IN_REG_reg[63] [5]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [10]),
        .Q(\TXDATA_IN_REG_reg[63] [60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [11]),
        .Q(\TXDATA_IN_REG_reg[63] [61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [12]),
        .Q(\TXDATA_IN_REG_reg[63] [62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[56] [13]),
        .Q(\TXDATA_IN_REG_reg[63] [63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [46]),
        .Q(\TXDATA_IN_REG_reg[63] [6]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [47]),
        .Q(\TXDATA_IN_REG_reg[63] [7]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [32]),
        .Q(\TXDATA_IN_REG_reg[63] [8]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(\TX_PE_DATA_reg[0] [33]),
        .Q(\TXDATA_IN_REG_reg[63] [9]),
        .R(CHANNEL_UP_TX_IF_reg));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(GEN_SEP7_reg),
        .Q(D[0]),
        .R(\txseq_counter_i_reg[3] ));
  FDSE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(user_clk),
        .CE(txdatavalid_symgen_i),
        .D(tx_header_1_c3_out),
        .Q(D[1]),
        .S(\txseq_counter_i_reg[3] ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_TX_LL" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_TX_LL
   (s_axi_tx_tready,
    extend_cc_r,
    \TX_DATA_reg[63] ,
    Q,
    \TX_DATA_reg[63]_0 ,
    tlast_txdv_coincide_r_reg,
    tx_header_1_c3_out,
    TX_HEADER_0_reg,
    data_r_reg,
    \TX_DATA_reg[57] ,
    \TX_DATA_reg[58] ,
    R0,
    user_clk,
    tlast_txdv_coincide_r0,
    do_cc_r_reg0,
    txdatavalid_i,
    pdu_ok_c,
    gen_ch_bond_i,
    gen_na_idles_i,
    channel_up_tx_if,
    CHANNEL_UP_TX_IF_reg,
    DO_CC_reg,
    s_axi_tx_tvalid,
    s_axi_tx_tlast,
    s_axi_tx_tkeep,
    s_axi_tx_tdata);
  output s_axi_tx_tready;
  output extend_cc_r;
  output [13:0]\TX_DATA_reg[63] ;
  output [47:0]Q;
  output \TX_DATA_reg[63]_0 ;
  output tlast_txdv_coincide_r_reg;
  output tx_header_1_c3_out;
  output TX_HEADER_0_reg;
  output data_r_reg;
  output \TX_DATA_reg[57] ;
  output \TX_DATA_reg[58] ;
  input R0;
  input user_clk;
  input tlast_txdv_coincide_r0;
  input do_cc_r_reg0;
  input txdatavalid_i;
  input pdu_ok_c;
  input gen_ch_bond_i;
  input gen_na_idles_i;
  input channel_up_tx_if;
  input CHANNEL_UP_TX_IF_reg;
  input DO_CC_reg;
  input s_axi_tx_tvalid;
  input s_axi_tx_tlast;
  input [0:7]s_axi_tx_tkeep;
  input [0:63]s_axi_tx_tdata;

  wire CHANNEL_UP_TX_IF_reg;
  wire DO_CC_reg;
  wire [47:0]Q;
  wire R0;
  wire \TX_DATA_reg[57] ;
  wire \TX_DATA_reg[58] ;
  wire [13:0]\TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire TX_HEADER_0_reg;
  wire channel_up_tx_if;
  wire data_r_reg;
  wire do_cc_r_reg0;
  wire extend_cc_r;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire gen_sep7_i;
  wire gen_sep_i;
  wire in_frame_c;
  wire pdu_ok_c;
  wire [0:63]s_axi_tx_tdata;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire tlast_txdv_coincide_r0;
  wire tlast_txdv_coincide_r_reg;
  wire tx_header_1_c3_out;
  wire [48:63]tx_pe_data_i;
  wire tx_pe_data_v_i;
  wire txdatavalid_i;
  wire user_clk;

  aurora_64b66b_25p78G_aurora_64b66b_25p78G_TX_LL_CONTROL_SM tx_ll_control_sm_i
       (.CHANNEL_UP_TX_IF_reg(CHANNEL_UP_TX_IF_reg),
        .DO_CC_reg(DO_CC_reg),
        .Q({tx_pe_data_i[48],tx_pe_data_i[49],tx_pe_data_i[50],tx_pe_data_i[52],tx_pe_data_i[53],tx_pe_data_i[54],tx_pe_data_i[55],tx_pe_data_i[56],tx_pe_data_i[57],tx_pe_data_i[58],tx_pe_data_i[59],tx_pe_data_i[60],tx_pe_data_i[61],tx_pe_data_i[62],tx_pe_data_i[63]}),
        .R0(R0),
        .\TX_DATA_reg[57] (\TX_DATA_reg[57] ),
        .\TX_DATA_reg[58] (\TX_DATA_reg[58] ),
        .\TX_DATA_reg[63] ({\TX_DATA_reg[63] [13:5],\TX_DATA_reg[63] [3:0]}),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63]_0 ),
        .TX_HEADER_0_reg(TX_HEADER_0_reg),
        .channel_up_tx_if(channel_up_tx_if),
        .data_r_reg_0(data_r_reg),
        .do_cc_r_reg0(do_cc_r_reg0),
        .extend_cc_r(extend_cc_r),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_na_idles_i(gen_na_idles_i),
        .gen_sep7_i(gen_sep7_i),
        .gen_sep_i(gen_sep_i),
        .in_frame_c(in_frame_c),
        .pdu_ok_c(pdu_ok_c),
        .s_axi_tx_tkeep(s_axi_tx_tkeep),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .tlast_txdv_coincide_r0(tlast_txdv_coincide_r0),
        .tlast_txdv_coincide_r_reg_0(tlast_txdv_coincide_r_reg),
        .tx_header_1_c3_out(tx_header_1_c3_out),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .txdatavalid_i(txdatavalid_i),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_TX_LL_DATAPATH tx_ll_datapath_i
       (.Q({Q,tx_pe_data_i[48],tx_pe_data_i[49],tx_pe_data_i[50],tx_pe_data_i[52],tx_pe_data_i[53],tx_pe_data_i[54],tx_pe_data_i[55],tx_pe_data_i[56],tx_pe_data_i[57],tx_pe_data_i[58],tx_pe_data_i[59],tx_pe_data_i[60],tx_pe_data_i[61],tx_pe_data_i[62],tx_pe_data_i[63]}),
        .\TX_DATA_reg[52] (\TX_DATA_reg[63] [4]),
        .channel_up_tx_if(channel_up_tx_if),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_na_idles_i(gen_na_idles_i),
        .gen_sep7_i(gen_sep7_i),
        .gen_sep_i(gen_sep_i),
        .in_frame_c(in_frame_c),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_TX_LL_CONTROL_SM" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_TX_LL_CONTROL_SM
   (gen_cc_i,
    s_axi_tx_tready,
    extend_cc_r,
    gen_sep7_i,
    gen_sep_i,
    \TX_DATA_reg[63] ,
    \TX_DATA_reg[63]_0 ,
    tlast_txdv_coincide_r_reg_0,
    tx_header_1_c3_out,
    TX_HEADER_0_reg,
    in_frame_c,
    data_r_reg_0,
    \TX_DATA_reg[57] ,
    \TX_DATA_reg[58] ,
    R0,
    user_clk,
    tlast_txdv_coincide_r0,
    do_cc_r_reg0,
    txdatavalid_i,
    pdu_ok_c,
    Q,
    channel_up_tx_if,
    tx_pe_data_v_i,
    gen_ch_bond_i,
    gen_na_idles_i,
    CHANNEL_UP_TX_IF_reg,
    DO_CC_reg,
    s_axi_tx_tvalid,
    s_axi_tx_tlast,
    s_axi_tx_tkeep);
  output gen_cc_i;
  output s_axi_tx_tready;
  output extend_cc_r;
  output gen_sep7_i;
  output gen_sep_i;
  output [12:0]\TX_DATA_reg[63] ;
  output \TX_DATA_reg[63]_0 ;
  output tlast_txdv_coincide_r_reg_0;
  output tx_header_1_c3_out;
  output TX_HEADER_0_reg;
  output in_frame_c;
  output data_r_reg_0;
  output \TX_DATA_reg[57] ;
  output \TX_DATA_reg[58] ;
  input R0;
  input user_clk;
  input tlast_txdv_coincide_r0;
  input do_cc_r_reg0;
  input txdatavalid_i;
  input pdu_ok_c;
  input [14:0]Q;
  input channel_up_tx_if;
  input tx_pe_data_v_i;
  input gen_ch_bond_i;
  input gen_na_idles_i;
  input CHANNEL_UP_TX_IF_reg;
  input DO_CC_reg;
  input s_axi_tx_tvalid;
  input s_axi_tx_tlast;
  input [0:7]s_axi_tx_tkeep;

  wire CHANNEL_UP_TX_IF_reg;
  wire DO_CC_reg;
  wire GEN_SEP7_i_10_n_0;
  wire GEN_SEP7_i_1_n_0;
  wire GEN_SEP7_i_2_n_0;
  wire GEN_SEP7_i_3_n_0;
  wire GEN_SEP7_i_4_n_0;
  wire GEN_SEP7_i_5_n_0;
  wire GEN_SEP7_i_6_n_0;
  wire GEN_SEP7_i_7_n_0;
  wire GEN_SEP7_i_8_n_0;
  wire GEN_SEP7_i_9_n_0;
  wire GEN_SEP_i_1_n_0;
  wire GEN_SEP_i_2_n_0;
  wire GEN_SEP_i_3_n_0;
  wire [14:0]Q;
  wire R0;
  wire \SEP_NB[0]_i_1_n_0 ;
  wire \SEP_NB[1]_i_1_n_0 ;
  wire \SEP_NB[2]_i_1_n_0 ;
  wire \TX_DATA[55]_i_2_n_0 ;
  wire \TX_DATA[63]_i_2_n_0 ;
  wire \TX_DATA[63]_i_3_n_0 ;
  wire \TX_DATA_reg[57] ;
  wire \TX_DATA_reg[58] ;
  wire [12:0]\TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire TX_HEADER_0_reg;
  wire channel_full_c;
  wire channel_full_r;
  wire channel_full_r2;
  wire channel_full_r_i_2_n_0;
  wire channel_full_r_i_3_n_0;
  wire channel_up_tx_if;
  wire data_r;
  wire data_r_i_1_n_0;
  wire data_r_reg_0;
  wire datavalid_in_r;
  wire datavalid_in_r2;
  wire datavalid_pdu;
  wire datavalid_pdu_i_1_n_0;
  wire do_cc_r;
  wire do_cc_r_reg0;
  wire extend_cc_r;
  wire extend_cc_r_i_1_n_0;
  wire full_data_r;
  wire full_data_r_i_5_n_0;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire gen_sep7_i;
  wire gen_sep7_r;
  wire gen_sep7_r_i_1_n_0;
  wire gen_sep_c;
  wire gen_sep_i;
  wire [0:2]gen_sep_nb_c;
  wire [0:2]gen_sep_nb_r;
  wire \gen_sep_nb_r[0]_i_2_n_0 ;
  wire \gen_sep_nb_r[2]_i_2_n_0 ;
  wire \gen_sep_nb_r[2]_i_3_n_0 ;
  wire gen_sep_r;
  wire gen_sep_r_i_1_n_0;
  wire gen_sep_r_i_4_n_0;
  wire gen_sep_r_i_5_n_0;
  wire gen_sep_r_i_6_n_0;
  wire gen_sep_r_i_7_n_0;
  wire idle_r;
  wire idle_r_i_1_n_0;
  wire in_frame_c;
  wire next_full_data_c;
  wire next_partial_data_c;
  wire p_17_in;
  wire partial_data_r;
  wire partial_data_r_i_2_n_0;
  wire partial_data_r_i_3_n_0;
  wire partial_data_r_i_4_n_0;
  wire pdu_ok_c;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready;
  wire s_axi_tx_tready0;
  wire s_axi_tx_tready_i_3_n_0;
  wire s_axi_tx_tvalid;
  wire sep0_lane0_r;
  wire sep0_lane0_r_i_1_n_0;
  wire [0:2]sep_nb_i;
  wire tlast_txdv_coincide_r;
  wire tlast_txdv_coincide_r0;
  wire tlast_txdv_coincide_r_i_3_n_0;
  wire tlast_txdv_coincide_r_reg_0;
  wire tx_header_1_c3_out;
  wire tx_pe_data_v_i;
  wire txdatavalid_i;
  wire user_clk;

  LUT6 #(
    .INIT(64'hFFFFFFEA0000002A)) 
    GEN_SEP7_i_1
       (.I0(GEN_SEP7_i_2_n_0),
        .I1(GEN_SEP7_i_3_n_0),
        .I2(GEN_SEP7_i_4_n_0),
        .I3(GEN_SEP7_i_5_n_0),
        .I4(GEN_SEP7_i_6_n_0),
        .I5(gen_sep7_i),
        .O(GEN_SEP7_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    GEN_SEP7_i_10
       (.I0(s_axi_tx_tkeep[1]),
        .I1(s_axi_tx_tkeep[2]),
        .I2(s_axi_tx_tkeep[3]),
        .I3(s_axi_tx_tkeep[4]),
        .O(GEN_SEP7_i_10_n_0));
  LUT6 #(
    .INIT(64'h2000FFFF20002000)) 
    GEN_SEP7_i_2
       (.I0(tlast_txdv_coincide_r_reg_0),
        .I1(s_axi_tx_tkeep[7]),
        .I2(s_axi_tx_tready),
        .I3(next_partial_data_c),
        .I4(datavalid_in_r2),
        .I5(gen_sep7_r),
        .O(GEN_SEP7_i_2_n_0));
  LUT6 #(
    .INIT(64'h5555455555555555)) 
    GEN_SEP7_i_3
       (.I0(GEN_SEP7_i_7_n_0),
        .I1(datavalid_in_r),
        .I2(next_partial_data_c),
        .I3(s_axi_tx_tready),
        .I4(s_axi_tx_tkeep[7]),
        .I5(tlast_txdv_coincide_r_reg_0),
        .O(GEN_SEP7_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h54)) 
    GEN_SEP7_i_4
       (.I0(datavalid_in_r2),
        .I1(gen_sep_i),
        .I2(gen_sep7_i),
        .O(GEN_SEP7_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'hCF88)) 
    GEN_SEP7_i_5
       (.I0(gen_sep_i),
        .I1(gen_cc_i),
        .I2(datavalid_in_r2),
        .I3(gen_sep_r),
        .O(GEN_SEP7_i_5_n_0));
  LUT6 #(
    .INIT(64'h000000000808FF08)) 
    GEN_SEP7_i_6
       (.I0(pdu_ok_c),
        .I1(sep0_lane0_r),
        .I2(s_axi_tx_tready),
        .I3(next_partial_data_c),
        .I4(GEN_SEP7_i_8_n_0),
        .I5(datavalid_in_r),
        .O(GEN_SEP7_i_6_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    GEN_SEP7_i_7
       (.I0(gen_sep7_r),
        .I1(datavalid_in_r2),
        .O(GEN_SEP7_i_7_n_0));
  LUT6 #(
    .INIT(64'h77F777F7FFFF77F7)) 
    GEN_SEP7_i_8
       (.I0(s_axi_tx_tready),
        .I1(channel_up_tx_if),
        .I2(GEN_SEP7_i_9_n_0),
        .I3(GEN_SEP7_i_10_n_0),
        .I4(channel_full_r_i_2_n_0),
        .I5(partial_data_r_i_3_n_0),
        .O(GEN_SEP7_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    GEN_SEP7_i_9
       (.I0(s_axi_tx_tkeep[6]),
        .I1(s_axi_tx_tkeep[5]),
        .I2(s_axi_tx_tkeep[0]),
        .I3(s_axi_tx_tkeep[7]),
        .O(GEN_SEP7_i_9_n_0));
  FDRE GEN_SEP7_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(GEN_SEP7_i_1_n_0),
        .Q(gen_sep7_i),
        .R(R0));
  LUT6 #(
    .INIT(64'hFFFBFFFBF4F0FFF0)) 
    GEN_SEP_i_1
       (.I0(GEN_SEP_i_2_n_0),
        .I1(GEN_SEP7_i_3_n_0),
        .I2(GEN_SEP_i_3_n_0),
        .I3(gen_sep_c),
        .I4(datavalid_in_r),
        .I5(gen_sep_i),
        .O(GEN_SEP_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'hF322)) 
    GEN_SEP_i_2
       (.I0(gen_sep7_i),
        .I1(datavalid_in_r2),
        .I2(gen_cc_i),
        .I3(gen_sep_i),
        .O(GEN_SEP_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hA2)) 
    GEN_SEP_i_3
       (.I0(gen_sep_r),
        .I1(datavalid_in_r2),
        .I2(gen_cc_i),
        .O(GEN_SEP_i_3_n_0));
  FDRE GEN_SEP_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(GEN_SEP_i_1_n_0),
        .Q(gen_sep_i),
        .R(R0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \SEP_NB[0]_i_1 
       (.I0(gen_sep_nb_c[0]),
        .I1(datavalid_in_r),
        .I2(gen_sep_nb_r[0]),
        .O(\SEP_NB[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \SEP_NB[1]_i_1 
       (.I0(gen_sep_nb_c[1]),
        .I1(datavalid_in_r),
        .I2(gen_sep_nb_r[1]),
        .O(\SEP_NB[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \SEP_NB[2]_i_1 
       (.I0(gen_sep_nb_c[2]),
        .I1(datavalid_in_r),
        .I2(gen_sep_nb_r[2]),
        .O(\SEP_NB[2]_i_1_n_0 ));
  FDRE \SEP_NB_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\SEP_NB[0]_i_1_n_0 ),
        .Q(sep_nb_i[0]),
        .R(1'b0));
  FDRE \SEP_NB_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\SEP_NB[1]_i_1_n_0 ),
        .Q(sep_nb_i[1]),
        .R(1'b0));
  FDRE \SEP_NB_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\SEP_NB[2]_i_1_n_0 ),
        .Q(sep_nb_i[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4F44444444444444)) 
    \TX_DATA[48]_i_1 
       (.I0(\TX_DATA[55]_i_2_n_0 ),
        .I1(Q[8]),
        .I2(\TX_DATA_reg[63]_0 ),
        .I3(gen_sep_i),
        .I4(channel_up_tx_if),
        .I5(sep_nb_i[2]),
        .O(\TX_DATA_reg[63] [0]));
  LUT6 #(
    .INIT(64'h4F44444444444444)) 
    \TX_DATA[49]_i_1 
       (.I0(\TX_DATA[55]_i_2_n_0 ),
        .I1(Q[9]),
        .I2(\TX_DATA_reg[63]_0 ),
        .I3(gen_sep_i),
        .I4(channel_up_tx_if),
        .I5(sep_nb_i[1]),
        .O(\TX_DATA_reg[63] [1]));
  LUT6 #(
    .INIT(64'h4F44444444444444)) 
    \TX_DATA[50]_i_1 
       (.I0(\TX_DATA[55]_i_2_n_0 ),
        .I1(Q[10]),
        .I2(\TX_DATA_reg[63]_0 ),
        .I3(gen_sep_i),
        .I4(channel_up_tx_if),
        .I5(sep_nb_i[0]),
        .O(\TX_DATA_reg[63] [2]));
  LUT6 #(
    .INIT(64'h000000000000A080)) 
    \TX_DATA[51]_i_1 
       (.I0(Q[11]),
        .I1(tx_pe_data_v_i),
        .I2(channel_up_tx_if),
        .I3(gen_sep7_i),
        .I4(gen_sep_i),
        .I5(\TX_DATA_reg[63]_0 ),
        .O(\TX_DATA_reg[63] [3]));
  LUT5 #(
    .INIT(32'h10FF1010)) 
    \TX_DATA[53]_i_1 
       (.I0(gen_cc_i),
        .I1(gen_ch_bond_i),
        .I2(gen_na_idles_i),
        .I3(\TX_DATA[55]_i_2_n_0 ),
        .I4(Q[12]),
        .O(\TX_DATA_reg[63] [4]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \TX_DATA[54]_i_1 
       (.I0(gen_cc_i),
        .I1(gen_ch_bond_i),
        .I2(\TX_DATA[55]_i_2_n_0 ),
        .I3(Q[13]),
        .O(\TX_DATA_reg[63] [5]));
  LUT3 #(
    .INIT(8'hBA)) 
    \TX_DATA[55]_i_1 
       (.I0(gen_cc_i),
        .I1(\TX_DATA[55]_i_2_n_0 ),
        .I2(Q[14]),
        .O(\TX_DATA_reg[63] [6]));
  LUT5 #(
    .INIT(32'hEEFFEFFF)) 
    \TX_DATA[55]_i_2 
       (.I0(\TX_DATA_reg[63]_0 ),
        .I1(gen_sep_i),
        .I2(gen_sep7_i),
        .I3(channel_up_tx_if),
        .I4(tx_pe_data_v_i),
        .O(\TX_DATA[55]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    \TX_DATA[56]_i_1 
       (.I0(Q[0]),
        .I1(\TX_DATA[63]_i_2_n_0 ),
        .I2(\TX_DATA[63]_i_3_n_0 ),
        .I3(\TX_DATA_reg[63]_0 ),
        .O(\TX_DATA_reg[63] [7]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hBAAAAAAA)) 
    \TX_DATA[57]_i_1 
       (.I0(gen_sep_i),
        .I1(gen_sep7_i),
        .I2(tx_pe_data_v_i),
        .I3(channel_up_tx_if),
        .I4(Q[1]),
        .O(\TX_DATA_reg[57] ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'hBAAAAAAA)) 
    \TX_DATA[58]_i_2 
       (.I0(gen_sep_i),
        .I1(gen_sep7_i),
        .I2(tx_pe_data_v_i),
        .I3(channel_up_tx_if),
        .I4(Q[2]),
        .O(\TX_DATA_reg[58] ));
  LUT6 #(
    .INIT(64'hEFEEAAAAEEEEAAAA)) 
    \TX_DATA[59]_i_1 
       (.I0(\TX_DATA_reg[63]_0 ),
        .I1(gen_sep_i),
        .I2(gen_sep7_i),
        .I3(tx_pe_data_v_i),
        .I4(channel_up_tx_if),
        .I5(Q[3]),
        .O(\TX_DATA_reg[63] [8]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF004000)) 
    \TX_DATA[60]_i_1 
       (.I0(gen_sep7_i),
        .I1(tx_pe_data_v_i),
        .I2(Q[4]),
        .I3(channel_up_tx_if),
        .I4(gen_sep_i),
        .I5(\TX_DATA_reg[63]_0 ),
        .O(\TX_DATA_reg[63] [9]));
  LUT6 #(
    .INIT(64'hBBBAAAAABABAAAAA)) 
    \TX_DATA[61]_i_1 
       (.I0(\TX_DATA_reg[63]_0 ),
        .I1(gen_sep_i),
        .I2(gen_sep7_i),
        .I3(tx_pe_data_v_i),
        .I4(channel_up_tx_if),
        .I5(Q[5]),
        .O(\TX_DATA_reg[63] [10]));
  LUT6 #(
    .INIT(64'hFFFFFFFF0F080000)) 
    \TX_DATA[62]_i_1 
       (.I0(tx_pe_data_v_i),
        .I1(Q[6]),
        .I2(gen_sep_i),
        .I3(gen_sep7_i),
        .I4(channel_up_tx_if),
        .I5(\TX_DATA_reg[63]_0 ),
        .O(\TX_DATA_reg[63] [11]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    \TX_DATA[63]_i_1 
       (.I0(Q[7]),
        .I1(\TX_DATA[63]_i_2_n_0 ),
        .I2(\TX_DATA[63]_i_3_n_0 ),
        .I3(\TX_DATA_reg[63]_0 ),
        .O(\TX_DATA_reg[63] [12]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \TX_DATA[63]_i_2 
       (.I0(gen_sep_i),
        .I1(gen_sep7_i),
        .I2(tx_pe_data_v_i),
        .I3(channel_up_tx_if),
        .O(\TX_DATA[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \TX_DATA[63]_i_3 
       (.I0(gen_cc_i),
        .I1(gen_ch_bond_i),
        .I2(gen_na_idles_i),
        .I3(channel_up_tx_if),
        .I4(gen_sep7_i),
        .I5(gen_sep_i),
        .O(\TX_DATA[63]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    TX_HEADER_0_i_1
       (.I0(gen_sep7_i),
        .I1(gen_sep_i),
        .I2(channel_up_tx_if),
        .O(TX_HEADER_0_reg));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    TX_HEADER_1_i_3
       (.I0(channel_up_tx_if),
        .I1(gen_sep_i),
        .I2(gen_sep7_i),
        .O(tx_header_1_c3_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEEEEF)) 
    TX_HEADER_1_i_5
       (.I0(gen_ch_bond_i),
        .I1(gen_cc_i),
        .I2(gen_sep_i),
        .I3(gen_sep7_i),
        .I4(tx_pe_data_v_i),
        .I5(gen_na_idles_i),
        .O(\TX_DATA_reg[63]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    TX_PE_DATA_V_i_1
       (.I0(s_axi_tx_tvalid),
        .I1(s_axi_tx_tready),
        .O(in_frame_c));
  FDRE channel_full_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_full_r),
        .Q(channel_full_r2),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    channel_full_r_i_1
       (.I0(s_axi_tx_tkeep[6]),
        .I1(s_axi_tx_tkeep[1]),
        .I2(s_axi_tx_tkeep[0]),
        .I3(channel_full_r_i_2_n_0),
        .I4(channel_full_r_i_3_n_0),
        .I5(s_axi_tx_tkeep[7]),
        .O(channel_full_c));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    channel_full_r_i_2
       (.I0(s_axi_tx_tkeep[4]),
        .I1(s_axi_tx_tkeep[5]),
        .I2(s_axi_tx_tkeep[2]),
        .I3(s_axi_tx_tkeep[3]),
        .O(channel_full_r_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    channel_full_r_i_3
       (.I0(s_axi_tx_tlast),
        .I1(s_axi_tx_tvalid),
        .O(channel_full_r_i_3_n_0));
  FDRE channel_full_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_full_c),
        .Q(channel_full_r),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00001000)) 
    data_r_i_1
       (.I0(s_axi_tx_tready_i_3_n_0),
        .I1(s_axi_tx_tlast),
        .I2(s_axi_tx_tvalid),
        .I3(s_axi_tx_tready),
        .I4(full_data_r_i_5_n_0),
        .O(data_r_i_1_n_0));
  FDRE data_r_reg
       (.C(user_clk),
        .CE(pdu_ok_c),
        .D(data_r_i_1_n_0),
        .Q(data_r),
        .R(R0));
  FDRE datavalid_in_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(datavalid_in_r),
        .Q(datavalid_in_r2),
        .R(1'b0));
  FDRE datavalid_in_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(txdatavalid_i),
        .Q(datavalid_in_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hDF)) 
    datavalid_pdu_i_1
       (.I0(channel_full_r2),
        .I1(datavalid_in_r),
        .I2(datavalid_in_r2),
        .O(datavalid_pdu_i_1_n_0));
  FDRE datavalid_pdu_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(datavalid_pdu_i_1_n_0),
        .Q(datavalid_pdu),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    do_cc_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r_reg0),
        .Q(do_cc_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB0)) 
    extend_cc_r_i_1
       (.I0(extend_cc_r),
        .I1(txdatavalid_i),
        .I2(DO_CC_reg),
        .O(extend_cc_r_i_1_n_0));
  FDRE extend_cc_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(extend_cc_r_i_1_n_0),
        .Q(extend_cc_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAEAAAAAAAAAAA)) 
    full_data_r_i_2
       (.I0(s_axi_tx_tready_i_3_n_0),
        .I1(s_axi_tx_tlast),
        .I2(s_axi_tx_tvalid),
        .I3(s_axi_tx_tready),
        .I4(full_data_r_i_5_n_0),
        .I5(channel_full_c),
        .O(next_full_data_c));
  LUT4 #(
    .INIT(16'hEFFF)) 
    full_data_r_i_4
       (.I0(do_cc_r),
        .I1(DO_CC_reg),
        .I2(datavalid_pdu),
        .I3(channel_up_tx_if),
        .O(data_r_reg_0));
  LUT4 #(
    .INIT(16'h0001)) 
    full_data_r_i_5
       (.I0(data_r),
        .I1(full_data_r),
        .I2(idle_r),
        .I3(partial_data_r),
        .O(full_data_r_i_5_n_0));
  FDRE full_data_r_reg
       (.C(user_clk),
        .CE(pdu_ok_c),
        .D(next_full_data_c),
        .Q(full_data_r),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    gen_cc_flop
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r),
        .Q(gen_cc_i),
        .R(R0));
  LUT3 #(
    .INIT(8'hB8)) 
    gen_sep7_r_i_1
       (.I0(p_17_in),
        .I1(datavalid_in_r2),
        .I2(gen_sep7_r),
        .O(gen_sep7_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    gen_sep7_r_i_2
       (.I0(s_axi_tx_tready_i_3_n_0),
        .I1(full_data_r_i_5_n_0),
        .I2(channel_full_r_i_3_n_0),
        .I3(s_axi_tx_tready),
        .I4(s_axi_tx_tkeep[7]),
        .I5(tlast_txdv_coincide_r_reg_0),
        .O(p_17_in));
  FDRE gen_sep7_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(gen_sep7_r_i_1_n_0),
        .Q(gen_sep7_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000A3000000)) 
    \gen_sep_nb_r[0]_i_1 
       (.I0(s_axi_tx_tkeep[4]),
        .I1(s_axi_tx_tkeep[6]),
        .I2(s_axi_tx_tkeep[5]),
        .I3(s_axi_tx_tkeep[3]),
        .I4(s_axi_tx_tkeep[2]),
        .I5(\gen_sep_nb_r[0]_i_2_n_0 ),
        .O(gen_sep_nb_c[0]));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \gen_sep_nb_r[0]_i_2 
       (.I0(full_data_r),
        .I1(sep0_lane0_r),
        .I2(s_axi_tx_tkeep[7]),
        .I3(s_axi_tx_tkeep[0]),
        .I4(s_axi_tx_tkeep[1]),
        .O(\gen_sep_nb_r[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000C0010001)) 
    \gen_sep_nb_r[1]_i_1 
       (.I0(s_axi_tx_tkeep[6]),
        .I1(s_axi_tx_tkeep[5]),
        .I2(s_axi_tx_tkeep[4]),
        .I3(s_axi_tx_tkeep[3]),
        .I4(s_axi_tx_tkeep[2]),
        .I5(\gen_sep_nb_r[0]_i_2_n_0 ),
        .O(gen_sep_nb_c[1]));
  LUT6 #(
    .INIT(64'h0400000000000401)) 
    \gen_sep_nb_r[2]_i_1 
       (.I0(\gen_sep_nb_r[2]_i_2_n_0 ),
        .I1(s_axi_tx_tkeep[1]),
        .I2(\gen_sep_nb_r[2]_i_3_n_0 ),
        .I3(s_axi_tx_tkeep[2]),
        .I4(s_axi_tx_tkeep[3]),
        .I5(s_axi_tx_tkeep[4]),
        .O(gen_sep_nb_c[2]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h5C)) 
    \gen_sep_nb_r[2]_i_2 
       (.I0(s_axi_tx_tkeep[4]),
        .I1(s_axi_tx_tkeep[6]),
        .I2(s_axi_tx_tkeep[5]),
        .O(\gen_sep_nb_r[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFFFEFFFEFF)) 
    \gen_sep_nb_r[2]_i_3 
       (.I0(full_data_r),
        .I1(sep0_lane0_r),
        .I2(s_axi_tx_tkeep[7]),
        .I3(s_axi_tx_tkeep[0]),
        .I4(s_axi_tx_tkeep[6]),
        .I5(s_axi_tx_tkeep[5]),
        .O(\gen_sep_nb_r[2]_i_3_n_0 ));
  FDRE \gen_sep_nb_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(gen_sep_nb_c[0]),
        .Q(gen_sep_nb_r[0]),
        .R(1'b0));
  FDRE \gen_sep_nb_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(gen_sep_nb_c[1]),
        .Q(gen_sep_nb_r[1]),
        .R(1'b0));
  FDRE \gen_sep_nb_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(gen_sep_nb_c[2]),
        .Q(gen_sep_nb_r[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hC0CCAAAA)) 
    gen_sep_r_i_1
       (.I0(gen_sep_c),
        .I1(gen_sep_r),
        .I2(gen_cc_i),
        .I3(datavalid_in_r2),
        .I4(datavalid_in_r),
        .O(gen_sep_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0100FFFF01000100)) 
    gen_sep_r_i_2
       (.I0(CHANNEL_UP_TX_IF_reg),
        .I1(gen_sep_r_i_4_n_0),
        .I2(tlast_txdv_coincide_r_reg_0),
        .I3(next_partial_data_c),
        .I4(gen_sep_r_i_5_n_0),
        .I5(pdu_ok_c),
        .O(gen_sep_c));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    gen_sep_r_i_4
       (.I0(s_axi_tx_tkeep[7]),
        .I1(s_axi_tx_tkeep[0]),
        .I2(gen_sep_r_i_6_n_0),
        .I3(gen_sep_r_i_7_n_0),
        .I4(s_axi_tx_tkeep[2]),
        .I5(s_axi_tx_tkeep[1]),
        .O(gen_sep_r_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'hB)) 
    gen_sep_r_i_5
       (.I0(s_axi_tx_tready),
        .I1(sep0_lane0_r),
        .O(gen_sep_r_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h1)) 
    gen_sep_r_i_6
       (.I0(s_axi_tx_tkeep[5]),
        .I1(s_axi_tx_tkeep[6]),
        .O(gen_sep_r_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gen_sep_r_i_7
       (.I0(s_axi_tx_tkeep[4]),
        .I1(s_axi_tx_tkeep[3]),
        .O(gen_sep_r_i_7_n_0));
  FDRE gen_sep_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(gen_sep_r_i_1_n_0),
        .Q(gen_sep_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000008F8F8F)) 
    idle_r_i_1
       (.I0(gen_sep_i),
        .I1(full_data_r),
        .I2(sep0_lane0_r),
        .I3(s_axi_tx_tready),
        .I4(s_axi_tx_tvalid),
        .I5(full_data_r_i_5_n_0),
        .O(idle_r_i_1_n_0));
  FDSE idle_r_reg
       (.C(user_clk),
        .CE(pdu_ok_c),
        .D(idle_r_i_1_n_0),
        .Q(idle_r),
        .S(R0));
  LUT6 #(
    .INIT(64'h00000000000000FB)) 
    partial_data_r_i_1
       (.I0(partial_data_r_i_2_n_0),
        .I1(channel_full_r_i_2_n_0),
        .I2(partial_data_r_i_3_n_0),
        .I3(partial_data_r_i_4_n_0),
        .I4(full_data_r_i_5_n_0),
        .I5(s_axi_tx_tready_i_3_n_0),
        .O(next_partial_data_c));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    partial_data_r_i_2
       (.I0(s_axi_tx_tkeep[7]),
        .I1(s_axi_tx_tvalid),
        .I2(s_axi_tx_tlast),
        .O(partial_data_r_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    partial_data_r_i_3
       (.I0(s_axi_tx_tkeep[6]),
        .I1(s_axi_tx_tkeep[1]),
        .I2(s_axi_tx_tkeep[0]),
        .O(partial_data_r_i_3_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    partial_data_r_i_4
       (.I0(s_axi_tx_tready),
        .I1(s_axi_tx_tvalid),
        .I2(s_axi_tx_tlast),
        .O(partial_data_r_i_4_n_0));
  FDRE partial_data_r_reg
       (.C(user_clk),
        .CE(pdu_ok_c),
        .D(next_partial_data_c),
        .Q(partial_data_r),
        .R(R0));
  LUT5 #(
    .INIT(32'h0000DF00)) 
    s_axi_tx_tready_i_2
       (.I0(next_full_data_c),
        .I1(tlast_txdv_coincide_r),
        .I2(s_axi_tx_tready),
        .I3(pdu_ok_c),
        .I4(s_axi_tx_tready_i_3_n_0),
        .O(s_axi_tx_tready0));
  LUT3 #(
    .INIT(8'h2A)) 
    s_axi_tx_tready_i_3
       (.I0(sep0_lane0_r),
        .I1(full_data_r),
        .I2(gen_sep_i),
        .O(s_axi_tx_tready_i_3_n_0));
  FDRE s_axi_tx_tready_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tready0),
        .Q(s_axi_tx_tready),
        .R(R0));
  LUT6 #(
    .INIT(64'h22F2222222222222)) 
    sep0_lane0_r_i_1
       (.I0(sep0_lane0_r),
        .I1(pdu_ok_c),
        .I2(next_full_data_c),
        .I3(tlast_txdv_coincide_r),
        .I4(s_axi_tx_tready),
        .I5(channel_up_tx_if),
        .O(sep0_lane0_r_i_1_n_0));
  FDRE sep0_lane0_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(sep0_lane0_r_i_1_n_0),
        .Q(sep0_lane0_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    tlast_txdv_coincide_r_i_2
       (.I0(tlast_txdv_coincide_r_i_3_n_0),
        .I1(s_axi_tx_tkeep[5]),
        .I2(s_axi_tx_tkeep[4]),
        .I3(s_axi_tx_tkeep[0]),
        .I4(s_axi_tx_tkeep[1]),
        .I5(s_axi_tx_tkeep[6]),
        .O(tlast_txdv_coincide_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h7)) 
    tlast_txdv_coincide_r_i_3
       (.I0(s_axi_tx_tkeep[3]),
        .I1(s_axi_tx_tkeep[2]),
        .O(tlast_txdv_coincide_r_i_3_n_0));
  FDRE tlast_txdv_coincide_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(tlast_txdv_coincide_r0),
        .Q(tlast_txdv_coincide_r),
        .R(R0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_TX_LL_DATAPATH" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_TX_LL_DATAPATH
   (tx_pe_data_v_i,
    \TX_DATA_reg[52] ,
    Q,
    in_frame_c,
    user_clk,
    gen_ch_bond_i,
    gen_cc_i,
    gen_na_idles_i,
    channel_up_tx_if,
    gen_sep7_i,
    gen_sep_i,
    s_axi_tx_tdata);
  output tx_pe_data_v_i;
  output [0:0]\TX_DATA_reg[52] ;
  output [62:0]Q;
  input in_frame_c;
  input user_clk;
  input gen_ch_bond_i;
  input gen_cc_i;
  input gen_na_idles_i;
  input channel_up_tx_if;
  input gen_sep7_i;
  input gen_sep_i;
  input [0:63]s_axi_tx_tdata;

  wire [62:0]Q;
  wire \TX_DATA[52]_i_2_n_0 ;
  wire [0:0]\TX_DATA_reg[52] ;
  wire channel_up_tx_if;
  wire gen_cc_i;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire gen_sep7_i;
  wire gen_sep_i;
  wire in_frame_c;
  wire [0:63]s_axi_tx_tdata;
  wire [51:51]tx_pe_data_i;
  wire tx_pe_data_v_i;
  wire user_clk;

  LUT3 #(
    .INIT(8'h02)) 
    \TX_DATA[52]_i_1 
       (.I0(\TX_DATA[52]_i_2_n_0 ),
        .I1(gen_ch_bond_i),
        .I2(gen_cc_i),
        .O(\TX_DATA_reg[52] ));
  LUT6 #(
    .INIT(64'hAAAAAAAAEAEAEAFF)) 
    \TX_DATA[52]_i_2 
       (.I0(gen_na_idles_i),
        .I1(channel_up_tx_if),
        .I2(tx_pe_data_i),
        .I3(tx_pe_data_v_i),
        .I4(gen_sep7_i),
        .I5(gen_sep_i),
        .O(\TX_DATA[52]_i_2_n_0 ));
  FDRE TX_PE_DATA_V_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in_frame_c),
        .Q(tx_pe_data_v_i),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[0]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[10]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[11]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[12]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[13]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[14]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[15]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[16]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[17]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[18]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[19]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[1]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[20]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[21]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[22]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[23]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[24]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[25]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[26]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[27]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[28]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[29]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[2]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[30]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[32]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[33]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[34]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[35]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[36]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[37]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[38]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[39]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[3]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[40]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[41]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[42]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[43]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[44]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[45]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[46]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[47]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[48]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[49]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[4]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[50]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[51]),
        .Q(tx_pe_data_i),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[52]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[53]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[54]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[55]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[56]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[57]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[58]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[59]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[5]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[60]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[61]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[62]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[63]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[6]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[7]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[8]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[9]),
        .Q(Q[53]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_WRAPPER" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_WRAPPER
   (gt_to_common_qpllreset_out,
    DRPDO_OUT,
    DRPRDY_OUT,
    gt_powergood,
    txn,
    txp,
    tx_out_clk,
    gt_pll_lock,
    master_do_rd_en,
    rx_header_err_i,
    link_reset_0_c,
    link_reset_out,
    FSM_RESETDONE_j_reg_0,
    rx_lossofsync_i,
    s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg,
    txdatavalid_symgen_i,
    tlast_txdv_coincide_r0,
    txdatavalid_i,
    extend_cc_r1,
    pdu_ok_c,
    Q,
    rxdatavalid_i,
    bufg_gt_clr_out,
    \TX_DATA_reg[58] ,
    HARD_ERR_reg,
    \RX_DATA_REG_reg[0] ,
    TX_HEADER_0_reg,
    gt_qplllock_quad1_in,
    init_clk,
    RESET,
    DRPADDR_IN,
    DRPDI_IN,
    drpen_in,
    drpwe_in,
    gt_refclk1,
    rxn,
    rxp,
    loopback,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_rxcdrovrden_in,
    sync_clk,
    user_clk,
    in0,
    rx_polarity_r_reg,
    SYSTEM_RESET_reg,
    SR,
    tx_reset_i,
    mmcm_not_locked,
    s_axi_tx_tkeep,
    s_axi_tx_tvalid,
    s_axi_tx_tlast,
    \s_axi_tx_tkeep[2] ,
    do_cc_r_reg,
    gen_ch_bond_int_reg,
    channel_up_tx_if,
    enable_err_detect_i,
    D,
    \TX_DATA_reg[63] );
  output gt_to_common_qpllreset_out;
  output [15:0]DRPDO_OUT;
  output DRPRDY_OUT;
  output [0:0]gt_powergood;
  output txn;
  output txp;
  output tx_out_clk;
  output gt_pll_lock;
  output master_do_rd_en;
  output rx_header_err_i;
  output link_reset_0_c;
  output link_reset_out;
  output FSM_RESETDONE_j_reg_0;
  output rx_lossofsync_i;
  output s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg;
  output txdatavalid_symgen_i;
  output tlast_txdv_coincide_r0;
  output txdatavalid_i;
  output extend_cc_r1;
  output pdu_ok_c;
  output [66:0]Q;
  output rxdatavalid_i;
  output bufg_gt_clr_out;
  output \TX_DATA_reg[58] ;
  output HARD_ERR_reg;
  output \RX_DATA_REG_reg[0] ;
  output TX_HEADER_0_reg;
  input gt_qplllock_quad1_in;
  input init_clk;
  input RESET;
  input [9:0]DRPADDR_IN;
  input [15:0]DRPDI_IN;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input gt_refclk1;
  input rxn;
  input rxp;
  input [2:0]loopback;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_rxcdrovrden_in;
  input sync_clk;
  input user_clk;
  input in0;
  input rx_polarity_r_reg;
  input SYSTEM_RESET_reg;
  input [0:0]SR;
  input tx_reset_i;
  input mmcm_not_locked;
  input [0:0]s_axi_tx_tkeep;
  input s_axi_tx_tvalid;
  input s_axi_tx_tlast;
  input \s_axi_tx_tkeep[2] ;
  input do_cc_r_reg;
  input gen_ch_bond_int_reg;
  input channel_up_tx_if;
  input enable_err_detect_i;
  input [1:0]D;
  input [63:0]\TX_DATA_reg[63] ;

  wire ANY_VLD_BTF_FLAG;
  wire ANY_VLD_BTF_FLAG0__4;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire [1:0]D;
  wire [9:0]DRPADDR_IN;
  wire [15:0]DRPDI_IN;
  wire [15:0]DRPDO_OUT;
  wire DRPRDY_OUT;
  wire FSM_RESETDONE_j;
  wire FSM_RESETDONE_j_reg_0;
  wire HARD_ERR_reg;
  wire LINK_RESET_OUT0;
  wire [66:0]Q;
  wire RESET;
  wire \RX_DATA_REG_reg[0] ;
  wire [0:0]SR;
  wire START_CB_WRITES_OUT;
  wire SYSTEM_RESET_reg;
  wire [63:0]TXDATA_IN_REG;
  wire \TX_DATA_reg[58] ;
  wire [63:0]\TX_DATA_reg[63] ;
  wire TX_HEADER_0_reg;
  wire TX_HEADER_1_i_4_n_0;
  (* RTL_KEEP = "true" *) wire all_start_cb_writes_i;
  (* RTL_KEEP = "true" *) wire all_vld_btf_flag_i;
  wire allow_block_sync_propagation;
  wire allow_block_sync_propagation_reg_n_0;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_i;
  wire blocksync_all_lanes_inrxclk_q;
  wire blocksync_out_i;
  wire bufg_gt_clr_out;
  wire cb_bit_err_out;
  wire cbcc_data_srst;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire \cdr_reset_fsm_cntr_r[0]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[1]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[2]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[3]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[4]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[5]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[5]_i_2_n_0 ;
  wire \cdr_reset_fsm_cntr_r[6]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_2_n_0 ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[0] ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[1] ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[2] ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[3] ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[4] ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[5] ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[6] ;
  wire \cdr_reset_fsm_cntr_r_reg_n_0_[7] ;
  wire cdr_reset_fsm_lnkreset;
  wire [1:0]cdr_reset_fsm_r;
  wire cdr_reset_fsm_r0;
  wire \cdr_reset_fsm_r[0]_i_1_n_0 ;
  wire \cdr_reset_fsm_r[1]_i_3_n_0 ;
  wire \cdr_reset_fsm_r[1]_i_4_n_0 ;
  wire channel_up_tx_if;
  wire common_reset_cbcc_i_n_6;
  wire datavalid_in_r_i_2_n_0;
  wire do_cc_r_reg;
  (* RTL_KEEP = "true" *) wire do_rd_en_i;
  wire [0:0]drpen_in;
  wire [0:0]drpwe_in;
  wire enable_err_detect_i;
  wire extend_cc_r1;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_i;
  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire fsm_resetdone_to_rxreset_in;
  wire full_data_r_i_3_n_0;
  wire gen_ch_bond_int_reg;
  wire gt_pll_lock;
  wire [0:0]gt_powergood;
  wire gt_qpllclk_quad1_in;
  wire gt_qplllock_quad1_i;
  wire gt_qplllock_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_refclk1;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire gtx_reset_comb;
  wire in0;
  wire init_clk;
  wire link_reset_0_c;
  wire link_reset_out;
  wire [2:0]loopback;
  wire master_do_rd_en;
  (* RTL_KEEP = "true" *) wire master_do_rd_en_i;
  wire mmcm_not_locked;
  wire new_gtx_rx_pcsreset_comb;
  wire new_gtx_rx_pcsreset_comb0;
  wire p_9_in;
  wire pdu_ok_c;
  wire [63:0]pos_rxdata_from_gtx_i;
  wire pos_rxdatavalid_i;
  wire [1:0]pos_rxheader_from_gtx_i;
  wire pos_rxheadervalid_i;
  wire [63:0]pre_r1_rxdata_from_gtx_i;
  wire pre_r1_rxdatavalid_i;
  wire [1:0]pre_r1_rxheader_from_gtx_i;
  wire pre_r1_rxheadervalid_i;
  wire [63:0]pre_rxdata_from_gtx_i;
  wire pre_rxdatavalid_i;
  wire [1:0]pre_rxheader_from_gtx_i;
  wire pre_rxheadervalid_i;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_i;
  wire rx_fsm_resetdone_i_i;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_ii;
  wire rx_header_err_i;
  wire rx_lossofsync_i;
  wire rx_polarity_r_reg;
  wire [63:0]rxdata_from_gtx_i;
  wire [63:0]rxdata_to_fifo_i;
  wire rxdatavalid_i;
  wire rxdatavalid_i_1;
  wire rxdatavalid_to_fifo_i;
  wire rxfsm_reset_i;
  wire rxgearboxslip_i;
  wire [1:0]rxheader_from_gtx_i;
  wire [1:0]rxheader_to_fifo_i;
  wire rxheadervalid_i;
  wire rxlossofsync_out_i;
  wire rxlossofsync_out_q;
  wire rxn;
  wire rxp;
  wire rxreset_for_lanes_q;
  wire rxusrclk_out;
  wire [0:0]s_axi_tx_tkeep;
  wire \s_axi_tx_tkeep[2] ;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tvalid;
  wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg;
  wire [63:0]scrambled_data_i;
  wire scrambler_64b66b_gtx0_i_n_0;
  wire sel;
  wire stableclk_gtx_reset_comb;
  wire stg5;
  wire sync_clk;
  wire sync_rx_polarity_r;
  wire tlast_txdv_coincide_r0;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_i;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_ii;
  wire [1:0]tx_hdr_r;
  wire tx_out_clk;
  wire tx_reset_i;
  wire txdatavalid_i;
  wire txdatavalid_symgen_i;
  wire [1:0]txheader_r;
  wire txn;
  wire txp;
  wire [6:0]txseq_counter_i;
  wire \txseq_counter_i_reg_n_0_[0] ;
  wire \txseq_counter_i_reg_n_0_[1] ;
  wire \txseq_counter_i_reg_n_0_[2] ;
  wire \txseq_counter_i_reg_n_0_[3] ;
  wire \txseq_counter_i_reg_n_0_[4] ;
  wire \txseq_counter_i_reg_n_0_[5] ;
  wire \txseq_counter_i_reg_n_0_[6] ;
  wire txsequence_ctr_en_int;
  wire txsequence_ctr_en_int_i_1_n_0;
  wire u_cdc__check_polarity_n_0;
  wire u_rst_sync_txusrclk_gtx_reset_comb_n_1;
  wire user_clk;
  wire valid_btf_detect_dlyd1;

  FDRE FSM_RESETDONE_j_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(FSM_RESETDONE_j_reg_0),
        .Q(FSM_RESETDONE_j),
        .R(1'b0));
  FDRE LINK_RESET_OUT_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(LINK_RESET_OUT0),
        .Q(link_reset_out),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    PLLLKDET_OUT
       (.I0(tx_fsm_resetdone_ii),
        .I1(gt_qplllock_quad1_i),
        .I2(rx_fsm_resetdone_ii),
        .O(gt_pll_lock));
  FDRE RX_NEG_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__check_polarity_n_0),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [0]),
        .Q(TXDATA_IN_REG[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [10]),
        .Q(TXDATA_IN_REG[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [11]),
        .Q(TXDATA_IN_REG[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [12]),
        .Q(TXDATA_IN_REG[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [13]),
        .Q(TXDATA_IN_REG[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [14]),
        .Q(TXDATA_IN_REG[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [15]),
        .Q(TXDATA_IN_REG[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [16]),
        .Q(TXDATA_IN_REG[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [17]),
        .Q(TXDATA_IN_REG[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [18]),
        .Q(TXDATA_IN_REG[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [19]),
        .Q(TXDATA_IN_REG[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [1]),
        .Q(TXDATA_IN_REG[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [20]),
        .Q(TXDATA_IN_REG[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [21]),
        .Q(TXDATA_IN_REG[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [22]),
        .Q(TXDATA_IN_REG[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [23]),
        .Q(TXDATA_IN_REG[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [24]),
        .Q(TXDATA_IN_REG[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [25]),
        .Q(TXDATA_IN_REG[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [26]),
        .Q(TXDATA_IN_REG[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [27]),
        .Q(TXDATA_IN_REG[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [28]),
        .Q(TXDATA_IN_REG[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [29]),
        .Q(TXDATA_IN_REG[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [2]),
        .Q(TXDATA_IN_REG[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [30]),
        .Q(TXDATA_IN_REG[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [31]),
        .Q(TXDATA_IN_REG[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [32]),
        .Q(TXDATA_IN_REG[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [33]),
        .Q(TXDATA_IN_REG[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [34]),
        .Q(TXDATA_IN_REG[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [35]),
        .Q(TXDATA_IN_REG[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [36]),
        .Q(TXDATA_IN_REG[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [37]),
        .Q(TXDATA_IN_REG[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [38]),
        .Q(TXDATA_IN_REG[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [39]),
        .Q(TXDATA_IN_REG[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [3]),
        .Q(TXDATA_IN_REG[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [40]),
        .Q(TXDATA_IN_REG[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [41]),
        .Q(TXDATA_IN_REG[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [42]),
        .Q(TXDATA_IN_REG[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [43]),
        .Q(TXDATA_IN_REG[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [44]),
        .Q(TXDATA_IN_REG[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [45]),
        .Q(TXDATA_IN_REG[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [46]),
        .Q(TXDATA_IN_REG[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [47]),
        .Q(TXDATA_IN_REG[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [48]),
        .Q(TXDATA_IN_REG[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [49]),
        .Q(TXDATA_IN_REG[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [4]),
        .Q(TXDATA_IN_REG[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [50]),
        .Q(TXDATA_IN_REG[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [51]),
        .Q(TXDATA_IN_REG[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [52]),
        .Q(TXDATA_IN_REG[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [53]),
        .Q(TXDATA_IN_REG[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [54]),
        .Q(TXDATA_IN_REG[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [55]),
        .Q(TXDATA_IN_REG[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [56]),
        .Q(TXDATA_IN_REG[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [57]),
        .Q(TXDATA_IN_REG[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [58]),
        .Q(TXDATA_IN_REG[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [59]),
        .Q(TXDATA_IN_REG[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [5]),
        .Q(TXDATA_IN_REG[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [60]),
        .Q(TXDATA_IN_REG[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [61]),
        .Q(TXDATA_IN_REG[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [62]),
        .Q(TXDATA_IN_REG[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [63]),
        .Q(TXDATA_IN_REG[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [6]),
        .Q(TXDATA_IN_REG[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [7]),
        .Q(TXDATA_IN_REG[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [8]),
        .Q(TXDATA_IN_REG[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\TX_DATA_reg[63] [9]),
        .Q(TXDATA_IN_REG[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_DATA[58]_i_1 
       (.I0(txdatavalid_symgen_i),
        .I1(gen_ch_bond_int_reg),
        .I2(channel_up_tx_if),
        .O(\TX_DATA_reg[58] ));
  LUT6 #(
    .INIT(64'hFFFFFFF700000000)) 
    TX_HEADER_1_i_1
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[4] ),
        .I2(TX_HEADER_1_i_4_n_0),
        .I3(\txseq_counter_i_reg_n_0_[6] ),
        .I4(\txseq_counter_i_reg_n_0_[5] ),
        .I5(gen_ch_bond_int_reg),
        .O(TX_HEADER_0_reg));
  LUT5 #(
    .INIT(32'hFFFFFFF7)) 
    TX_HEADER_1_i_2
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[4] ),
        .I2(TX_HEADER_1_i_4_n_0),
        .I3(\txseq_counter_i_reg_n_0_[6] ),
        .I4(\txseq_counter_i_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i));
  LUT3 #(
    .INIT(8'h7F)) 
    TX_HEADER_1_i_4
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .O(TX_HEADER_1_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    allow_block_sync_propagation_reg
       (.C(init_clk),
        .CE(allow_block_sync_propagation),
        .D(cdr_reset_fsm_r[1]),
        .Q(allow_block_sync_propagation_reg_n_0),
        .R(SR));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_MULTI_GT aurora_64b66b_25p78G_multi_gt_i
       (.D(pre_rxdata_from_gtx_i),
        .DRPADDR_IN(DRPADDR_IN),
        .DRPDI_IN(DRPDI_IN),
        .DRPDO_OUT(DRPDO_OUT),
        .DRPRDY_OUT(DRPRDY_OUT),
        .E(sel),
        .Q(txheader_r),
        .RESET(RESET),
        .RXGEARBOXSLIP_OUT_reg(rxgearboxslip_i),
        .SCRAMBLED_DATA_OUT(scrambled_data_i),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .drpen_in(drpen_in),
        .drpwe_in(drpwe_in),
        .fsm_resetdone_to_new_gtx_rx_comb(fsm_resetdone_to_new_gtx_rx_comb),
        .fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_in(gt_qpllclk_quad1_in),
        .gt_qpllrefclk_quad1_in(gt_qpllrefclk_quad1_in),
        .gt_refclk1(gt_refclk1),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gt_to_common_qpllreset_out(gt_to_common_qpllreset_out),
        .gtwiz_reset_rx_datapath_in(rxfsm_reset_i),
        .gtwiz_reset_rx_done_out(rx_fsm_resetdone_i),
        .gtwiz_reset_tx_done_out(tx_fsm_resetdone_i),
        .init_clk(init_clk),
        .loopback(loopback),
        .mmcm_not_locked(mmcm_not_locked),
        .new_gtx_rx_pcsreset_comb0(new_gtx_rx_pcsreset_comb0),
        .out(gt_qplllock_quad1_i),
        .\pre_r1_rxheader_from_gtx_i_reg[1] (pre_rxheader_from_gtx_i),
        .rxdatavalid_out(pre_rxdatavalid_i),
        .rxheadervalid_out(pre_rxheadervalid_i),
        .rxn(rxn),
        .rxp(rxp),
        .rxusrclk_out(rxusrclk_out),
        .s_level_out_d3_reg(sync_rx_polarity_r),
        .sync_clk(sync_clk),
        .tx_out_clk(tx_out_clk),
        .txn(txn),
        .txp(txp),
        .\txseq_counter_i_reg[6] ({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_BLOCK_SYNC_SM block_sync_sm_gtx0_i
       (.D(rxgearboxslip_i),
        .Q(rxheader_from_gtx_i),
        .SR(new_gtx_rx_pcsreset_comb),
        .blocksync_out_i(blocksync_out_i),
        .rxheadervalid_i(rxheadervalid_i),
        .rxusrclk_out(rxusrclk_out));
  FDRE #(
    .INIT(1'b0)) 
    blocksync_all_lanes_inrxclk_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_i),
        .Q(blocksync_all_lanes_inrxclk_q),
        .R(1'b0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_CLOCK_CORRECTION_CHANNEL_BONDING cbcc_gtx0_i
       (.ANY_VLD_BTF_FLAG(ANY_VLD_BTF_FLAG),
        .ANY_VLD_BTF_FLAG0__4(ANY_VLD_BTF_FLAG0__4),
        .CB_detect(CB_detect),
        .CB_detect0(CB_detect0),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .D({rxdatavalid_to_fifo_i,rxheader_to_fifo_i,rxdata_to_fifo_i}),
        .HARD_ERR_reg(HARD_ERR_reg),
        .LINK_RESET_OUT0(LINK_RESET_OUT0),
        .Q(Q),
        .RESET(RESET),
        .\RX_DATA_REG_reg[0] (\RX_DATA_REG_reg[0] ),
        .SR(cbcc_fifo_reset_rd_clk),
        .START_CB_WRITES_OUT(START_CB_WRITES_OUT),
        .all_start_cb_writes_out_reg(all_start_cb_writes_i),
        .all_vld_btf_out_reg(all_vld_btf_flag_i),
        .bit_err_chan_bond_i(bit_err_chan_bond_i),
        .cbcc_fifo_reset_wr_clk_reg(cbcc_fifo_reset_wr_clk),
        .cbcc_fifo_reset_wr_clk_reg_0(common_reset_cbcc_i_n_6),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .cdr_reset_fsm_lnkreset(cdr_reset_fsm_lnkreset),
        .do_rd_en_i(do_rd_en_i),
        .enable_err_detect_i(enable_err_detect_i),
        .final_gater_for_fifo_din_i(final_gater_for_fifo_din_i),
        .gtwiz_reset_rx_datapath_in(rxfsm_reset_i),
        .in0(rxlossofsync_out_q),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .master_do_rd_en(master_do_rd_en),
        .new_gtx_rx_pcsreset_comb_reg(new_gtx_rx_pcsreset_comb),
        .out(master_do_rd_en_i),
        .p_9_in(p_9_in),
        .rx_header_err_i(rx_header_err_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rxdatavalid_i(rxdatavalid_i),
        .rxusrclk_out(rxusrclk_out),
        .srst(cbcc_data_srst),
        .stg5(stg5),
        .stg5_reg(u_rst_sync_txusrclk_gtx_reset_comb_n_1),
        .stg9_reg(cbcc_fifo_reset_to_fifo_wr_clk),
        .user_clk(user_clk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cdr_reset_fsm_cntr_r[0]_i_1 
       (.I0(cdr_reset_fsm_r[0]),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .O(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h48)) 
    \cdr_reset_fsm_cntr_r[1]_i_1 
       (.I0(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .I1(cdr_reset_fsm_r[0]),
        .I2(\cdr_reset_fsm_cntr_r_reg_n_0_[1] ),
        .O(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h7080)) 
    \cdr_reset_fsm_cntr_r[2]_i_1 
       (.I0(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[1] ),
        .I2(cdr_reset_fsm_r[0]),
        .I3(\cdr_reset_fsm_cntr_r_reg_n_0_[2] ),
        .O(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h7F008000)) 
    \cdr_reset_fsm_cntr_r[3]_i_1 
       (.I0(\cdr_reset_fsm_cntr_r_reg_n_0_[1] ),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .I2(\cdr_reset_fsm_cntr_r_reg_n_0_[2] ),
        .I3(cdr_reset_fsm_r[0]),
        .I4(\cdr_reset_fsm_cntr_r_reg_n_0_[3] ),
        .O(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \cdr_reset_fsm_cntr_r[4]_i_1 
       (.I0(\cdr_reset_fsm_cntr_r_reg_n_0_[2] ),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .I2(\cdr_reset_fsm_cntr_r_reg_n_0_[1] ),
        .I3(\cdr_reset_fsm_cntr_r_reg_n_0_[3] ),
        .I4(cdr_reset_fsm_r[0]),
        .I5(\cdr_reset_fsm_cntr_r_reg_n_0_[4] ),
        .O(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h84)) 
    \cdr_reset_fsm_cntr_r[5]_i_1 
       (.I0(\cdr_reset_fsm_cntr_r[5]_i_2_n_0 ),
        .I1(cdr_reset_fsm_r[0]),
        .I2(\cdr_reset_fsm_cntr_r_reg_n_0_[5] ),
        .O(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \cdr_reset_fsm_cntr_r[5]_i_2 
       (.I0(\cdr_reset_fsm_cntr_r_reg_n_0_[3] ),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[1] ),
        .I2(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .I3(\cdr_reset_fsm_cntr_r_reg_n_0_[2] ),
        .I4(\cdr_reset_fsm_cntr_r_reg_n_0_[4] ),
        .O(\cdr_reset_fsm_cntr_r[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h84)) 
    \cdr_reset_fsm_cntr_r[6]_i_1 
       (.I0(\cdr_reset_fsm_r[1]_i_4_n_0 ),
        .I1(cdr_reset_fsm_r[0]),
        .I2(\cdr_reset_fsm_cntr_r_reg_n_0_[6] ),
        .O(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h5155FFFF)) 
    \cdr_reset_fsm_cntr_r[7]_i_1 
       (.I0(cdr_reset_fsm_r[1]),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[6] ),
        .I2(\cdr_reset_fsm_r[1]_i_4_n_0 ),
        .I3(\cdr_reset_fsm_cntr_r_reg_n_0_[7] ),
        .I4(cdr_reset_fsm_r[0]),
        .O(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \cdr_reset_fsm_cntr_r[7]_i_2 
       (.I0(\cdr_reset_fsm_r[1]_i_4_n_0 ),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[6] ),
        .I2(cdr_reset_fsm_r[0]),
        .I3(\cdr_reset_fsm_cntr_r_reg_n_0_[7] ),
        .O(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[0] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[1] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[2] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[3] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[4] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[5] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[6] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[7] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ),
        .Q(\cdr_reset_fsm_cntr_r_reg_n_0_[7] ),
        .R(SR));
  LUT2 #(
    .INIT(4'h7)) 
    cdr_reset_fsm_lnkreset_i_1
       (.I0(cdr_reset_fsm_r[0]),
        .I1(cdr_reset_fsm_r[1]),
        .O(allow_block_sync_propagation));
  FDRE #(
    .INIT(1'b0)) 
    cdr_reset_fsm_lnkreset_reg
       (.C(init_clk),
        .CE(allow_block_sync_propagation),
        .D(cdr_reset_fsm_r[0]),
        .Q(cdr_reset_fsm_lnkreset),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \cdr_reset_fsm_r[0]_i_1 
       (.I0(cdr_reset_fsm_r[1]),
        .I1(cdr_reset_fsm_r[0]),
        .O(\cdr_reset_fsm_r[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \cdr_reset_fsm_r[1]_i_3 
       (.I0(cdr_reset_fsm_r[0]),
        .I1(cdr_reset_fsm_r[1]),
        .O(\cdr_reset_fsm_r[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \cdr_reset_fsm_r[1]_i_4 
       (.I0(\cdr_reset_fsm_cntr_r_reg_n_0_[4] ),
        .I1(\cdr_reset_fsm_cntr_r_reg_n_0_[2] ),
        .I2(\cdr_reset_fsm_cntr_r_reg_n_0_[0] ),
        .I3(\cdr_reset_fsm_cntr_r_reg_n_0_[1] ),
        .I4(\cdr_reset_fsm_cntr_r_reg_n_0_[3] ),
        .I5(\cdr_reset_fsm_cntr_r_reg_n_0_[5] ),
        .O(\cdr_reset_fsm_r[1]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_r_reg[0] 
       (.C(init_clk),
        .CE(cdr_reset_fsm_r0),
        .D(\cdr_reset_fsm_r[0]_i_1_n_0 ),
        .Q(cdr_reset_fsm_r[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_r_reg[1] 
       (.C(init_clk),
        .CE(cdr_reset_fsm_r0),
        .D(\cdr_reset_fsm_r[1]_i_3_n_0 ),
        .Q(cdr_reset_fsm_r[1]),
        .R(SR));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_common_logic_cbcc common_logic_cbcc_i
       (.ANY_VLD_BTF_FLAG(ANY_VLD_BTF_FLAG),
        .SR(cbcc_fifo_reset_rd_clk),
        .START_CB_WRITES_OUT(START_CB_WRITES_OUT),
        .all_vld_btf_flag_i(all_vld_btf_flag_i),
        .cb_bit_err_out(cb_bit_err_out),
        .cbcc_fifo_reset_wr_clk_reg(cbcc_fifo_reset_wr_clk),
        .do_rd_en_reg(do_rd_en_i),
        .in0(all_start_cb_writes_i),
        .master_do_rd_en_i(master_do_rd_en_i),
        .out(bit_err_chan_bond_i),
        .rxusrclk_out(rxusrclk_out),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_common_reset_cbcc common_reset_cbcc_i
       (.ANY_VLD_BTF_FLAG0__4(ANY_VLD_BTF_FLAG0__4),
        .SR(cbcc_fifo_reset_rd_clk),
        .cb_bit_err_out(cb_bit_err_out),
        .cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg_0(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .new_do_wr_en_reg(common_reset_cbcc_i_n_6),
        .new_gtx_rx_pcsreset_comb_reg(new_gtx_rx_pcsreset_comb),
        .rxusrclk_out(rxusrclk_out),
        .second_cb_write_failed_reg(cbcc_fifo_reset_wr_clk),
        .srst(cbcc_data_srst),
        .stg5(stg5),
        .user_clk(user_clk));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFFFFFF)) 
    datavalid_in_r_i_1
       (.I0(\txseq_counter_i_reg_n_0_[0] ),
        .I1(\txseq_counter_i_reg_n_0_[6] ),
        .I2(\txseq_counter_i_reg_n_0_[5] ),
        .I3(datavalid_in_r_i_2_n_0),
        .I4(\txseq_counter_i_reg_n_0_[1] ),
        .I5(\txseq_counter_i_reg_n_0_[2] ),
        .O(txdatavalid_i));
  LUT2 #(
    .INIT(4'h7)) 
    datavalid_in_r_i_2
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[4] ),
        .O(datavalid_in_r_i_2_n_0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_DESCRAMBLER_64B66B descrambler_64b66b_gtx0_i
       (.CB_detect(CB_detect),
        .CB_detect0(CB_detect0),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .D({rxdatavalid_to_fifo_i,rxheader_to_fifo_i}),
        .E(rxdatavalid_i_1),
        .Q(rxdata_from_gtx_i),
        .UNSCRAMBLED_DATA_OUT(rxdata_to_fifo_i),
        .in0(rxlossofsync_out_q),
        .p_9_in(p_9_in),
        .rxusrclk_out(rxusrclk_out));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT1 #(
    .INIT(2'h1)) 
    freeze_free_count_r_i_1
       (.I0(txdatavalid_i),
        .O(extend_cc_r1));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    full_data_r_i_1
       (.I0(full_data_r_i_3_n_0),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .I3(\txseq_counter_i_reg_n_0_[0] ),
        .I4(do_cc_r_reg),
        .O(pdu_ok_c));
  LUT4 #(
    .INIT(16'h7FFF)) 
    full_data_r_i_3
       (.I0(\txseq_counter_i_reg_n_0_[2] ),
        .I1(\txseq_counter_i_reg_n_0_[1] ),
        .I2(\txseq_counter_i_reg_n_0_[4] ),
        .I3(\txseq_counter_i_reg_n_0_[3] ),
        .O(full_data_r_i_3_n_0));
  FDRE #(
    .INIT(1'b1)) 
    new_gtx_rx_pcsreset_comb_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(new_gtx_rx_pcsreset_comb0),
        .Q(new_gtx_rx_pcsreset_comb),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[0]),
        .Q(pos_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[10]),
        .Q(pos_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[11]),
        .Q(pos_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[12]),
        .Q(pos_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[13]),
        .Q(pos_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[14]),
        .Q(pos_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[15]),
        .Q(pos_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[16]),
        .Q(pos_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[17]),
        .Q(pos_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[18]),
        .Q(pos_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[19]),
        .Q(pos_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[1]),
        .Q(pos_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[20]),
        .Q(pos_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[21]),
        .Q(pos_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[22]),
        .Q(pos_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[23]),
        .Q(pos_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[24]),
        .Q(pos_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[25]),
        .Q(pos_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[26]),
        .Q(pos_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[27]),
        .Q(pos_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[28]),
        .Q(pos_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[29]),
        .Q(pos_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[2]),
        .Q(pos_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[30]),
        .Q(pos_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[31]),
        .Q(pos_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[32]),
        .Q(pos_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[33]),
        .Q(pos_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[34]),
        .Q(pos_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[35]),
        .Q(pos_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[36]),
        .Q(pos_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[37]),
        .Q(pos_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[38]),
        .Q(pos_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[39]),
        .Q(pos_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[3]),
        .Q(pos_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[40]),
        .Q(pos_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[41]),
        .Q(pos_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[42]),
        .Q(pos_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[43]),
        .Q(pos_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[44]),
        .Q(pos_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[45]),
        .Q(pos_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[46]),
        .Q(pos_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[47]),
        .Q(pos_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[48]),
        .Q(pos_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[49]),
        .Q(pos_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[4]),
        .Q(pos_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[50]),
        .Q(pos_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[51]),
        .Q(pos_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[52]),
        .Q(pos_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[53]),
        .Q(pos_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[54]),
        .Q(pos_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[55]),
        .Q(pos_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[56]),
        .Q(pos_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[57]),
        .Q(pos_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[58]),
        .Q(pos_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[59]),
        .Q(pos_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[5]),
        .Q(pos_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[60]),
        .Q(pos_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[61]),
        .Q(pos_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[62]),
        .Q(pos_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[63]),
        .Q(pos_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[6]),
        .Q(pos_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[7]),
        .Q(pos_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[8]),
        .Q(pos_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[9]),
        .Q(pos_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_i),
        .Q(pos_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[0]),
        .Q(pos_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[1]),
        .Q(pos_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_i),
        .Q(pos_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[0]),
        .Q(pre_r1_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[10]),
        .Q(pre_r1_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[11]),
        .Q(pre_r1_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[12]),
        .Q(pre_r1_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[13]),
        .Q(pre_r1_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[14]),
        .Q(pre_r1_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[15]),
        .Q(pre_r1_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[16]),
        .Q(pre_r1_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[17]),
        .Q(pre_r1_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[18]),
        .Q(pre_r1_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[19]),
        .Q(pre_r1_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[1]),
        .Q(pre_r1_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[20]),
        .Q(pre_r1_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[21]),
        .Q(pre_r1_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[22]),
        .Q(pre_r1_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[23]),
        .Q(pre_r1_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[24]),
        .Q(pre_r1_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[25]),
        .Q(pre_r1_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[26]),
        .Q(pre_r1_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[27]),
        .Q(pre_r1_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[28]),
        .Q(pre_r1_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[29]),
        .Q(pre_r1_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[2]),
        .Q(pre_r1_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[30]),
        .Q(pre_r1_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[31]),
        .Q(pre_r1_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[32]),
        .Q(pre_r1_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[33]),
        .Q(pre_r1_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[34]),
        .Q(pre_r1_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[35]),
        .Q(pre_r1_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[36]),
        .Q(pre_r1_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[37]),
        .Q(pre_r1_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[38]),
        .Q(pre_r1_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[39]),
        .Q(pre_r1_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[3]),
        .Q(pre_r1_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[40]),
        .Q(pre_r1_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[41]),
        .Q(pre_r1_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[42]),
        .Q(pre_r1_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[43]),
        .Q(pre_r1_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[44]),
        .Q(pre_r1_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[45]),
        .Q(pre_r1_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[46]),
        .Q(pre_r1_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[47]),
        .Q(pre_r1_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[48]),
        .Q(pre_r1_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[49]),
        .Q(pre_r1_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[4]),
        .Q(pre_r1_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[50]),
        .Q(pre_r1_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[51]),
        .Q(pre_r1_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[52]),
        .Q(pre_r1_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[53]),
        .Q(pre_r1_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[54]),
        .Q(pre_r1_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[55]),
        .Q(pre_r1_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[56]),
        .Q(pre_r1_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[57]),
        .Q(pre_r1_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[58]),
        .Q(pre_r1_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[59]),
        .Q(pre_r1_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[5]),
        .Q(pre_r1_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[60]),
        .Q(pre_r1_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[61]),
        .Q(pre_r1_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[62]),
        .Q(pre_r1_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[63]),
        .Q(pre_r1_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[6]),
        .Q(pre_r1_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[7]),
        .Q(pre_r1_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[8]),
        .Q(pre_r1_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[9]),
        .Q(pre_r1_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_i),
        .Q(pre_r1_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[0]),
        .Q(pre_r1_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[1]),
        .Q(pre_r1_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_i),
        .Q(pre_r1_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[0]),
        .Q(rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[10]),
        .Q(rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[11]),
        .Q(rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[12]),
        .Q(rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[13]),
        .Q(rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[14]),
        .Q(rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[15]),
        .Q(rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[16]),
        .Q(rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[17]),
        .Q(rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[18]),
        .Q(rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[19]),
        .Q(rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[1]),
        .Q(rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[20]),
        .Q(rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[21]),
        .Q(rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[22]),
        .Q(rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[23]),
        .Q(rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[24]),
        .Q(rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[25]),
        .Q(rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[26]),
        .Q(rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[27]),
        .Q(rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[28]),
        .Q(rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[29]),
        .Q(rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[2]),
        .Q(rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[30]),
        .Q(rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[31]),
        .Q(rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[32]),
        .Q(rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[33]),
        .Q(rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[34]),
        .Q(rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[35]),
        .Q(rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[36]),
        .Q(rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[37]),
        .Q(rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[38]),
        .Q(rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[39]),
        .Q(rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[3]),
        .Q(rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[40]),
        .Q(rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[41]),
        .Q(rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[42]),
        .Q(rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[43]),
        .Q(rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[44]),
        .Q(rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[45]),
        .Q(rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[46]),
        .Q(rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[47]),
        .Q(rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[48]),
        .Q(rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[49]),
        .Q(rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[4]),
        .Q(rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[50]),
        .Q(rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[51]),
        .Q(rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[52]),
        .Q(rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[53]),
        .Q(rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[54]),
        .Q(rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[55]),
        .Q(rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[56]),
        .Q(rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[57]),
        .Q(rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[58]),
        .Q(rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[59]),
        .Q(rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[5]),
        .Q(rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[60]),
        .Q(rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[61]),
        .Q(rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[62]),
        .Q(rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[63]),
        .Q(rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[6]),
        .Q(rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[7]),
        .Q(rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[8]),
        .Q(rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[9]),
        .Q(rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_i),
        .Q(rxdatavalid_i_1),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_i_1),
        .Q(rxdatavalid_to_fifo_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[0]),
        .Q(rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[1]),
        .Q(rxheader_from_gtx_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[0]),
        .Q(rxheader_to_fifo_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[1]),
        .Q(rxheader_to_fifo_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_i),
        .Q(rxheadervalid_i),
        .R(1'b0));
  FDRE rxlossofsync_out_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxlossofsync_out_i),
        .Q(rxlossofsync_out_q),
        .R(1'b0));
  FDRE rxreset_for_lanes_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_reset_i),
        .Q(rxreset_for_lanes_q),
        .R(1'b0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_SCRAMBLER_64B66B scrambler_64b66b_gtx0_i
       (.Q({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .SCRAMBLED_DATA_OUT(scrambled_data_i),
        .\SCRAMBLED_DATA_OUT_reg[0]_0 (scrambler_64b66b_gtx0_i_n_0),
        .\TXDATA_IN_REG_reg[63] (TXDATA_IN_REG),
        .user_clk(user_clk));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    tlast_txdv_coincide_r_i_1
       (.I0(s_axi_tx_tkeep),
        .I1(s_axi_tx_tvalid),
        .I2(s_axi_tx_tlast),
        .I3(\s_axi_tx_tkeep[2] ),
        .I4(txdatavalid_i),
        .O(tlast_txdv_coincide_r0));
  FDRE \tx_hdr_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(tx_hdr_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(tx_hdr_r[1]),
        .R(1'b0));
  FDRE \txheader_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_r[0]),
        .Q(txheader_r[0]),
        .R(1'b0));
  FDRE \txheader_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_r[1]),
        .Q(txheader_r[1]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000FFFD)) 
    \txseq_counter_i[0]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[5] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .I2(\txseq_counter_i_reg_n_0_[3] ),
        .I3(scrambler_64b66b_gtx0_i_n_0),
        .I4(\txseq_counter_i_reg_n_0_[0] ),
        .O(txseq_counter_i[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i[1]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[0] ),
        .I1(\txseq_counter_i_reg_n_0_[1] ),
        .O(txseq_counter_i[1]));
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i[2]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[2] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[1] ),
        .O(txseq_counter_i[2]));
  LUT4 #(
    .INIT(16'h7F80)) 
    \txseq_counter_i[3]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .I3(\txseq_counter_i_reg_n_0_[3] ),
        .O(txseq_counter_i[3]));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i[4]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[4] ),
        .I1(\txseq_counter_i_reg_n_0_[1] ),
        .I2(\txseq_counter_i_reg_n_0_[0] ),
        .I3(\txseq_counter_i_reg_n_0_[2] ),
        .I4(\txseq_counter_i_reg_n_0_[3] ),
        .O(txseq_counter_i[4]));
  LUT6 #(
    .INIT(64'hAAA85A58AAA8AAA8)) 
    \txseq_counter_i[5]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[5] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .I2(\txseq_counter_i_reg_n_0_[3] ),
        .I3(scrambler_64b66b_gtx0_i_n_0),
        .I4(TX_HEADER_1_i_4_n_0),
        .I5(\txseq_counter_i_reg_n_0_[4] ),
        .O(txseq_counter_i[5]));
  LUT5 #(
    .INIT(32'hA6AAAAAA)) 
    \txseq_counter_i[6]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[6] ),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(TX_HEADER_1_i_4_n_0),
        .I3(\txseq_counter_i_reg_n_0_[4] ),
        .I4(\txseq_counter_i_reg_n_0_[3] ),
        .O(txseq_counter_i[6]));
  FDRE \txseq_counter_i_reg[0] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[0]),
        .Q(\txseq_counter_i_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[1] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[1]),
        .Q(\txseq_counter_i_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[2] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[2]),
        .Q(\txseq_counter_i_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[3] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[3]),
        .Q(\txseq_counter_i_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[4] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[4]),
        .Q(\txseq_counter_i_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[5] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[5]),
        .Q(\txseq_counter_i_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[6] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[6]),
        .Q(\txseq_counter_i_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT1 #(
    .INIT(2'h1)) 
    txsequence_ctr_en_int_i_1
       (.I0(txsequence_ctr_en_int),
        .O(txsequence_ctr_en_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txsequence_ctr_en_int_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(txsequence_ctr_en_int_i_1_n_0),
        .Q(txsequence_ctr_en_int),
        .R(1'b0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync_5 u_cdc__check_polarity
       (.Q(rxheader_from_gtx_i),
        .RX_NEG_OUT_reg(u_cdc__check_polarity_n_0),
        .RX_NEG_OUT_reg_0(s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg),
        .in0(in0),
        .rxheadervalid_i(rxheadervalid_i),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0 u_cdc_gt_qplllock_quad1_i
       (.gt_qplllock_quad1_in(gt_qplllock_quad1_in),
        .init_clk(init_clk),
        .out(gt_qplllock_quad1_i));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_6 u_cdc_rx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(rx_fsm_resetdone_i),
        .rx_fsm_resetdone_ii(rx_fsm_resetdone_ii));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized1 u_cdc_rxpolarity_
       (.out(sync_rx_polarity_r),
        .rx_polarity_r_reg(rx_polarity_r_reg),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_7 u_cdc_tx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(tx_fsm_resetdone_i),
        .tx_fsm_resetdone_ii(tx_fsm_resetdone_ii));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0 u_rst_done_sync_rx
       (.FSM_RESETDONE_j_reg(rx_fsm_resetdone_i_i),
        .out(rx_fsm_resetdone_i),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_8 u_rst_done_sync_rx1
       (.out(rx_fsm_resetdone_i),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_9 u_rst_done_sync_tx
       (.FSM_RESETDONE_j_reg(FSM_RESETDONE_j_reg_0),
        .out(tx_fsm_resetdone_i),
        .stg3_reg_0(rx_fsm_resetdone_i_i),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_10 u_rst_done_sync_tx1
       (.out(tx_fsm_resetdone_i),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1 u_rst_sync_blocksyncall_initclk_sync
       (.E(cdr_reset_fsm_r0),
        .Q(cdr_reset_fsm_r),
        .\cdr_reset_fsm_cntr_r_reg[4] (\cdr_reset_fsm_r[1]_i_4_n_0 ),
        .\cdr_reset_fsm_cntr_r_reg[7] ({\cdr_reset_fsm_cntr_r_reg_n_0_[7] ,\cdr_reset_fsm_cntr_r_reg_n_0_[6] }),
        .in0(blocksync_all_lanes_inrxclk_q),
        .init_clk(init_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_11 u_rst_sync_blocksyncprop_inrxclk_sync
       (.blocksync_out_i(blocksync_out_i),
        .in0(allow_block_sync_propagation_reg_n_0),
        .rxlossofsync_out_i(rxlossofsync_out_i),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_12 u_rst_sync_fsm_resetdone
       (.fsm_resetdone_to_new_gtx_rx_comb(fsm_resetdone_to_new_gtx_rx_comb),
        .in0(FSM_RESETDONE_j),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_13 u_rst_sync_gtx_reset_comb
       (.SR(gtx_reset_comb),
        .in0(stableclk_gtx_reset_comb),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_14 u_rst_sync_reset_initclk
       (.SYSTEM_RESET_reg(SYSTEM_RESET_reg),
        .init_clk(init_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_15 u_rst_sync_rxreset_in
       (.fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .in0(rxreset_for_lanes_q),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_16 u_rst_sync_txusrclk_gtx_reset_comb
       (.E(sel),
        .\count_for_reset_r_reg[23] (u_rst_sync_txusrclk_gtx_reset_comb_n_1),
        .in0(stableclk_gtx_reset_comb),
        .init_clk(init_clk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync
   (next_ready_c,
    next_begin_c,
    rx_polarity_r_reg,
    RX_NEG_OUT_reg,
    user_clk,
    ready_r,
    polarity_r,
    align_r,
    begin_r,
    rst_r_reg,
    rx_lossofsync_i,
    rx_polarity_dlyd_i,
    reset_lanes_i,
    CC_RXLOSSOFSYNC_OUT_reg,
    prev_rx_polarity_r,
    rx_polarity_r_reg_0,
    SYSTEM_RESET_reg);
  output next_ready_c;
  output next_begin_c;
  output rx_polarity_r_reg;
  input RX_NEG_OUT_reg;
  input user_clk;
  input ready_r;
  input polarity_r;
  input align_r;
  input begin_r;
  input rst_r_reg;
  input rx_lossofsync_i;
  input rx_polarity_dlyd_i;
  input reset_lanes_i;
  input CC_RXLOSSOFSYNC_OUT_reg;
  input prev_rx_polarity_r;
  input rx_polarity_r_reg_0;
  input SYSTEM_RESET_reg;

  wire CC_RXLOSSOFSYNC_OUT_reg;
  wire SYSTEM_RESET_reg;
  wire align_r;
  wire begin_r;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire ready_r;
  wire ready_r_i_3_n_0;
  wire reset_lanes_i;
  wire rst_r_reg;
  wire rx_lossofsync_i;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  wire rx_polarity_r_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = RX_NEG_OUT_reg;
  LUT5 #(
    .INIT(32'hFFFFE0A0)) 
    begin_r_i_1
       (.I0(reset_lanes_i),
        .I1(s_level_out_d2),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(CC_RXLOSSOFSYNC_OUT_reg),
        .O(next_begin_c));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h00000000000000A8)) 
    ready_r_i_2
       (.I0(ready_r_i_3_n_0),
        .I1(ready_r),
        .I2(polarity_r),
        .I3(align_r),
        .I4(begin_r),
        .I5(rst_r_reg),
        .O(next_ready_c));
  LUT6 #(
    .INIT(64'h0000000011111F11)) 
    ready_r_i_3
       (.I0(rx_lossofsync_i),
        .I1(polarity_r),
        .I2(ready_r),
        .I3(rx_polarity_dlyd_i),
        .I4(s_level_out_d2),
        .I5(reset_lanes_i),
        .O(ready_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0074)) 
    rx_polarity_r_i_1
       (.I0(prev_rx_polarity_r),
        .I1(s_level_out_d2),
        .I2(rx_polarity_r_reg_0),
        .I3(SYSTEM_RESET_reg),
        .O(rx_polarity_r_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync_5
   (RX_NEG_OUT_reg,
    in0,
    rxusrclk_out,
    rxheadervalid_i,
    Q,
    RX_NEG_OUT_reg_0);
  output RX_NEG_OUT_reg;
  input in0;
  input rxusrclk_out;
  input rxheadervalid_i;
  input [1:0]Q;
  input RX_NEG_OUT_reg_0;

  wire [1:0]Q;
  wire RX_NEG_OUT_reg;
  wire RX_NEG_OUT_reg_0;
  wire p_level_in_int;
  wire rxheadervalid_i;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT5 #(
    .INIT(32'hFF200000)) 
    RX_NEG_OUT_i_1
       (.I0(rxheadervalid_i),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RX_NEG_OUT_reg_0),
        .I4(s_level_out_d2),
        .O(RX_NEG_OUT_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0
   (out,
    gt_qplllock_quad1_in,
    init_clk);
  output out;
  input gt_qplllock_quad1_in;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  assign p_level_in_int = gt_qplllock_quad1_in;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_17
   (reset_cbcc_comb_reg,
    rxusrclk_out,
    Q,
    new_gtx_rx_pcsreset_comb_reg);
  output reset_cbcc_comb_reg;
  input rxusrclk_out;
  input [3:0]Q;
  input [0:0]new_gtx_rx_pcsreset_comb_reg;

  wire [3:0]Q;
  wire [0:0]new_gtx_rx_pcsreset_comb_reg;
  wire p_level_in_int;
  wire reset_cbcc_comb_reg;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_199
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    reset_cbcc_comb_i_1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(s_level_out_d5),
        .I5(new_gtx_rx_pcsreset_comb_reg),
        .O(reset_cbcc_comb_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_24
   (CC_RXLOSSOFSYNC_OUT_reg,
    in0,
    user_clk,
    stg5);
  output CC_RXLOSSOFSYNC_OUT_reg;
  input in0;
  input user_clk;
  input stg5;

  wire CC_RXLOSSOFSYNC_OUT_reg;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire stg5;
  wire user_clk;

  assign p_level_in_int = in0;
  LUT2 #(
    .INIT(4'hD)) 
    CC_RXLOSSOFSYNC_OUT_i_1
       (.I0(s_level_out_d5),
        .I1(stg5),
        .O(CC_RXLOSSOFSYNC_OUT_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_28
   (out,
    in0,
    gtwiz_userclk_rx_reset_in_r_reg);
  output out;
  input in0;
  input gtwiz_userclk_rx_reset_in_r_reg;

  wire gtwiz_userclk_rx_reset_in_r_reg;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(gtwiz_userclk_rx_reset_in_r_reg),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_reset_in_r_reg),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_reset_in_r_reg),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_reset_in_r_reg),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_reset_in_r_reg),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_reset_in_r_reg),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_6
   (rx_fsm_resetdone_ii,
    out,
    init_clk);
  output rx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign rx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_7
   (tx_fsm_resetdone_ii,
    out,
    init_clk);
  output tx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign tx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized1
   (out,
    rx_polarity_r_reg,
    rxusrclk_out);
  output out;
  input rx_polarity_r_reg;
  input rxusrclk_out;

  wire p_level_in_int;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = rx_polarity_r_reg;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized2
   (cbcc_reset_cbstg2_rd_clk,
    full,
    user_clk);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input user_clk;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_cdc_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized2_25
   (out,
    SR,
    overflow,
    user_clk);
  output out;
  input [0:0]SR;
  input overflow;
  input user_clk;

  wire [0:0]SR;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_25p78G_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_25p78G_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_25p78G_cdc_to),
        .Q(s_level_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_common_logic_cbcc" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_common_logic_cbcc
   (cb_bit_err_out,
    in0,
    master_do_rd_en_i,
    all_vld_btf_flag_i,
    cbcc_fifo_reset_wr_clk_reg,
    out,
    rxusrclk_out,
    START_CB_WRITES_OUT,
    SR,
    do_rd_en_reg,
    user_clk,
    ANY_VLD_BTF_FLAG);
  output cb_bit_err_out;
  output in0;
  output master_do_rd_en_i;
  output all_vld_btf_flag_i;
  input [0:0]cbcc_fifo_reset_wr_clk_reg;
  input out;
  input rxusrclk_out;
  input START_CB_WRITES_OUT;
  input [0:0]SR;
  input do_rd_en_reg;
  input user_clk;
  input ANY_VLD_BTF_FLAG;

  wire ANY_VLD_BTF_FLAG;
  wire [0:0]SR;
  wire START_CB_WRITES_OUT;
  wire all_vld_btf_flag_i;
  wire cb_bit_err_out;
  wire [0:0]cbcc_fifo_reset_wr_clk_reg;
  wire do_rd_en_reg;
  wire in0;
  wire master_do_rd_en_i;
  wire out;
  wire rxusrclk_out;
  wire second_cb_write_failed;
  wire user_clk;

  FDRE all_start_cb_writes_out_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(START_CB_WRITES_OUT),
        .Q(in0),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE all_vld_btf_out_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG),
        .Q(all_vld_btf_flag_i),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE cb_bit_err_out_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(second_cb_write_failed),
        .Q(cb_bit_err_out),
        .R(cbcc_fifo_reset_wr_clk_reg));
  FDRE master_do_rd_en_out_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(do_rd_en_reg),
        .Q(master_do_rd_en_i),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    second_cb_write_failed_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(second_cb_write_failed),
        .R(cbcc_fifo_reset_wr_clk_reg));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_common_reset_cbcc" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_common_reset_cbcc
   (srst,
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg_0,
    stg5,
    cbcc_reset_cbstg2_rd_clk,
    second_cb_write_failed_reg,
    SR,
    new_do_wr_en_reg,
    new_gtx_rx_pcsreset_comb_reg,
    user_clk,
    rxusrclk_out,
    ANY_VLD_BTF_FLAG0__4,
    cb_bit_err_out);
  output srst;
  output [0:0]cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg_0;
  output stg5;
  output cbcc_reset_cbstg2_rd_clk;
  output [0:0]second_cb_write_failed_reg;
  output [0:0]SR;
  output new_do_wr_en_reg;
  input [0:0]new_gtx_rx_pcsreset_comb_reg;
  input user_clk;
  input rxusrclk_out;
  input ANY_VLD_BTF_FLAG0__4;
  input cb_bit_err_out;

  wire ANY_VLD_BTF_FLAG0__4;
  wire [0:0]SR;
  wire [3:0]cb_bit_err_ext_cnt;
  wire \cb_bit_err_ext_cnt[0]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[1]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[2]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[3]_i_1_n_0 ;
  wire cb_bit_err_out;
  wire cbc_rd_if_reset;
  wire cbc_wr_if_reset;
  wire cbcc_data_srst0;
  wire cbcc_fifo_reset_to_fifo_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  wire [0:0]cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg_0;
  wire cbcc_reset_cbstg2_rd_clk;
  wire dbg_extend_srst0;
  wire [3:0]dbg_extend_srst_reg__0;
  wire dbg_srst_assert;
  wire fifo_reset_comb;
  wire fifo_reset_comb_read_clk;
  wire fifo_reset_comb_user_clk;
  wire fifo_reset_comb_user_clk_int;
  wire fifo_reset_comb_user_clk_int_22q;
  wire fifo_reset_rd;
  wire new_do_wr_en_reg;
  wire [0:0]new_gtx_rx_pcsreset_comb_reg;
  wire [3:0]p_0_in__3;
  wire rd_stg1;
  wire reset_cbcc_comb;
  wire rxusrclk_out;
  wire [0:0]second_cb_write_failed_reg;
  wire srst;
  wire stg5;
  wire u_cdc_chan_bond_reset_n_0;
  wire u_rst_sync_fifo_reset_comb_user_clk_in_n_1;
  wire u_rst_sync_reset_rd_clk_n_0;
  wire u_rst_sync_reset_to_fifo_rd_clk_n_1;
  wire u_rst_sync_reset_to_fifo_wr_clk_n_1;
  wire u_rst_sync_reset_wr_clk_n_0;
  wire u_rst_sync_rst_cbcc_rd_clk_n_0;
  wire u_rst_sync_rst_cbcc_rd_clk_n_1;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    \cb_bit_err_ext_cnt[0]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[2]),
        .I2(cb_bit_err_ext_cnt[3]),
        .I3(cb_bit_err_ext_cnt[1]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'hFFFF9998)) 
    \cb_bit_err_ext_cnt[1]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'hFFFFE1E0)) 
    \cb_bit_err_ext_cnt[2]_i_1 
       (.I0(cb_bit_err_ext_cnt[1]),
        .I1(cb_bit_err_ext_cnt[0]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'hFFFFFE00)) 
    \cb_bit_err_ext_cnt[3]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_out),
        .O(\cb_bit_err_ext_cnt[3]_i_1_n_0 ));
  FDRE \cb_bit_err_ext_cnt_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[0]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[0]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  FDRE \cb_bit_err_ext_cnt_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[1]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[1]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  FDRE \cb_bit_err_ext_cnt_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[2]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[2]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  FDRE \cb_bit_err_ext_cnt_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[3]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[3]),
        .R(new_gtx_rx_pcsreset_comb_reg));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_rd_if_reset_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_rst_sync_reset_to_fifo_rd_clk_n_1),
        .Q(cbc_rd_if_reset),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_wr_if_reset_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_reset_to_fifo_wr_clk_n_1),
        .Q(cbc_wr_if_reset),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hAAFFBFFF)) 
    cbcc_data_srst_i_1
       (.I0(dbg_srst_assert),
        .I1(dbg_extend_srst_reg__0[0]),
        .I2(dbg_extend_srst_reg__0[1]),
        .I3(dbg_extend_srst_reg__0[3]),
        .I4(dbg_extend_srst_reg__0[2]),
        .O(cbcc_data_srst0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_data_srst_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(cbcc_data_srst0),
        .Q(srst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_rd_clk_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_rst_sync_reset_rd_clk_n_0),
        .Q(SR),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(cbcc_fifo_reset_to_fifo_rd_clk),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg_0),
        .Q(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_wr_clk_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_reset_wr_clk_n_0),
        .Q(second_cb_write_failed_reg),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE cbcc_reset_cbstg2_rd_clk_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .Q(cbcc_reset_cbstg2_rd_clk),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \dbg_extend_srst[0]_i_1 
       (.I0(dbg_extend_srst_reg__0[0]),
        .O(p_0_in__3[0]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dbg_extend_srst[1]_i_1 
       (.I0(dbg_extend_srst_reg__0[0]),
        .I1(dbg_extend_srst_reg__0[1]),
        .O(p_0_in__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \dbg_extend_srst[2]_i_1 
       (.I0(dbg_extend_srst_reg__0[0]),
        .I1(dbg_extend_srst_reg__0[1]),
        .I2(dbg_extend_srst_reg__0[2]),
        .O(p_0_in__3[2]));
  LUT4 #(
    .INIT(16'h3777)) 
    \dbg_extend_srst[3]_i_1 
       (.I0(dbg_extend_srst_reg__0[2]),
        .I1(dbg_extend_srst_reg__0[3]),
        .I2(dbg_extend_srst_reg__0[1]),
        .I3(dbg_extend_srst_reg__0[0]),
        .O(dbg_extend_srst0));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \dbg_extend_srst[3]_i_2 
       (.I0(dbg_extend_srst_reg__0[1]),
        .I1(dbg_extend_srst_reg__0[0]),
        .I2(dbg_extend_srst_reg__0[2]),
        .I3(dbg_extend_srst_reg__0[3]),
        .O(p_0_in__3[3]));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[0] 
       (.C(rxusrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__3[0]),
        .Q(dbg_extend_srst_reg__0[0]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[1] 
       (.C(rxusrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__3[1]),
        .Q(dbg_extend_srst_reg__0[1]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    \dbg_extend_srst_reg[2] 
       (.C(rxusrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__3[2]),
        .Q(dbg_extend_srst_reg__0[2]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[3] 
       (.C(rxusrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__3[3]),
        .Q(dbg_extend_srst_reg__0[3]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    dbg_srst_assert_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_fifo_reset_comb_user_clk_in_n_1),
        .Q(dbg_srst_assert),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    do_wr_en_i_2
       (.I0(second_cb_write_failed_reg),
        .I1(ANY_VLD_BTF_FLAG0__4),
        .O(new_do_wr_en_reg));
  FDRE #(
    .INIT(1'b1)) 
    fifo_reset_comb_user_clk_int_22q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(fifo_reset_comb_user_clk_int),
        .Q(fifo_reset_comb_user_clk_int_22q),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    fifo_reset_rd_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(fifo_reset_rd),
        .S(cbcc_reset_cbstg2_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    rd_stg1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_rst_sync_rst_cbcc_rd_clk_n_0),
        .Q(rd_stg1),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_cbcc_comb_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc_chan_bond_reset_n_0),
        .Q(reset_cbcc_comb),
        .R(1'b0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_17 u_cdc_chan_bond_reset
       (.Q(cb_bit_err_ext_cnt),
        .new_gtx_rx_pcsreset_comb_reg(new_gtx_rx_pcsreset_comb_reg),
        .reset_cbcc_comb_reg(u_cdc_chan_bond_reset_n_0),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_18 u_rst_sync_cbcc_fifo_reset_rd_clk
       (.in0(fifo_reset_comb_user_clk),
        .stg1_aurora_64b66b_25p78G_cdc_to_reg_0(fifo_reset_comb_read_clk),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_19 u_rst_sync_cbcc_only_reset_rd_clk
       (.new_gtx_rx_pcsreset_comb_reg(new_gtx_rx_pcsreset_comb_reg),
        .stg5(stg5),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized3 u_rst_sync_fifo_reset_comb_user_clk_in
       (.dbg_srst_assert_reg(u_rst_sync_fifo_reset_comb_user_clk_in_n_1),
        .fifo_reset_comb_user_clk_int(fifo_reset_comb_user_clk_int),
        .fifo_reset_comb_user_clk_int_22q_reg(fifo_reset_comb_user_clk_int_22q),
        .in0(fifo_reset_comb_user_clk),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized2 u_rst_sync_fifo_reset_user_clk
       (.in0(fifo_reset_comb),
        .rxusrclk_out(rxusrclk_out),
        .stg1_aurora_64b66b_25p78G_cdc_to_reg_0(fifo_reset_comb_user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_20 u_rst_sync_r_sync3
       (.in0(fifo_reset_rd),
        .reset_cbcc_comb_reg(reset_cbcc_comb),
        .rxusrclk_out(rxusrclk_out),
        .stg1_aurora_64b66b_25p78G_cdc_to_reg_0(fifo_reset_comb));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_21 u_rst_sync_reset_rd_clk
       (.cbcc_fifo_reset_rd_clk_reg(u_rst_sync_reset_rd_clk_n_0),
        .in0(cbc_rd_if_reset),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized5 u_rst_sync_reset_to_fifo_rd_clk
       (.cbc_rd_if_reset_reg(u_rst_sync_reset_to_fifo_rd_clk_n_1),
        .cbcc_fifo_reset_to_fifo_rd_clk(cbcc_fifo_reset_to_fifo_rd_clk),
        .cbcc_fifo_reset_to_fifo_rd_clk_dlyd(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .in0(cbc_rd_if_reset),
        .stg5_reg(fifo_reset_comb_read_clk),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized4 u_rst_sync_reset_to_fifo_wr_clk
       (.cbc_wr_if_reset_reg(u_rst_sync_reset_to_fifo_wr_clk_n_1),
        .cbcc_fifo_reset_to_fifo_wr_clk_dlyd(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg(cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg_0),
        .fifo_reset_comb_user_clk_int_22q_reg(fifo_reset_comb_user_clk_int_22q),
        .in0(cbc_wr_if_reset),
        .rxusrclk_out(rxusrclk_out),
        .stg11_reg(fifo_reset_comb_user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_22 u_rst_sync_reset_wr_clk
       (.cbcc_fifo_reset_wr_clk_reg(u_rst_sync_reset_wr_clk_n_0),
        .in0(cbc_wr_if_reset),
        .rxusrclk_out(rxusrclk_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_23 u_rst_sync_rst_cbcc_rd_clk
       (.cbcc_reset_cbstg2_rd_clk_reg(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .rd_stg1(rd_stg1),
        .rd_stg1_reg(u_rst_sync_rst_cbcc_rd_clk_n_0),
        .reset_cbcc_comb_reg(reset_cbcc_comb),
        .user_clk(user_clk));
endmodule

(* BACKWARD_COMP_MODE1 = "1'b0" *) (* BACKWARD_COMP_MODE2 = "1'b0" *) (* BACKWARD_COMP_MODE3 = "1'b0" *) 
(* CC_FREQ_FACTOR = "5'b11000" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* EXAMPLE_SIMULATION = "0" *) 
(* GTY_CRC_NO_ZERO_PAD = "0" *) (* INTER_CB_GAP = "5'b01001" *) (* ORIG_REF_NAME = "aurora_64b66b_25p78G_core" *) 
(* SCRAMBLER_SEED = "58'b1010101010101010101010101010101010101010101010101010101010" *) (* SIM_GTXRESET_SPEEDUP = "0" *) (* wait_for_fifo_wr_rst_busy_value = "6'b100000" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_core
   (s_axi_tx_tdata,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    s_axi_tx_tkeep,
    s_axi_tx_tlast,
    m_axi_rx_tdata,
    m_axi_rx_tvalid,
    m_axi_rx_tkeep,
    m_axi_rx_tlast,
    rxp,
    rxn,
    txp,
    txn,
    gt_refclk1,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    mmcm_not_locked,
    user_clk,
    sync_clk,
    sysreset_to_core,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_qplllock_quad1_in,
    gt_qpllrefclklost_quad1,
    gt_to_common_qpllreset_out,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_rresp,
    s_axi_rready,
    init_clk,
    link_reset_out,
    gt_powergood,
    gt_pll_lock,
    sys_reset_out,
    bufg_gt_clr_out,
    tx_out_clk);
  input [0:63]s_axi_tx_tdata;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  input [0:7]s_axi_tx_tkeep;
  input s_axi_tx_tlast;
  output [0:63]m_axi_rx_tdata;
  output m_axi_rx_tvalid;
  output [0:7]m_axi_rx_tkeep;
  output m_axi_rx_tlast;
  input rxp;
  input rxn;
  output txp;
  output txn;
  input gt_refclk1;
  output hard_err;
  output soft_err;
  output channel_up;
  output lane_up;
  input mmcm_not_locked;
  input user_clk;
  input sync_clk;
  input sysreset_to_core;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_qplllock_quad1_in;
  input gt_qpllrefclklost_quad1;
  output gt_to_common_qpllreset_out;
  input [31:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output s_axi_bvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  input [31:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  input init_clk;
  output link_reset_out;
  output [0:0]gt_powergood;
  output gt_pll_lock;
  output sys_reset_out;
  output bufg_gt_clr_out;
  output tx_out_clk;

  wire \<const0> ;
  wire aurora_64b66b_25p78G_wrapper_i_n_100;
  wire aurora_64b66b_25p78G_wrapper_i_n_101;
  wire aurora_64b66b_25p78G_wrapper_i_n_104;
  wire aurora_64b66b_25p78G_wrapper_i_n_105;
  wire aurora_64b66b_25p78G_wrapper_i_n_106;
  wire aurora_64b66b_25p78G_wrapper_i_n_107;
  wire aurora_64b66b_25p78G_wrapper_i_n_38;
  wire aurora_64b66b_25p78G_wrapper_i_n_39;
  wire aurora_64b66b_25p78G_wrapper_i_n_40;
  wire aurora_64b66b_25p78G_wrapper_i_n_41;
  wire aurora_64b66b_25p78G_wrapper_i_n_42;
  wire aurora_64b66b_25p78G_wrapper_i_n_43;
  wire aurora_64b66b_25p78G_wrapper_i_n_44;
  wire aurora_64b66b_25p78G_wrapper_i_n_45;
  wire aurora_64b66b_25p78G_wrapper_i_n_46;
  wire aurora_64b66b_25p78G_wrapper_i_n_47;
  wire aurora_64b66b_25p78G_wrapper_i_n_48;
  wire aurora_64b66b_25p78G_wrapper_i_n_49;
  wire aurora_64b66b_25p78G_wrapper_i_n_50;
  wire aurora_64b66b_25p78G_wrapper_i_n_51;
  wire aurora_64b66b_25p78G_wrapper_i_n_52;
  wire aurora_64b66b_25p78G_wrapper_i_n_53;
  wire aurora_64b66b_25p78G_wrapper_i_n_54;
  wire aurora_64b66b_25p78G_wrapper_i_n_55;
  wire aurora_64b66b_25p78G_wrapper_i_n_56;
  wire aurora_64b66b_25p78G_wrapper_i_n_57;
  wire aurora_64b66b_25p78G_wrapper_i_n_58;
  wire aurora_64b66b_25p78G_wrapper_i_n_59;
  wire aurora_64b66b_25p78G_wrapper_i_n_60;
  wire aurora_64b66b_25p78G_wrapper_i_n_61;
  wire aurora_64b66b_25p78G_wrapper_i_n_62;
  wire aurora_64b66b_25p78G_wrapper_i_n_63;
  wire aurora_64b66b_25p78G_wrapper_i_n_64;
  wire aurora_64b66b_25p78G_wrapper_i_n_65;
  wire aurora_64b66b_25p78G_wrapper_i_n_66;
  wire aurora_64b66b_25p78G_wrapper_i_n_67;
  wire aurora_64b66b_25p78G_wrapper_i_n_68;
  wire aurora_64b66b_25p78G_wrapper_i_n_69;
  wire aurora_64b66b_25p78G_wrapper_i_n_70;
  wire aurora_64b66b_25p78G_wrapper_i_n_71;
  wire aurora_64b66b_25p78G_wrapper_i_n_72;
  wire aurora_64b66b_25p78G_wrapper_i_n_73;
  wire aurora_64b66b_25p78G_wrapper_i_n_74;
  wire aurora_64b66b_25p78G_wrapper_i_n_75;
  wire aurora_64b66b_25p78G_wrapper_i_n_76;
  wire aurora_64b66b_25p78G_wrapper_i_n_77;
  wire aurora_64b66b_25p78G_wrapper_i_n_78;
  wire aurora_64b66b_25p78G_wrapper_i_n_79;
  wire aurora_64b66b_25p78G_wrapper_i_n_80;
  wire aurora_64b66b_25p78G_wrapper_i_n_81;
  wire aurora_64b66b_25p78G_wrapper_i_n_82;
  wire aurora_64b66b_25p78G_wrapper_i_n_83;
  wire aurora_64b66b_25p78G_wrapper_i_n_84;
  wire aurora_64b66b_25p78G_wrapper_i_n_85;
  wire aurora_64b66b_25p78G_wrapper_i_n_86;
  wire aurora_64b66b_25p78G_wrapper_i_n_87;
  wire aurora_64b66b_25p78G_wrapper_i_n_88;
  wire aurora_64b66b_25p78G_wrapper_i_n_89;
  wire aurora_64b66b_25p78G_wrapper_i_n_90;
  wire aurora_64b66b_25p78G_wrapper_i_n_91;
  wire aurora_64b66b_25p78G_wrapper_i_n_92;
  wire aurora_64b66b_25p78G_wrapper_i_n_93;
  wire aurora_64b66b_25p78G_wrapper_i_n_94;
  wire aurora_64b66b_25p78G_wrapper_i_n_95;
  wire aurora_64b66b_25p78G_wrapper_i_n_96;
  wire aurora_64b66b_25p78G_wrapper_i_n_97;
  wire aurora_64b66b_25p78G_wrapper_i_n_98;
  wire aurora_64b66b_25p78G_wrapper_i_n_99;
  wire aurora_lane_0_i_n_69;
  wire aurora_lane_0_i_n_70;
  wire aurora_lane_0_i_n_71;
  wire aurora_lane_0_i_n_72;
  wire aurora_lane_0_i_n_73;
  wire aurora_lane_0_i_n_74;
  wire aurora_lane_0_i_n_75;
  wire aurora_lane_0_i_n_76;
  wire bufg_gt_clr_out;
  wire \cbcc_gtx0_i/master_do_rd_en ;
  wire [1:0]\cbcc_gtx0_i/p_0_in ;
  wire \cbcc_gtx0_i/p_0_in11_in ;
  wire \channel_init_sm_i/reset_lanes_c ;
  wire \channel_init_sm_i/wait_for_lane_up_r0 ;
  wire channel_up;
  wire channel_up_tx_if;
  wire check_polarity_i;
  wire do_cc_i;
  wire [9:0]drpaddr_in_i;
  wire [15:0]drpdi_in_i;
  wire [15:0]drpdo_out_i;
  wire drpen_in_i;
  wire drprdy_out_i;
  wire drpwe_in_i;
  wire enable_err_detect_i;
  wire fsm_resetdone;
  wire gen_ch_bond_i;
  wire gen_na_idles_i;
  wire global_logic_i_n_6;
  wire global_logic_i_n_8;
  wire got_cc_i;
  wire got_idles_i;
  wire gt_pll_lock;
  wire [0:0]gt_powergood;
  wire gt_qpllclk_quad1_in;
  wire gt_qplllock_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_refclk1;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire hard_err;
  wire hard_err_i;
  wire init_clk;
  wire \lane_init_sm_i/reset_count_r0 ;
  wire lane_up;
  wire link_reset_0_c;
  wire link_reset_out;
  wire [2:0]loopback;
  wire [0:63]m_axi_rx_tdata;
  wire [0:7]m_axi_rx_tkeep;
  wire m_axi_rx_tlast;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked;
  wire p_0_in;
  wire p_2_in;
  wire pma_init;
  wire power_down;
  wire remote_ready_i;
  wire reset_lanes_i;
  wire rst_drp;
  wire rx_header_err_i;
  wire \rx_ll_datapath_i/pipe1_rx_pdu_in_progress_c ;
  wire \rx_ll_datapath_i/rx_pe_data_v_c ;
  wire \rx_ll_datapath_i/rx_sep_c ;
  wire rx_lossofsync_i;
  wire rx_neg_i;
  wire [0:63]rx_pe_data_i;
  wire rx_polarity_i;
  wire rx_sep7_i;
  wire rx_sep_i;
  wire rxdatavalid_i;
  wire rxdatavalid_to_ll_i;
  wire rxn;
  wire rxp;
  wire [31:0]s_axi_araddr;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [15:0]\^s_axi_rdata ;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [0:63]s_axi_tx_tdata;
  wire [0:7]s_axi_tx_tkeep;
  wire s_axi_tx_tlast;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire soft_err;
  wire soft_err_i;
  wire \sym_gen_i/tx_header_1_c3_out ;
  wire sync_clk;
  wire sys_reset_out;
  wire sysreset_to_core;
  wire sysreset_to_core_sync;
  wire [0:63]tx_data_i;
  wire tx_header_0_i;
  wire tx_header_1_i;
  wire \tx_ll_control_sm_i/R0 ;
  wire \tx_ll_control_sm_i/do_cc_r_reg0 ;
  wire \tx_ll_control_sm_i/extend_cc_r ;
  wire \tx_ll_control_sm_i/extend_cc_r1 ;
  wire \tx_ll_control_sm_i/pdu_ok_c ;
  wire \tx_ll_control_sm_i/tlast_txdv_coincide_r0 ;
  wire tx_ll_i_n_10;
  wire tx_ll_i_n_11;
  wire tx_ll_i_n_12;
  wire tx_ll_i_n_13;
  wire tx_ll_i_n_14;
  wire tx_ll_i_n_15;
  wire tx_ll_i_n_2;
  wire tx_ll_i_n_3;
  wire tx_ll_i_n_4;
  wire tx_ll_i_n_5;
  wire tx_ll_i_n_6;
  wire tx_ll_i_n_64;
  wire tx_ll_i_n_65;
  wire tx_ll_i_n_67;
  wire tx_ll_i_n_68;
  wire tx_ll_i_n_69;
  wire tx_ll_i_n_7;
  wire tx_ll_i_n_70;
  wire tx_ll_i_n_8;
  wire tx_ll_i_n_9;
  wire tx_out_clk;
  wire [0:47]tx_pe_data_i;
  wire tx_reset_i;
  wire txdatavalid_i;
  wire txdatavalid_symgen_i;
  wire txn;
  wire txp;
  wire user_clk;

  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15:0] = \^s_axi_rdata [15:0];
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_WRAPPER aurora_64b66b_25p78G_wrapper_i
       (.D({tx_header_1_i,tx_header_0_i}),
        .DRPADDR_IN(drpaddr_in_i),
        .DRPDI_IN(drpdi_in_i),
        .DRPDO_OUT(drpdo_out_i),
        .DRPRDY_OUT(drprdy_out_i),
        .FSM_RESETDONE_j_reg_0(fsm_resetdone),
        .HARD_ERR_reg(aurora_64b66b_25p78G_wrapper_i_n_105),
        .Q({\cbcc_gtx0_i/p_0_in11_in ,\cbcc_gtx0_i/p_0_in ,aurora_64b66b_25p78G_wrapper_i_n_38,aurora_64b66b_25p78G_wrapper_i_n_39,aurora_64b66b_25p78G_wrapper_i_n_40,aurora_64b66b_25p78G_wrapper_i_n_41,aurora_64b66b_25p78G_wrapper_i_n_42,aurora_64b66b_25p78G_wrapper_i_n_43,aurora_64b66b_25p78G_wrapper_i_n_44,aurora_64b66b_25p78G_wrapper_i_n_45,aurora_64b66b_25p78G_wrapper_i_n_46,aurora_64b66b_25p78G_wrapper_i_n_47,aurora_64b66b_25p78G_wrapper_i_n_48,aurora_64b66b_25p78G_wrapper_i_n_49,aurora_64b66b_25p78G_wrapper_i_n_50,aurora_64b66b_25p78G_wrapper_i_n_51,aurora_64b66b_25p78G_wrapper_i_n_52,aurora_64b66b_25p78G_wrapper_i_n_53,aurora_64b66b_25p78G_wrapper_i_n_54,aurora_64b66b_25p78G_wrapper_i_n_55,aurora_64b66b_25p78G_wrapper_i_n_56,aurora_64b66b_25p78G_wrapper_i_n_57,aurora_64b66b_25p78G_wrapper_i_n_58,aurora_64b66b_25p78G_wrapper_i_n_59,aurora_64b66b_25p78G_wrapper_i_n_60,aurora_64b66b_25p78G_wrapper_i_n_61,aurora_64b66b_25p78G_wrapper_i_n_62,aurora_64b66b_25p78G_wrapper_i_n_63,aurora_64b66b_25p78G_wrapper_i_n_64,aurora_64b66b_25p78G_wrapper_i_n_65,aurora_64b66b_25p78G_wrapper_i_n_66,aurora_64b66b_25p78G_wrapper_i_n_67,aurora_64b66b_25p78G_wrapper_i_n_68,aurora_64b66b_25p78G_wrapper_i_n_69,aurora_64b66b_25p78G_wrapper_i_n_70,aurora_64b66b_25p78G_wrapper_i_n_71,aurora_64b66b_25p78G_wrapper_i_n_72,aurora_64b66b_25p78G_wrapper_i_n_73,aurora_64b66b_25p78G_wrapper_i_n_74,aurora_64b66b_25p78G_wrapper_i_n_75,aurora_64b66b_25p78G_wrapper_i_n_76,aurora_64b66b_25p78G_wrapper_i_n_77,aurora_64b66b_25p78G_wrapper_i_n_78,aurora_64b66b_25p78G_wrapper_i_n_79,aurora_64b66b_25p78G_wrapper_i_n_80,aurora_64b66b_25p78G_wrapper_i_n_81,aurora_64b66b_25p78G_wrapper_i_n_82,aurora_64b66b_25p78G_wrapper_i_n_83,aurora_64b66b_25p78G_wrapper_i_n_84,aurora_64b66b_25p78G_wrapper_i_n_85,aurora_64b66b_25p78G_wrapper_i_n_86,aurora_64b66b_25p78G_wrapper_i_n_87,aurora_64b66b_25p78G_wrapper_i_n_88,aurora_64b66b_25p78G_wrapper_i_n_89,aurora_64b66b_25p78G_wrapper_i_n_90,aurora_64b66b_25p78G_wrapper_i_n_91,aurora_64b66b_25p78G_wrapper_i_n_92,aurora_64b66b_25p78G_wrapper_i_n_93,aurora_64b66b_25p78G_wrapper_i_n_94,aurora_64b66b_25p78G_wrapper_i_n_95,aurora_64b66b_25p78G_wrapper_i_n_96,aurora_64b66b_25p78G_wrapper_i_n_97,aurora_64b66b_25p78G_wrapper_i_n_98,aurora_64b66b_25p78G_wrapper_i_n_99,aurora_64b66b_25p78G_wrapper_i_n_100,aurora_64b66b_25p78G_wrapper_i_n_101}),
        .RESET(rst_drp),
        .\RX_DATA_REG_reg[0] (aurora_64b66b_25p78G_wrapper_i_n_106),
        .SR(p_2_in),
        .SYSTEM_RESET_reg(sys_reset_out),
        .\TX_DATA_reg[58] (aurora_64b66b_25p78G_wrapper_i_n_104),
        .\TX_DATA_reg[63] ({tx_data_i[0],tx_data_i[1],tx_data_i[2],tx_data_i[3],tx_data_i[4],tx_data_i[5],tx_data_i[6],tx_data_i[7],tx_data_i[8],tx_data_i[9],tx_data_i[10],tx_data_i[11],tx_data_i[12],tx_data_i[13],tx_data_i[14],tx_data_i[15],tx_data_i[16],tx_data_i[17],tx_data_i[18],tx_data_i[19],tx_data_i[20],tx_data_i[21],tx_data_i[22],tx_data_i[23],tx_data_i[24],tx_data_i[25],tx_data_i[26],tx_data_i[27],tx_data_i[28],tx_data_i[29],tx_data_i[30],tx_data_i[31],tx_data_i[32],tx_data_i[33],tx_data_i[34],tx_data_i[35],tx_data_i[36],tx_data_i[37],tx_data_i[38],tx_data_i[39],tx_data_i[40],tx_data_i[41],tx_data_i[42],tx_data_i[43],tx_data_i[44],tx_data_i[45],tx_data_i[46],tx_data_i[47],tx_data_i[48],tx_data_i[49],tx_data_i[50],tx_data_i[51],tx_data_i[52],tx_data_i[53],tx_data_i[54],tx_data_i[55],tx_data_i[56],tx_data_i[57],tx_data_i[58],tx_data_i[59],tx_data_i[60],tx_data_i[61],tx_data_i[62],tx_data_i[63]}),
        .TX_HEADER_0_reg(aurora_64b66b_25p78G_wrapper_i_n_107),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .channel_up_tx_if(channel_up_tx_if),
        .do_cc_r_reg(tx_ll_i_n_68),
        .drpen_in(drpen_in_i),
        .drpwe_in(drpwe_in_i),
        .enable_err_detect_i(enable_err_detect_i),
        .extend_cc_r1(\tx_ll_control_sm_i/extend_cc_r1 ),
        .gen_ch_bond_int_reg(tx_ll_i_n_64),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_in(gt_qpllclk_quad1_in),
        .gt_qplllock_quad1_in(gt_qplllock_quad1_in),
        .gt_qpllrefclk_quad1_in(gt_qpllrefclk_quad1_in),
        .gt_refclk1(gt_refclk1),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gt_to_common_qpllreset_out(gt_to_common_qpllreset_out),
        .in0(check_polarity_i),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .master_do_rd_en(\cbcc_gtx0_i/master_do_rd_en ),
        .mmcm_not_locked(mmcm_not_locked),
        .pdu_ok_c(\tx_ll_control_sm_i/pdu_ok_c ),
        .rx_header_err_i(rx_header_err_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rx_polarity_r_reg(rx_polarity_i),
        .rxdatavalid_i(rxdatavalid_i),
        .rxn(rxn),
        .rxp(rxp),
        .s_axi_tx_tkeep(s_axi_tx_tkeep[7]),
        .\s_axi_tx_tkeep[2] (tx_ll_i_n_65),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg(rx_neg_i),
        .sync_clk(sync_clk),
        .tlast_txdv_coincide_r0(\tx_ll_control_sm_i/tlast_txdv_coincide_r0 ),
        .tx_out_clk(tx_out_clk),
        .tx_reset_i(tx_reset_i),
        .txdatavalid_i(txdatavalid_i),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .txn(txn),
        .txp(txp),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_AURORA_LANE aurora_lane_0_i
       (.CHANNEL_UP_RX_IF_reg(channel_up),
        .CHANNEL_UP_TX_IF_reg(aurora_64b66b_25p78G_wrapper_i_n_104),
        .D({tx_header_1_i,tx_header_0_i}),
        .E(\rx_ll_datapath_i/pipe1_rx_pdu_in_progress_c ),
        .ENABLE_ERR_DETECT_reg(aurora_64b66b_25p78G_wrapper_i_n_105),
        .GEN_SEP7_reg(tx_ll_i_n_67),
        .GEN_SEP_reg(tx_ll_i_n_70),
        .GEN_SEP_reg_0(tx_ll_i_n_69),
        .Q({\cbcc_gtx0_i/p_0_in11_in ,\cbcc_gtx0_i/p_0_in ,aurora_64b66b_25p78G_wrapper_i_n_38,aurora_64b66b_25p78G_wrapper_i_n_39,aurora_64b66b_25p78G_wrapper_i_n_40,aurora_64b66b_25p78G_wrapper_i_n_41,aurora_64b66b_25p78G_wrapper_i_n_42,aurora_64b66b_25p78G_wrapper_i_n_43,aurora_64b66b_25p78G_wrapper_i_n_44,aurora_64b66b_25p78G_wrapper_i_n_45,aurora_64b66b_25p78G_wrapper_i_n_46,aurora_64b66b_25p78G_wrapper_i_n_47,aurora_64b66b_25p78G_wrapper_i_n_48,aurora_64b66b_25p78G_wrapper_i_n_49,aurora_64b66b_25p78G_wrapper_i_n_50,aurora_64b66b_25p78G_wrapper_i_n_51,aurora_64b66b_25p78G_wrapper_i_n_52,aurora_64b66b_25p78G_wrapper_i_n_53,aurora_64b66b_25p78G_wrapper_i_n_54,aurora_64b66b_25p78G_wrapper_i_n_55,aurora_64b66b_25p78G_wrapper_i_n_56,aurora_64b66b_25p78G_wrapper_i_n_57,aurora_64b66b_25p78G_wrapper_i_n_58,aurora_64b66b_25p78G_wrapper_i_n_59,aurora_64b66b_25p78G_wrapper_i_n_60,aurora_64b66b_25p78G_wrapper_i_n_61,aurora_64b66b_25p78G_wrapper_i_n_62,aurora_64b66b_25p78G_wrapper_i_n_63,aurora_64b66b_25p78G_wrapper_i_n_64,aurora_64b66b_25p78G_wrapper_i_n_65,aurora_64b66b_25p78G_wrapper_i_n_66,aurora_64b66b_25p78G_wrapper_i_n_67,aurora_64b66b_25p78G_wrapper_i_n_68,aurora_64b66b_25p78G_wrapper_i_n_69,aurora_64b66b_25p78G_wrapper_i_n_70,aurora_64b66b_25p78G_wrapper_i_n_71,aurora_64b66b_25p78G_wrapper_i_n_72,aurora_64b66b_25p78G_wrapper_i_n_73,aurora_64b66b_25p78G_wrapper_i_n_74,aurora_64b66b_25p78G_wrapper_i_n_75,aurora_64b66b_25p78G_wrapper_i_n_76,aurora_64b66b_25p78G_wrapper_i_n_77,aurora_64b66b_25p78G_wrapper_i_n_78,aurora_64b66b_25p78G_wrapper_i_n_79,aurora_64b66b_25p78G_wrapper_i_n_80,aurora_64b66b_25p78G_wrapper_i_n_81,aurora_64b66b_25p78G_wrapper_i_n_82,aurora_64b66b_25p78G_wrapper_i_n_83,aurora_64b66b_25p78G_wrapper_i_n_84,aurora_64b66b_25p78G_wrapper_i_n_85,aurora_64b66b_25p78G_wrapper_i_n_86,aurora_64b66b_25p78G_wrapper_i_n_87,aurora_64b66b_25p78G_wrapper_i_n_88,aurora_64b66b_25p78G_wrapper_i_n_89,aurora_64b66b_25p78G_wrapper_i_n_90,aurora_64b66b_25p78G_wrapper_i_n_91,aurora_64b66b_25p78G_wrapper_i_n_92,aurora_64b66b_25p78G_wrapper_i_n_93,aurora_64b66b_25p78G_wrapper_i_n_94,aurora_64b66b_25p78G_wrapper_i_n_95,aurora_64b66b_25p78G_wrapper_i_n_96,aurora_64b66b_25p78G_wrapper_i_n_97,aurora_64b66b_25p78G_wrapper_i_n_98,aurora_64b66b_25p78G_wrapper_i_n_99,aurora_64b66b_25p78G_wrapper_i_n_100,aurora_64b66b_25p78G_wrapper_i_n_101}),
        .RX_NEG_OUT_reg(rx_neg_i),
        .SYSTEM_RESET_reg(sys_reset_out),
        .\TXDATA_IN_REG_reg[63] ({tx_data_i[0],tx_data_i[1],tx_data_i[2],tx_data_i[3],tx_data_i[4],tx_data_i[5],tx_data_i[6],tx_data_i[7],tx_data_i[8],tx_data_i[9],tx_data_i[10],tx_data_i[11],tx_data_i[12],tx_data_i[13],tx_data_i[14],tx_data_i[15],tx_data_i[16],tx_data_i[17],tx_data_i[18],tx_data_i[19],tx_data_i[20],tx_data_i[21],tx_data_i[22],tx_data_i[23],tx_data_i[24],tx_data_i[25],tx_data_i[26],tx_data_i[27],tx_data_i[28],tx_data_i[29],tx_data_i[30],tx_data_i[31],tx_data_i[32],tx_data_i[33],tx_data_i[34],tx_data_i[35],tx_data_i[36],tx_data_i[37],tx_data_i[38],tx_data_i[39],tx_data_i[40],tx_data_i[41],tx_data_i[42],tx_data_i[43],tx_data_i[44],tx_data_i[45],tx_data_i[46],tx_data_i[47],tx_data_i[48],tx_data_i[49],tx_data_i[50],tx_data_i[51],tx_data_i[52],tx_data_i[53],tx_data_i[54],tx_data_i[55],tx_data_i[56],tx_data_i[57],tx_data_i[58],tx_data_i[59],tx_data_i[60],tx_data_i[61],tx_data_i[62],tx_data_i[63]}),
        .\TX_PE_DATA_reg[0] ({tx_pe_data_i[0],tx_pe_data_i[1],tx_pe_data_i[2],tx_pe_data_i[3],tx_pe_data_i[4],tx_pe_data_i[5],tx_pe_data_i[6],tx_pe_data_i[7],tx_pe_data_i[8],tx_pe_data_i[9],tx_pe_data_i[10],tx_pe_data_i[11],tx_pe_data_i[12],tx_pe_data_i[13],tx_pe_data_i[14],tx_pe_data_i[15],tx_pe_data_i[16],tx_pe_data_i[17],tx_pe_data_i[18],tx_pe_data_i[19],tx_pe_data_i[20],tx_pe_data_i[21],tx_pe_data_i[22],tx_pe_data_i[23],tx_pe_data_i[24],tx_pe_data_i[25],tx_pe_data_i[26],tx_pe_data_i[27],tx_pe_data_i[28],tx_pe_data_i[29],tx_pe_data_i[30],tx_pe_data_i[31],tx_pe_data_i[32],tx_pe_data_i[33],tx_pe_data_i[34],tx_pe_data_i[35],tx_pe_data_i[36],tx_pe_data_i[37],tx_pe_data_i[38],tx_pe_data_i[39],tx_pe_data_i[40],tx_pe_data_i[41],tx_pe_data_i[42],tx_pe_data_i[43],tx_pe_data_i[44],tx_pe_data_i[45],tx_pe_data_i[46],tx_pe_data_i[47]}),
        .\TX_PE_DATA_reg[56] ({tx_ll_i_n_2,tx_ll_i_n_3,tx_ll_i_n_4,tx_ll_i_n_5,tx_ll_i_n_6,tx_ll_i_n_7,tx_ll_i_n_8,tx_ll_i_n_9,tx_ll_i_n_10,tx_ll_i_n_11,tx_ll_i_n_12,tx_ll_i_n_13,tx_ll_i_n_14,tx_ll_i_n_15}),
        .enable_err_detect_i(enable_err_detect_i),
        .got_cc_i(got_cc_i),
        .got_idles_i(got_idles_i),
        .hard_err_i(hard_err_i),
        .hold_reg_r_reg(aurora_64b66b_25p78G_wrapper_i_n_106),
        .in0(check_polarity_i),
        .\lane_up[0] (lane_up),
        .master_do_rd_en(\cbcc_gtx0_i/master_do_rd_en ),
        .\raw_data_r_reg[73] ({rx_pe_data_i[0],rx_pe_data_i[1],rx_pe_data_i[2],rx_pe_data_i[3],rx_pe_data_i[4],rx_pe_data_i[5],rx_pe_data_i[6],rx_pe_data_i[7],rx_pe_data_i[8],rx_pe_data_i[9],rx_pe_data_i[10],rx_pe_data_i[11],rx_pe_data_i[12],rx_pe_data_i[13],rx_pe_data_i[14],rx_pe_data_i[15],rx_pe_data_i[16],rx_pe_data_i[17],rx_pe_data_i[18],rx_pe_data_i[19],rx_pe_data_i[20],rx_pe_data_i[21],rx_pe_data_i[22],rx_pe_data_i[23],rx_pe_data_i[24],rx_pe_data_i[25],rx_pe_data_i[26],rx_pe_data_i[27],rx_pe_data_i[28],rx_pe_data_i[29],rx_pe_data_i[30],rx_pe_data_i[31],rx_pe_data_i[32],rx_pe_data_i[33],rx_pe_data_i[34],rx_pe_data_i[35],rx_pe_data_i[36],rx_pe_data_i[37],rx_pe_data_i[38],rx_pe_data_i[39],rx_pe_data_i[40],rx_pe_data_i[41],rx_pe_data_i[42],rx_pe_data_i[43],rx_pe_data_i[44],rx_pe_data_i[45],rx_pe_data_i[46],rx_pe_data_i[47],rx_pe_data_i[48],rx_pe_data_i[49],rx_pe_data_i[50],rx_pe_data_i[51],rx_pe_data_i[52],rx_pe_data_i[53],rx_pe_data_i[54],rx_pe_data_i[55],rx_pe_data_i[56],rx_pe_data_i[57],rx_pe_data_i[58],rx_pe_data_i[59],rx_pe_data_i[60],rx_pe_data_i[61],rx_pe_data_i[62],rx_pe_data_i[63],aurora_lane_0_i_n_69,aurora_lane_0_i_n_70,aurora_lane_0_i_n_71,aurora_lane_0_i_n_72,aurora_lane_0_i_n_73,aurora_lane_0_i_n_74,aurora_lane_0_i_n_75,aurora_lane_0_i_n_76,rx_sep_i,rx_sep7_i}),
        .remote_ready_i(remote_ready_i),
        .reset_count_r0(\lane_init_sm_i/reset_count_r0 ),
        .reset_lanes_i(reset_lanes_i),
        .rx_header_err_i(rx_header_err_i),
        .rx_lossofsync_i(rx_lossofsync_i),
        .rx_pe_data_v_c(\rx_ll_datapath_i/rx_pe_data_v_c ),
        .rxdatavalid_i(rxdatavalid_i),
        .rxdatavalid_to_ll_i(rxdatavalid_to_ll_i),
        .s_level_out_d1_aurora_64b66b_25p78G_cdc_to_reg(rx_polarity_i),
        .soft_err_i(soft_err_i),
        .tx_header_1_c3_out(\sym_gen_i/tx_header_1_c3_out ),
        .tx_reset_i(tx_reset_i),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .\txseq_counter_i_reg[3] (aurora_64b66b_25p78G_wrapper_i_n_107),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_AXI_TO_DRP axi_to_drp_i
       (.D(drpdo_out_i),
        .DRPRDY_OUT(drprdy_out_i),
        .Q(drpaddr_in_i),
        .RESET(rst_drp),
        .drpen_in(drpen_in_i),
        .drprdy_out_reg_0(drpdi_in_i),
        .drpwe_in(drpwe_in_i),
        .init_clk(init_clk),
        .s_axi_araddr(s_axi_araddr[11:2]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[11:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(\^s_axi_rdata ),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata[15:0]),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_RESET_LOGIC core_reset_logic_i
       (.gen_na_idles_i(gen_na_idles_i),
        .lane_up(lane_up),
        .link_reset_out(link_reset_out),
        .power_down(power_down),
        .reset_count_r0(\lane_init_sm_i/reset_count_r0 ),
        .reset_lanes_c(\channel_init_sm_i/reset_lanes_c ),
        .stg3_reg(fsm_resetdone),
        .sys_reset_out(sys_reset_out),
        .sysreset_to_core_sync(sysreset_to_core_sync),
        .tx_reset_i(tx_reset_i),
        .user_clk(user_clk),
        .wait_for_lane_up_r0(\channel_init_sm_i/wait_for_lane_up_r0 ));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_GLOBAL_LOGIC global_logic_i
       (.D(rx_sep_i),
        .GEN_SEP_reg(global_logic_i_n_6),
        .R0(\tx_ll_control_sm_i/R0 ),
        .SR(p_0_in),
        .SYSTEM_RESET_reg(sys_reset_out),
        .channel_up(channel_up),
        .channel_up_tx_if(channel_up_tx_if),
        .extend_cc_r1(\tx_ll_control_sm_i/extend_cc_r1 ),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_na_idles_i(gen_na_idles_i),
        .got_idles_i(got_idles_i),
        .hard_err(hard_err),
        .hard_err_i(hard_err_i),
        .remote_ready_i(remote_ready_i),
        .reset_lanes_c(\channel_init_sm_i/reset_lanes_c ),
        .reset_lanes_i(reset_lanes_i),
        .rx_sep_c(\rx_ll_datapath_i/rx_sep_c ),
        .s_axi_tx_tready_reg(s_axi_tx_tready),
        .soft_err_i(soft_err_i),
        .soft_err_reg(global_logic_i_n_8),
        .user_clk(user_clk),
        .wait_for_lane_up_r0(\channel_init_sm_i/wait_for_lane_up_r0 ));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync gt_reset_sync
       (.RESET(rst_drp),
        .SR(p_2_in),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .pma_init(pma_init));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_0 reset_pb_sync
       (.sysreset_to_core(sysreset_to_core),
        .sysreset_to_core_sync(sysreset_to_core_sync),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_RX_LL rx_ll_i
       (.CHANNEL_UP_RX_IF_reg(channel_up),
        .D({rx_pe_data_i[0],rx_pe_data_i[1],rx_pe_data_i[2],rx_pe_data_i[3],rx_pe_data_i[4],rx_pe_data_i[5],rx_pe_data_i[6],rx_pe_data_i[7],rx_pe_data_i[8],rx_pe_data_i[9],rx_pe_data_i[10],rx_pe_data_i[11],rx_pe_data_i[12],rx_pe_data_i[13],rx_pe_data_i[14],rx_pe_data_i[15],rx_pe_data_i[16],rx_pe_data_i[17],rx_pe_data_i[18],rx_pe_data_i[19],rx_pe_data_i[20],rx_pe_data_i[21],rx_pe_data_i[22],rx_pe_data_i[23],rx_pe_data_i[24],rx_pe_data_i[25],rx_pe_data_i[26],rx_pe_data_i[27],rx_pe_data_i[28],rx_pe_data_i[29],rx_pe_data_i[30],rx_pe_data_i[31],rx_pe_data_i[32],rx_pe_data_i[33],rx_pe_data_i[34],rx_pe_data_i[35],rx_pe_data_i[36],rx_pe_data_i[37],rx_pe_data_i[38],rx_pe_data_i[39],rx_pe_data_i[40],rx_pe_data_i[41],rx_pe_data_i[42],rx_pe_data_i[43],rx_pe_data_i[44],rx_pe_data_i[45],rx_pe_data_i[46],rx_pe_data_i[47],rx_pe_data_i[48],rx_pe_data_i[49],rx_pe_data_i[50],rx_pe_data_i[51],rx_pe_data_i[52],rx_pe_data_i[53],rx_pe_data_i[54],rx_pe_data_i[55],rx_pe_data_i[56],rx_pe_data_i[57],rx_pe_data_i[58],rx_pe_data_i[59],rx_pe_data_i[60],rx_pe_data_i[61],rx_pe_data_i[62],rx_pe_data_i[63],aurora_lane_0_i_n_69,aurora_lane_0_i_n_70,aurora_lane_0_i_n_71,aurora_lane_0_i_n_72,aurora_lane_0_i_n_73,aurora_lane_0_i_n_74,aurora_lane_0_i_n_75,aurora_lane_0_i_n_76,rx_sep_i,rx_sep7_i}),
        .E(\rx_ll_datapath_i/pipe1_rx_pdu_in_progress_c ),
        .SR(p_0_in),
        .got_cc_i(got_cc_i),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tkeep(m_axi_rx_tkeep),
        .m_axi_rx_tlast(m_axi_rx_tlast),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .rx_pe_data_v_c(\rx_ll_datapath_i/rx_pe_data_v_c ),
        .rx_sep_c(\rx_ll_datapath_i/rx_sep_c ),
        .rxdatavalid_to_ll_i(rxdatavalid_to_ll_i),
        .user_clk(user_clk));
  FDRE soft_err_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(global_logic_i_n_8),
        .Q(soft_err),
        .R(sys_reset_out));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_STANDARD_CC_MODULE standard_cc_module_i
       (.CHANNEL_UP_RX_IF_reg(channel_up),
        .Q(do_cc_i),
        .SR(p_0_in),
        .do_cc_r_reg0(\tx_ll_control_sm_i/do_cc_r_reg0 ),
        .extend_cc_r(\tx_ll_control_sm_i/extend_cc_r ),
        .user_clk(user_clk));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_TX_LL tx_ll_i
       (.CHANNEL_UP_TX_IF_reg(global_logic_i_n_6),
        .DO_CC_reg(do_cc_i),
        .Q({tx_pe_data_i[0],tx_pe_data_i[1],tx_pe_data_i[2],tx_pe_data_i[3],tx_pe_data_i[4],tx_pe_data_i[5],tx_pe_data_i[6],tx_pe_data_i[7],tx_pe_data_i[8],tx_pe_data_i[9],tx_pe_data_i[10],tx_pe_data_i[11],tx_pe_data_i[12],tx_pe_data_i[13],tx_pe_data_i[14],tx_pe_data_i[15],tx_pe_data_i[16],tx_pe_data_i[17],tx_pe_data_i[18],tx_pe_data_i[19],tx_pe_data_i[20],tx_pe_data_i[21],tx_pe_data_i[22],tx_pe_data_i[23],tx_pe_data_i[24],tx_pe_data_i[25],tx_pe_data_i[26],tx_pe_data_i[27],tx_pe_data_i[28],tx_pe_data_i[29],tx_pe_data_i[30],tx_pe_data_i[31],tx_pe_data_i[32],tx_pe_data_i[33],tx_pe_data_i[34],tx_pe_data_i[35],tx_pe_data_i[36],tx_pe_data_i[37],tx_pe_data_i[38],tx_pe_data_i[39],tx_pe_data_i[40],tx_pe_data_i[41],tx_pe_data_i[42],tx_pe_data_i[43],tx_pe_data_i[44],tx_pe_data_i[45],tx_pe_data_i[46],tx_pe_data_i[47]}),
        .R0(\tx_ll_control_sm_i/R0 ),
        .\TX_DATA_reg[57] (tx_ll_i_n_69),
        .\TX_DATA_reg[58] (tx_ll_i_n_70),
        .\TX_DATA_reg[63] ({tx_ll_i_n_2,tx_ll_i_n_3,tx_ll_i_n_4,tx_ll_i_n_5,tx_ll_i_n_6,tx_ll_i_n_7,tx_ll_i_n_8,tx_ll_i_n_9,tx_ll_i_n_10,tx_ll_i_n_11,tx_ll_i_n_12,tx_ll_i_n_13,tx_ll_i_n_14,tx_ll_i_n_15}),
        .\TX_DATA_reg[63]_0 (tx_ll_i_n_64),
        .TX_HEADER_0_reg(tx_ll_i_n_67),
        .channel_up_tx_if(channel_up_tx_if),
        .data_r_reg(tx_ll_i_n_68),
        .do_cc_r_reg0(\tx_ll_control_sm_i/do_cc_r_reg0 ),
        .extend_cc_r(\tx_ll_control_sm_i/extend_cc_r ),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_na_idles_i(gen_na_idles_i),
        .pdu_ok_c(\tx_ll_control_sm_i/pdu_ok_c ),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tkeep(s_axi_tx_tkeep),
        .s_axi_tx_tlast(s_axi_tx_tlast),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .tlast_txdv_coincide_r0(\tx_ll_control_sm_i/tlast_txdv_coincide_r0 ),
        .tlast_txdv_coincide_r_reg(tx_ll_i_n_65),
        .tx_header_1_c3_out(\sym_gen_i/tx_header_1_c3_out ),
        .txdatavalid_i(txdatavalid_i),
        .user_clk(user_clk));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_25p78G_fifo_gen_master,fifo_generator_v13_2_0,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "aurora_64b66b_25p78G_fifo_gen_master" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_0,Vivado 2017.3.1" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_fifo_gen_master
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, PHASE 0.000" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, PHASE 0.000" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "virtexuplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "8" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "9" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  aurora_64b66b_25p78G_fifo_generator_v13_2_0 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(prog_full),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_25p78G_gt,aurora_64b66b_25p78G_gt_gtwizard_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "aurora_64b66b_25p78G_gt" *) 
(* X_CORE_INFO = "aurora_64b66b_25p78G_gt_gtwizard_top,Vivado 2017.3.1" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt
   (gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtrefclk0_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    pcsrsvdin_in,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxusrclk_in,
    rxusrclk2_in,
    txdiffctrl_in,
    txheader_in,
    txinhibit_in,
    txpcsreset_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txsequence_in,
    txusrclk_in,
    txusrclk2_in,
    dmonitorout_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gtpowergood_out,
    gtytxn_out,
    gtytxp_out,
    rxbufstatus_out,
    rxdatavalid_out,
    rxheader_out,
    rxheadervalid_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxresetdone_out,
    rxstartofseq_out,
    txbufstatus_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txpmaresetdone_out,
    txresetdone_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [63:0]gtwiz_userdata_tx_in;
  output [63:0]gtwiz_userdata_rx_out;
  input [9:0]drpaddr_in;
  input [0:0]drpclk_in;
  input [15:0]drpdi_in;
  input [0:0]drpen_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [2:0]loopback_in;
  input [15:0]pcsrsvdin_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1refclk_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [3:0]rxprbssel_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [4:0]txdiffctrl_in;
  input [5:0]txheader_in;
  input [0:0]txinhibit_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [4:0]txpostcursor_in;
  input [0:0]txprbsforceerr_in;
  input [3:0]txprbssel_in;
  input [4:0]txprecursor_in;
  input [6:0]txsequence_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  output [15:0]dmonitorout_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gtpowergood_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [2:0]rxbufstatus_out;
  output [1:0]rxdatavalid_out;
  output [5:0]rxheader_out;
  output [1:0]rxheadervalid_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxresetdone_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txresetdone_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [15:0]dmonitorout_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [63:0]gtwiz_userdata_rx_out;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [15:0]pcsrsvdin_in;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrovrden_in;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxpcsreset_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxresetdone_out;
  wire [1:0]rxstartofseq_out;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [1:0]txbufstatus_out;
  wire [4:0]txdiffctrl_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txoutclkfabric_out;
  wire [0:0]txoutclkpcs_out;
  wire [0:0]txpcsreset_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;
  wire [0:0]NLW_inst_bufgtce_out_UNCONNECTED;
  wire [2:0]NLW_inst_bufgtcemask_out_UNCONNECTED;
  wire [8:0]NLW_inst_bufgtdiv_out_UNCONNECTED;
  wire [0:0]NLW_inst_bufgtreset_out_UNCONNECTED;
  wire [2:0]NLW_inst_bufgtrstmask_out_UNCONNECTED;
  wire [0:0]NLW_inst_cpllfbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_cplllock_out_UNCONNECTED;
  wire [0:0]NLW_inst_cpllrefclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_dmonitoroutclk_out_UNCONNECTED;
  wire [15:0]NLW_inst_drpdo_common_out_UNCONNECTED;
  wire [0:0]NLW_inst_drprdy_common_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxn_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxp_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtrefclkmonitor_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcierategen3_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcierateidle_out_UNCONNECTED;
  wire [1:0]NLW_inst_pcierateqpllpd_out_UNCONNECTED;
  wire [1:0]NLW_inst_pcierateqpllreset_out_UNCONNECTED;
  wire [0:0]NLW_inst_pciesynctxsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieusergen3rdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieuserphystatusrst_out_UNCONNECTED;
  wire [0:0]NLW_inst_pcieuserratestart_out_UNCONNECTED;
  wire [15:0]NLW_inst_pcsrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_phystatus_out_UNCONNECTED;
  wire [15:0]NLW_inst_pinrsrvdas_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout0_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout1_out_UNCONNECTED;
  wire [0:0]NLW_inst_powerpresent_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0refclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1refclklost_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor0_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor0_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_resetexception_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxbyteisaligned_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxbyterealign_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcdrlock_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcdrphdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanbondseq_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanisaligned_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxchanrealign_out_UNCONNECTED;
  wire [4:0]NLW_inst_rxchbondo_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxckcaldone_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxclkcorcnt_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcominitdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcommadet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcomsasdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxcomwakedet_out_UNCONNECTED;
  wire [15:0]NLW_inst_rxctrl0_out_UNCONNECTED;
  wire [15:0]NLW_inst_rxctrl1_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxctrl2_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxctrl3_out_UNCONNECTED;
  wire [127:0]NLW_inst_rxdata_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxdataextendrsvd_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxdlysresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxelecidle_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpstresetdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxmonitorout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstarted_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstrobedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxosintstrobestarted_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxoutclkfabric_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxoutclkpcs_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxphaligndone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxphalignerr_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprbslocked_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenp_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk0_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk0sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk1_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk1sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclkout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsliderdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslipdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslipoutclkrdy_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxslippmardy_out_UNCONNECTED;
  wire [2:0]NLW_inst_rxstatus_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxsyncout_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxvalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm0finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm0testdata_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm1finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm1testdata_out_UNCONNECTED;
  wire [0:0]NLW_inst_tcongpo_out_UNCONNECTED;
  wire [0:0]NLW_inst_tconrsvdout0_out_UNCONNECTED;
  wire [0:0]NLW_inst_txcomfinish_out_UNCONNECTED;
  wire [0:0]NLW_inst_txdccdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txdlysresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txphaligndone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txphinitdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenp_out_UNCONNECTED;
  wire [0:0]NLW_inst_txratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txsyncdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txsyncout_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdaddr_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubden_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdi_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubdwe_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubmdmtdo_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubtxuart_out_UNCONNECTED;

  (* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_COMMON_SCALING_FACTOR = "1" *) 
  (* C_CPLL_VCO_FREQUENCY = "2578.125000" *) 
  (* C_FORCE_COMMONS = "0" *) 
  (* C_FREERUN_FREQUENCY = "161.132812" *) 
  (* C_GT_REV = "67" *) 
  (* C_GT_TYPE = "3" *) 
  (* C_INCLUDE_CPLL_CAL = "2" *) 
  (* C_LOCATE_COMMON = "1" *) 
  (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) 
  (* C_LOCATE_RESET_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) 
  (* C_PCIE_CORECLK_FREQ = "250" *) 
  (* C_PCIE_ENABLE = "0" *) 
  (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) 
  (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
  (* C_RX_BUFFBYPASS_MODE = "0" *) 
  (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_RX_BUFFER_MODE = "1" *) 
  (* C_RX_CB_DISP = "8'b00000000" *) 
  (* C_RX_CB_K = "8'b00000000" *) 
  (* C_RX_CB_LEN_SEQ = "1" *) 
  (* C_RX_CB_MAX_LEVEL = "1" *) 
  (* C_RX_CB_NUM_SEQ = "0" *) 
  (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_CC_DISP = "8'b00000000" *) 
  (* C_RX_CC_ENABLE = "0" *) 
  (* C_RX_CC_K = "8'b00000000" *) 
  (* C_RX_CC_LEN_SEQ = "1" *) 
  (* C_RX_CC_NUM_SEQ = "0" *) 
  (* C_RX_CC_PERIODICITY = "5000" *) 
  (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_COMMA_M_ENABLE = "0" *) 
  (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
  (* C_RX_COMMA_P_ENABLE = "0" *) 
  (* C_RX_COMMA_P_VAL = "10'b0101111100" *) 
  (* C_RX_DATA_DECODING = "2" *) 
  (* C_RX_ENABLE = "1" *) 
  (* C_RX_INT_DATA_WIDTH = "64" *) 
  (* C_RX_LINE_RATE = "25.781300" *) 
  (* C_RX_MASTER_CHANNEL_IDX = "96" *) 
  (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_RX_OUTCLK_FREQUENCY = "402.832825" *) 
  (* C_RX_OUTCLK_SOURCE = "1" *) 
  (* C_RX_PLL_TYPE = "0" *) 
  (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_REFCLK_FREQUENCY = "161.133118" *) 
  (* C_RX_SLIDE_MODE = "0" *) 
  (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_RX_USER_DATA_WIDTH = "64" *) 
  (* C_RX_USRCLK2_FREQUENCY = "402.832825" *) 
  (* C_RX_USRCLK_FREQUENCY = "402.832825" *) 
  (* C_SECONDARY_QPLL_ENABLE = "0" *) 
  (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
  (* C_SIM_CPLL_CAL_BYPASS = "1'b0" *) 
  (* C_TOTAL_NUM_CHANNELS = "1" *) 
  (* C_TOTAL_NUM_COMMONS = "0" *) 
  (* C_TOTAL_NUM_COMMONS_EXAMPLE = "1" *) 
  (* C_TXPROGDIV_FREQ_ENABLE = "0" *) 
  (* C_TXPROGDIV_FREQ_SOURCE = "0" *) 
  (* C_TXPROGDIV_FREQ_VAL = "402.832825" *) 
  (* C_TX_BUFFBYPASS_MODE = "0" *) 
  (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_TX_BUFFER_MODE = "1" *) 
  (* C_TX_DATA_ENCODING = "2" *) 
  (* C_TX_ENABLE = "1" *) 
  (* C_TX_INT_DATA_WIDTH = "64" *) 
  (* C_TX_LINE_RATE = "25.781300" *) 
  (* C_TX_MASTER_CHANNEL_IDX = "96" *) 
  (* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_TX_OUTCLK_FREQUENCY = "402.832825" *) 
  (* C_TX_OUTCLK_SOURCE = "1" *) 
  (* C_TX_PLL_TYPE = "0" *) 
  (* C_TX_REFCLK_FREQUENCY = "161.133118" *) 
  (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_TX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_TX_USER_DATA_WIDTH = "64" *) 
  (* C_TX_USRCLK2_FREQUENCY = "402.832825" *) 
  (* C_TX_USRCLK_FREQUENCY = "402.832825" *) 
  (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt_gtwizard_top inst
       (.bgbypassb_in(1'b1),
        .bgmonitorenb_in(1'b1),
        .bgpdb_in(1'b1),
        .bgrcalovrd_in({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .bgrcalovrdenb_in(1'b1),
        .bufgtce_out(NLW_inst_bufgtce_out_UNCONNECTED[0]),
        .bufgtcemask_out(NLW_inst_bufgtcemask_out_UNCONNECTED[2:0]),
        .bufgtdiv_out(NLW_inst_bufgtdiv_out_UNCONNECTED[8:0]),
        .bufgtreset_out(NLW_inst_bufgtreset_out_UNCONNECTED[0]),
        .bufgtrstmask_out(NLW_inst_bufgtrstmask_out_UNCONNECTED[2:0]),
        .cdrstepdir_in(1'b0),
        .cdrstepsq_in(1'b0),
        .cdrstepsx_in(1'b0),
        .cfgreset_in(1'b0),
        .clkrsvd0_in(1'b0),
        .clkrsvd1_in(1'b0),
        .cpllfbclklost_out(NLW_inst_cpllfbclklost_out_UNCONNECTED[0]),
        .cpllfreqlock_in(1'b0),
        .cplllock_out(NLW_inst_cplllock_out_UNCONNECTED[0]),
        .cplllockdetclk_in(1'b0),
        .cplllocken_in(1'b0),
        .cpllpd_in(1'b1),
        .cpllrefclklost_out(NLW_inst_cpllrefclklost_out_UNCONNECTED[0]),
        .cpllrefclksel_in({1'b0,1'b0,1'b1}),
        .cpllreset_in(1'b1),
        .dmonfiforeset_in(1'b0),
        .dmonitorclk_in(1'b0),
        .dmonitorout_out(dmonitorout_out),
        .dmonitoroutclk_out(NLW_inst_dmonitoroutclk_out_UNCONNECTED[0]),
        .drpaddr_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpaddr_in(drpaddr_in),
        .drpclk_common_in(1'b0),
        .drpclk_in(drpclk_in),
        .drpdi_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdi_in(drpdi_in),
        .drpdo_common_out(NLW_inst_drpdo_common_out_UNCONNECTED[15:0]),
        .drpdo_out(drpdo_out),
        .drpen_common_in(1'b0),
        .drpen_in(drpen_in),
        .drprdy_common_out(NLW_inst_drprdy_common_out_UNCONNECTED[0]),
        .drprdy_out(drprdy_out),
        .drprst_in(1'b0),
        .drpwe_common_in(1'b0),
        .drpwe_in(drpwe_in),
        .elpcaldvorwren_in(1'b0),
        .elpcalpaorwren_in(1'b0),
        .evoddphicaldone_in(1'b0),
        .evoddphicalstart_in(1'b0),
        .evoddphidrden_in(1'b0),
        .evoddphidwren_in(1'b0),
        .evoddphixrden_in(1'b0),
        .evoddphixwren_in(1'b0),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanmode_in(1'b0),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .freqos_in(1'b0),
        .gtgrefclk0_in(1'b0),
        .gtgrefclk1_in(1'b0),
        .gtgrefclk_in(1'b0),
        .gthrxn_in(1'b0),
        .gthrxp_in(1'b0),
        .gthtxn_out(NLW_inst_gthtxn_out_UNCONNECTED[0]),
        .gthtxp_out(NLW_inst_gthtxp_out_UNCONNECTED[0]),
        .gtnorthrefclk00_in(1'b0),
        .gtnorthrefclk01_in(1'b0),
        .gtnorthrefclk0_in(1'b0),
        .gtnorthrefclk10_in(1'b0),
        .gtnorthrefclk11_in(1'b0),
        .gtnorthrefclk1_in(1'b0),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk00_in(1'b0),
        .gtrefclk01_in(1'b0),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk10_in(1'b0),
        .gtrefclk11_in(1'b0),
        .gtrefclk1_in(1'b0),
        .gtrefclkmonitor_out(NLW_inst_gtrefclkmonitor_out_UNCONNECTED[0]),
        .gtresetsel_in(1'b0),
        .gtrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrxreset_in(1'b0),
        .gtrxresetsel_in(1'b0),
        .gtsouthrefclk00_in(1'b0),
        .gtsouthrefclk01_in(1'b0),
        .gtsouthrefclk0_in(1'b0),
        .gtsouthrefclk10_in(1'b0),
        .gtsouthrefclk11_in(1'b0),
        .gtsouthrefclk1_in(1'b0),
        .gttxreset_in(1'b0),
        .gttxresetsel_in(1'b0),
        .gtwiz_buffbypass_rx_done_out(NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_error_out(NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_reset_in(1'b0),
        .gtwiz_buffbypass_rx_start_user_in(1'b0),
        .gtwiz_buffbypass_tx_done_out(NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_error_out(NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_reset_in(1'b0),
        .gtwiz_buffbypass_tx_start_user_in(1'b0),
        .gtwiz_gthe3_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gthe3_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gthe4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_bufg_ce_in(1'b0),
        .gtwiz_gtye4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_qpll1lock_in(1'b0),
        .gtwiz_reset_qpll1reset_out(NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_in(1'b0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_rx_active_out(NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_reset_in(1'b0),
        .gtwiz_userclk_rx_srcclk_out(NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk2_out(NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk_out(NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userclk_tx_active_out(NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_reset_in(1'b0),
        .gtwiz_userclk_tx_srcclk_out(NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk2_out(NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk_out(NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .incpctrl_in(1'b0),
        .loopback_in(loopback_in),
        .looprsvd_in(1'b0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lpbkrxtxseren_in(1'b0),
        .lpbktxrxseren_in(1'b0),
        .pcieeqrxeqadaptdone_in(1'b0),
        .pcierategen3_out(NLW_inst_pcierategen3_out_UNCONNECTED[0]),
        .pcierateidle_out(NLW_inst_pcierateidle_out_UNCONNECTED[0]),
        .pcierateqpll0_in({1'b0,1'b0,1'b0}),
        .pcierateqpll1_in({1'b0,1'b0,1'b0}),
        .pcierateqpllpd_out(NLW_inst_pcierateqpllpd_out_UNCONNECTED[1:0]),
        .pcierateqpllreset_out(NLW_inst_pcierateqpllreset_out_UNCONNECTED[1:0]),
        .pcierstidle_in(1'b0),
        .pciersttxsyncstart_in(1'b0),
        .pciesynctxsyncdone_out(NLW_inst_pciesynctxsyncdone_out_UNCONNECTED[0]),
        .pcieusergen3rdy_out(NLW_inst_pcieusergen3rdy_out_UNCONNECTED[0]),
        .pcieuserphystatusrst_out(NLW_inst_pcieuserphystatusrst_out_UNCONNECTED[0]),
        .pcieuserratedone_in(1'b0),
        .pcieuserratestart_out(NLW_inst_pcieuserratestart_out_UNCONNECTED[0]),
        .pcsrsvdin2_in(1'b0),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(NLW_inst_pcsrsvdout_out_UNCONNECTED[15:0]),
        .phystatus_out(NLW_inst_phystatus_out_UNCONNECTED[0]),
        .pinrsrvdas_out(NLW_inst_pinrsrvdas_out_UNCONNECTED[15:0]),
        .pmarsvd0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvdin_in(1'b0),
        .pmarsvdout0_out(NLW_inst_pmarsvdout0_out_UNCONNECTED[7:0]),
        .pmarsvdout1_out(NLW_inst_pmarsvdout1_out_UNCONNECTED[7:0]),
        .powerpresent_out(NLW_inst_powerpresent_out_UNCONNECTED[0]),
        .qpll0clk_in(qpll0clk_in),
        .qpll0clkrsvd0_in(1'b0),
        .qpll0clkrsvd1_in(1'b0),
        .qpll0fbclklost_out(NLW_inst_qpll0fbclklost_out_UNCONNECTED[0]),
        .qpll0fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0freqlock_in(1'b0),
        .qpll0lock_out(NLW_inst_qpll0lock_out_UNCONNECTED[0]),
        .qpll0lockdetclk_in(1'b0),
        .qpll0locken_in(1'b1),
        .qpll0outclk_out(NLW_inst_qpll0outclk_out_UNCONNECTED[0]),
        .qpll0outrefclk_out(NLW_inst_qpll0outrefclk_out_UNCONNECTED[0]),
        .qpll0pd_in(1'b0),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll0refclklost_out(NLW_inst_qpll0refclklost_out_UNCONNECTED[0]),
        .qpll0refclksel_in({1'b0,1'b0,1'b1}),
        .qpll0reset_in(1'b0),
        .qpll1clk_in(qpll1clk_in),
        .qpll1clkrsvd0_in(1'b0),
        .qpll1clkrsvd1_in(1'b0),
        .qpll1fbclklost_out(NLW_inst_qpll1fbclklost_out_UNCONNECTED[0]),
        .qpll1fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll1freqlock_in(1'b0),
        .qpll1lock_out(NLW_inst_qpll1lock_out_UNCONNECTED[0]),
        .qpll1lockdetclk_in(1'b0),
        .qpll1locken_in(1'b0),
        .qpll1outclk_out(NLW_inst_qpll1outclk_out_UNCONNECTED[0]),
        .qpll1outrefclk_out(NLW_inst_qpll1outrefclk_out_UNCONNECTED[0]),
        .qpll1pd_in(1'b1),
        .qpll1refclk_in(qpll1refclk_in),
        .qpll1refclklost_out(NLW_inst_qpll1refclklost_out_UNCONNECTED[0]),
        .qpll1refclksel_in({1'b0,1'b0,1'b1}),
        .qpll1reset_in(1'b1),
        .qplldmonitor0_out(NLW_inst_qplldmonitor0_out_UNCONNECTED[7:0]),
        .qplldmonitor1_out(NLW_inst_qplldmonitor1_out_UNCONNECTED[7:0]),
        .qpllrsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd2_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd3_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd4_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rcalenb_in(1'b1),
        .refclkoutmonitor0_out(NLW_inst_refclkoutmonitor0_out_UNCONNECTED[0]),
        .refclkoutmonitor1_out(NLW_inst_refclkoutmonitor1_out_UNCONNECTED[0]),
        .resetexception_out(NLW_inst_resetexception_out_UNCONNECTED[0]),
        .resetovrd_in(1'b0),
        .rstclkentx_in(1'b0),
        .rx8b10ben_in(1'b0),
        .rxafecfoken_in(1'b1),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(NLW_inst_rxbyteisaligned_out_UNCONNECTED[0]),
        .rxbyterealign_out(NLW_inst_rxbyterealign_out_UNCONNECTED[0]),
        .rxcdrfreqreset_in(1'b0),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(NLW_inst_rxcdrlock_out_UNCONNECTED[0]),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(NLW_inst_rxcdrphdone_out_UNCONNECTED[0]),
        .rxcdrreset_in(1'b0),
        .rxcdrresetrsv_in(1'b0),
        .rxchanbondseq_out(NLW_inst_rxchanbondseq_out_UNCONNECTED[0]),
        .rxchanisaligned_out(NLW_inst_rxchanisaligned_out_UNCONNECTED[0]),
        .rxchanrealign_out(NLW_inst_rxchanrealign_out_UNCONNECTED[0]),
        .rxchbonden_in(1'b0),
        .rxchbondi_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondlevel_in({1'b0,1'b0,1'b0}),
        .rxchbondmaster_in(1'b0),
        .rxchbondo_out(NLW_inst_rxchbondo_out_UNCONNECTED[4:0]),
        .rxchbondslave_in(1'b0),
        .rxckcaldone_out(NLW_inst_rxckcaldone_out_UNCONNECTED[0]),
        .rxckcalreset_in(1'b0),
        .rxckcalstart_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxclkcorcnt_out(NLW_inst_rxclkcorcnt_out_UNCONNECTED[1:0]),
        .rxcominitdet_out(NLW_inst_rxcominitdet_out_UNCONNECTED[0]),
        .rxcommadet_out(NLW_inst_rxcommadet_out_UNCONNECTED[0]),
        .rxcommadeten_in(1'b0),
        .rxcomsasdet_out(NLW_inst_rxcomsasdet_out_UNCONNECTED[0]),
        .rxcomwakedet_out(NLW_inst_rxcomwakedet_out_UNCONNECTED[0]),
        .rxctrl0_out(NLW_inst_rxctrl0_out_UNCONNECTED[15:0]),
        .rxctrl1_out(NLW_inst_rxctrl1_out_UNCONNECTED[15:0]),
        .rxctrl2_out(NLW_inst_rxctrl2_out_UNCONNECTED[7:0]),
        .rxctrl3_out(NLW_inst_rxctrl3_out_UNCONNECTED[7:0]),
        .rxdata_out(NLW_inst_rxdata_out_UNCONNECTED[127:0]),
        .rxdataextendrsvd_out(NLW_inst_rxdataextendrsvd_out_UNCONNECTED[7:0]),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdccforcestart_in(1'b0),
        .rxdfeagcctrl_in(1'b0),
        .rxdfeagchold_in(1'b0),
        .rxdfeagcovrden_in(1'b0),
        .rxdfecfokfcnum_in({1'b1,1'b1,1'b0,1'b1}),
        .rxdfecfokfen_in(1'b0),
        .rxdfecfokfpulse_in(1'b0),
        .rxdfecfokhold_in(1'b0),
        .rxdfecfokovren_in(1'b0),
        .rxdfekhhold_in(1'b0),
        .rxdfekhovrden_in(1'b0),
        .rxdfelfhold_in(1'b0),
        .rxdfelfovrden_in(1'b0),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxdfetap10hold_in(1'b0),
        .rxdfetap10ovrden_in(1'b0),
        .rxdfetap11hold_in(1'b0),
        .rxdfetap11ovrden_in(1'b0),
        .rxdfetap12hold_in(1'b0),
        .rxdfetap12ovrden_in(1'b0),
        .rxdfetap13hold_in(1'b0),
        .rxdfetap13ovrden_in(1'b0),
        .rxdfetap14hold_in(1'b0),
        .rxdfetap14ovrden_in(1'b0),
        .rxdfetap15hold_in(1'b0),
        .rxdfetap15ovrden_in(1'b0),
        .rxdfetap2hold_in(1'b0),
        .rxdfetap2ovrden_in(1'b0),
        .rxdfetap3hold_in(1'b0),
        .rxdfetap3ovrden_in(1'b0),
        .rxdfetap4hold_in(1'b0),
        .rxdfetap4ovrden_in(1'b0),
        .rxdfetap5hold_in(1'b0),
        .rxdfetap5ovrden_in(1'b0),
        .rxdfetap6hold_in(1'b0),
        .rxdfetap6ovrden_in(1'b0),
        .rxdfetap7hold_in(1'b0),
        .rxdfetap7ovrden_in(1'b0),
        .rxdfetap8hold_in(1'b0),
        .rxdfetap8ovrden_in(1'b0),
        .rxdfetap9hold_in(1'b0),
        .rxdfetap9ovrden_in(1'b0),
        .rxdfeuthold_in(1'b0),
        .rxdfeutovrden_in(1'b0),
        .rxdfevphold_in(1'b0),
        .rxdfevpovrden_in(1'b0),
        .rxdfevsen_in(1'b0),
        .rxdfexyden_in(1'b1),
        .rxdlybypass_in(1'b1),
        .rxdlyen_in(1'b0),
        .rxdlyovrden_in(1'b0),
        .rxdlysreset_in(1'b0),
        .rxdlysresetdone_out(NLW_inst_rxdlysresetdone_out_UNCONNECTED[0]),
        .rxelecidle_out(NLW_inst_rxelecidle_out_UNCONNECTED[0]),
        .rxelecidlemode_in({1'b1,1'b1}),
        .rxeqtraining_in(1'b0),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(1'b0),
        .rxlfpstresetdet_out(NLW_inst_rxlfpstresetdet_out_UNCONNECTED[0]),
        .rxlfpsu2lpexitdet_out(NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED[0]),
        .rxlfpsu3wakedet_out(NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED[0]),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in(1'b0),
        .rxlpmgcovrden_in(1'b0),
        .rxlpmhfhold_in(1'b0),
        .rxlpmhfovrden_in(1'b0),
        .rxlpmlfhold_in(1'b0),
        .rxlpmlfklovrden_in(1'b0),
        .rxlpmoshold_in(1'b0),
        .rxlpmosovrden_in(1'b0),
        .rxmcommaalignen_in(1'b0),
        .rxmonitorout_out(NLW_inst_rxmonitorout_out_UNCONNECTED[7:0]),
        .rxmonitorsel_in({1'b0,1'b0}),
        .rxoobreset_in(1'b0),
        .rxoscalreset_in(1'b0),
        .rxoshold_in(1'b0),
        .rxosintcfg_in(1'b0),
        .rxosintdone_out(NLW_inst_rxosintdone_out_UNCONNECTED[0]),
        .rxosinten_in(1'b0),
        .rxosinthold_in(1'b0),
        .rxosintovrden_in(1'b0),
        .rxosintstarted_out(NLW_inst_rxosintstarted_out_UNCONNECTED[0]),
        .rxosintstrobe_in(1'b0),
        .rxosintstrobedone_out(NLW_inst_rxosintstrobedone_out_UNCONNECTED[0]),
        .rxosintstrobestarted_out(NLW_inst_rxosintstrobestarted_out_UNCONNECTED[0]),
        .rxosinttestovrden_in(1'b0),
        .rxosovrden_in(1'b0),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(NLW_inst_rxoutclkfabric_out_UNCONNECTED[0]),
        .rxoutclkpcs_out(NLW_inst_rxoutclkpcs_out_UNCONNECTED[0]),
        .rxoutclksel_in({1'b0,1'b1,1'b0}),
        .rxpcommaalignen_in(1'b0),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in({1'b0,1'b0}),
        .rxphalign_in(1'b0),
        .rxphaligndone_out(NLW_inst_rxphaligndone_out_UNCONNECTED[0]),
        .rxphalignen_in(1'b0),
        .rxphalignerr_out(NLW_inst_rxphalignerr_out_UNCONNECTED[0]),
        .rxphdlypd_in(1'b1),
        .rxphdlyreset_in(1'b0),
        .rxphovrden_in(1'b0),
        .rxpllclksel_in({1'b1,1'b1}),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(NLW_inst_rxprbslocked_out_UNCONNECTED[0]),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(NLW_inst_rxprgdivresetdone_out_UNCONNECTED[0]),
        .rxprogdivreset_in(1'b0),
        .rxqpien_in(1'b0),
        .rxqpisenn_out(NLW_inst_rxqpisenn_out_UNCONNECTED[0]),
        .rxqpisenp_out(NLW_inst_rxqpisenp_out_UNCONNECTED[0]),
        .rxrate_in({1'b0,1'b0,1'b0}),
        .rxratedone_out(NLW_inst_rxratedone_out_UNCONNECTED[0]),
        .rxratemode_in(1'b0),
        .rxrecclk0_sel_out(NLW_inst_rxrecclk0_sel_out_UNCONNECTED[0]),
        .rxrecclk0sel_out(NLW_inst_rxrecclk0sel_out_UNCONNECTED[1:0]),
        .rxrecclk1_sel_out(NLW_inst_rxrecclk1_sel_out_UNCONNECTED[0]),
        .rxrecclk1sel_out(NLW_inst_rxrecclk1sel_out_UNCONNECTED[1:0]),
        .rxrecclkout_out(NLW_inst_rxrecclkout_out_UNCONNECTED[0]),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(1'b0),
        .rxsliderdy_out(NLW_inst_rxsliderdy_out_UNCONNECTED[0]),
        .rxslipdone_out(NLW_inst_rxslipdone_out_UNCONNECTED[0]),
        .rxslipoutclk_in(1'b0),
        .rxslipoutclkrdy_out(NLW_inst_rxslipoutclkrdy_out_UNCONNECTED[0]),
        .rxslippma_in(1'b0),
        .rxslippmardy_out(NLW_inst_rxslippmardy_out_UNCONNECTED[0]),
        .rxstartofseq_out(rxstartofseq_out),
        .rxstatus_out(NLW_inst_rxstatus_out_UNCONNECTED[2:0]),
        .rxsyncallin_in(1'b0),
        .rxsyncdone_out(NLW_inst_rxsyncdone_out_UNCONNECTED[0]),
        .rxsyncin_in(1'b0),
        .rxsyncmode_in(1'b0),
        .rxsyncout_out(NLW_inst_rxsyncout_out_UNCONNECTED[0]),
        .rxsysclksel_in({1'b1,1'b0}),
        .rxtermination_in(1'b0),
        .rxuserrdy_in(1'b1),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(NLW_inst_rxvalid_out_UNCONNECTED[0]),
        .sdm0data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm0finalout_out(NLW_inst_sdm0finalout_out_UNCONNECTED[3:0]),
        .sdm0reset_in(1'b0),
        .sdm0testdata_out(NLW_inst_sdm0testdata_out_UNCONNECTED[14:0]),
        .sdm0toggle_in(1'b0),
        .sdm0width_in({1'b0,1'b0}),
        .sdm1data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm1finalout_out(NLW_inst_sdm1finalout_out_UNCONNECTED[3:0]),
        .sdm1reset_in(1'b0),
        .sdm1testdata_out(NLW_inst_sdm1testdata_out_UNCONNECTED[14:0]),
        .sdm1toggle_in(1'b0),
        .sdm1width_in({1'b0,1'b0}),
        .sigvalidclk_in(1'b0),
        .tcongpi_in(1'b0),
        .tcongpo_out(NLW_inst_tcongpo_out_UNCONNECTED[0]),
        .tconpowerup_in(1'b0),
        .tconreset_in(1'b0),
        .tconrsvdin1_in(1'b0),
        .tconrsvdout0_out(NLW_inst_tconrsvdout0_out_UNCONNECTED[0]),
        .tstin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10bbypass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10ben_in(1'b0),
        .txbufdiffctrl_in(1'b0),
        .txbufstatus_out(txbufstatus_out),
        .txcomfinish_out(NLW_inst_txcomfinish_out_UNCONNECTED[0]),
        .txcominit_in(1'b0),
        .txcomsas_in(1'b0),
        .txcomwake_in(1'b0),
        .txctrl0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdata_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdataextendrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdccdone_out(NLW_inst_txdccdone_out_UNCONNECTED[0]),
        .txdccforcestart_in(1'b0),
        .txdccreset_in(1'b0),
        .txdeemph_in({1'b0,1'b0}),
        .txdetectrx_in(1'b0),
        .txdiffctrl_in(txdiffctrl_in),
        .txdiffpd_in(1'b0),
        .txdlybypass_in(1'b1),
        .txdlyen_in(1'b0),
        .txdlyhold_in(1'b0),
        .txdlyovrden_in(1'b0),
        .txdlysreset_in(1'b0),
        .txdlysresetdone_out(NLW_inst_txdlysresetdone_out_UNCONNECTED[0]),
        .txdlyupdown_in(1'b0),
        .txelecidle_in(1'b0),
        .txelforcestart_in(1'b0),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(1'b0),
        .txlfpstreset_in(1'b0),
        .txlfpsu2lpexit_in(1'b0),
        .txlfpsu3wake_in(1'b0),
        .txmaincursor_in({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .txmargin_in({1'b0,1'b0,1'b0}),
        .txmuxdcdexhold_in(1'b0),
        .txmuxdcdorwren_in(1'b0),
        .txoneszeros_in(1'b0),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(txoutclkfabric_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txoutclksel_in({1'b0,1'b1,1'b0}),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in({1'b0,1'b0}),
        .txpdelecidlemode_in(1'b0),
        .txphalign_in(1'b0),
        .txphaligndone_out(NLW_inst_txphaligndone_out_UNCONNECTED[0]),
        .txphalignen_in(1'b0),
        .txphdlypd_in(1'b1),
        .txphdlyreset_in(1'b0),
        .txphdlytstclk_in(1'b0),
        .txphinit_in(1'b0),
        .txphinitdone_out(NLW_inst_txphinitdone_out_UNCONNECTED[0]),
        .txphovrden_in(1'b0),
        .txpippmen_in(1'b0),
        .txpippmovrden_in(1'b0),
        .txpippmpd_in(1'b0),
        .txpippmsel_in(1'b1),
        .txpippmstepsize_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpisopd_in(1'b0),
        .txpllclksel_in({1'b1,1'b1}),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txpostcursorinv_in(1'b0),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprecursorinv_in(1'b0),
        .txprgdivresetdone_out(NLW_inst_txprgdivresetdone_out_UNCONNECTED[0]),
        .txprogdivreset_in(1'b0),
        .txqpibiasen_in(1'b0),
        .txqpisenn_out(NLW_inst_txqpisenn_out_UNCONNECTED[0]),
        .txqpisenp_out(NLW_inst_txqpisenp_out_UNCONNECTED[0]),
        .txqpistrongpdown_in(1'b0),
        .txqpiweakpup_in(1'b0),
        .txrate_in({1'b0,1'b0,1'b0}),
        .txratedone_out(NLW_inst_txratedone_out_UNCONNECTED[0]),
        .txratemode_in(1'b0),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txswing_in(1'b0),
        .txsyncallin_in(1'b0),
        .txsyncdone_out(NLW_inst_txsyncdone_out_UNCONNECTED[0]),
        .txsyncin_in(1'b0),
        .txsyncmode_in(1'b0),
        .txsyncout_out(NLW_inst_txsyncout_out_UNCONNECTED[0]),
        .txsysclksel_in({1'b1,1'b0}),
        .txuserrdy_in(1'b1),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in),
        .ubcfgstreamen_in(1'b0),
        .ubdaddr_out(NLW_inst_ubdaddr_out_UNCONNECTED[15:0]),
        .ubden_out(NLW_inst_ubden_out_UNCONNECTED[0]),
        .ubdi_out(NLW_inst_ubdi_out_UNCONNECTED[15:0]),
        .ubdo_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ubdrdy_in(1'b0),
        .ubdwe_out(NLW_inst_ubdwe_out_UNCONNECTED[0]),
        .ubenable_in(1'b0),
        .ubgpi_in({1'b0,1'b0}),
        .ubintr_in({1'b0,1'b0}),
        .ubiolmbrst_in(1'b0),
        .ubmbrst_in(1'b0),
        .ubmdmcapture_in(1'b0),
        .ubmdmdbgrst_in(1'b0),
        .ubmdmdbgupdate_in(1'b0),
        .ubmdmregen_in({1'b0,1'b0,1'b0,1'b0}),
        .ubmdmshift_in(1'b0),
        .ubmdmsysrst_in(1'b0),
        .ubmdmtck_in(1'b0),
        .ubmdmtdi_in(1'b0),
        .ubmdmtdo_out(NLW_inst_ubmdmtdo_out_UNCONNECTED[0]),
        .ubrsvdout_out(NLW_inst_ubrsvdout_out_UNCONNECTED[0]),
        .ubtxuart_out(NLW_inst_ubtxuart_out_UNCONNECTED[0]));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_gt_gtwizard_gtye4" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt_gtwizard_gtye4
   (gtpowergood_out,
    txoutclkpcs_out,
    rxcdrlock_out,
    gtwiz_reset_rx_cdr_stable_out,
    bufgtce_out,
    bufgtreset_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitoroutclk_out,
    drprdy_out,
    eyescandataerror_out,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    powerpresent_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxckcaldone_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    rxdata_out,
    dmonitorout_out,
    drpdo_out,
    pcsrsvdout_out,
    pinrsrvdas_out,
    rxctrl0_out,
    rxctrl1_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtcemask_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    rxmonitorout_out,
    bufgtdiv_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    txrate_in,
    txratemode_in,
    txpisopd_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxresetsel_in,
    gtyrxn_in,
    gtyrxp_in,
    incpctrl_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxtermination_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdccforcestart_in,
    txdccreset_in,
    txdetectrx_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpolarity_in,
    txprbsforceerr_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txusrclk_in,
    txusrclk2_in,
    gtwiz_userdata_tx_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    tstin_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txdeemph_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txmargin_in,
    txoutclksel_in,
    rxdfecfokfcnum_in,
    rxprbssel_in,
    txprbssel_in,
    rxchbondi_in,
    txdiffctrl_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    rxckcalstart_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    txpmareset_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [0:0]gtpowergood_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]rxcdrlock_out;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]bufgtce_out;
  output [0:0]bufgtreset_out;
  output [0:0]cpllfbclklost_out;
  output [0:0]cplllock_out;
  output [0:0]cpllrefclklost_out;
  output [0:0]dmonitoroutclk_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gtrefclkmonitor_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]pcierategen3_out;
  output [0:0]pcierateidle_out;
  output [0:0]pciesynctxsyncdone_out;
  output [0:0]pcieusergen3rdy_out;
  output [0:0]pcieuserphystatusrst_out;
  output [0:0]pcieuserratestart_out;
  output [0:0]phystatus_out;
  output [0:0]powerpresent_out;
  output [0:0]resetexception_out;
  output [0:0]rxbyteisaligned_out;
  output [0:0]rxbyterealign_out;
  output [0:0]rxcdrphdone_out;
  output [0:0]rxchanbondseq_out;
  output [0:0]rxchanisaligned_out;
  output [0:0]rxchanrealign_out;
  output [0:0]rxckcaldone_out;
  output [0:0]rxcominitdet_out;
  output [0:0]rxcommadet_out;
  output [0:0]rxcomsasdet_out;
  output [0:0]rxcomwakedet_out;
  output [0:0]rxdlysresetdone_out;
  output [0:0]rxelecidle_out;
  output [0:0]rxlfpstresetdet_out;
  output [0:0]rxlfpsu2lpexitdet_out;
  output [0:0]rxlfpsu3wakedet_out;
  output [0:0]rxosintdone_out;
  output [0:0]rxosintstarted_out;
  output [0:0]rxosintstrobedone_out;
  output [0:0]rxosintstrobestarted_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkfabric_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]rxphalignerr_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxratedone_out;
  output [0:0]rxrecclkout_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsliderdy_out;
  output [0:0]rxslipdone_out;
  output [0:0]rxslipoutclkrdy_out;
  output [0:0]rxslippmardy_out;
  output [0:0]rxsyncdone_out;
  output [0:0]rxsyncout_out;
  output [0:0]rxvalid_out;
  output [0:0]txcomfinish_out;
  output [0:0]txdccdone_out;
  output [0:0]txdlysresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txphaligndone_out;
  output [0:0]txphinitdone_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txratedone_out;
  output [0:0]txresetdone_out;
  output [0:0]txsyncdone_out;
  output [0:0]txsyncout_out;
  output [127:0]rxdata_out;
  output [15:0]dmonitorout_out;
  output [15:0]drpdo_out;
  output [15:0]pcsrsvdout_out;
  output [15:0]pinrsrvdas_out;
  output [15:0]rxctrl0_out;
  output [15:0]rxctrl1_out;
  output [1:0]pcierateqpllpd_out;
  output [1:0]pcierateqpllreset_out;
  output [1:0]rxclkcorcnt_out;
  output [1:0]rxdatavalid_out;
  output [1:0]rxheadervalid_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [2:0]bufgtcemask_out;
  output [2:0]bufgtrstmask_out;
  output [2:0]rxbufstatus_out;
  output [2:0]rxstatus_out;
  output [4:0]rxchbondo_out;
  output [5:0]rxheader_out;
  output [7:0]rxctrl2_out;
  output [7:0]rxctrl3_out;
  output [7:0]rxdataextendrsvd_out;
  output [7:0]rxmonitorout_out;
  output [8:0]bufgtdiv_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [2:0]txrate_in;
  input [0:0]txratemode_in;
  input [0:0]txpisopd_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]cdrstepdir_in;
  input [0:0]cdrstepsq_in;
  input [0:0]cdrstepsx_in;
  input [0:0]cfgreset_in;
  input [0:0]clkrsvd0_in;
  input [0:0]clkrsvd1_in;
  input [0:0]cpllfreqlock_in;
  input [0:0]cplllockdetclk_in;
  input [0:0]cplllocken_in;
  input [0:0]cpllpd_in;
  input [0:0]cpllreset_in;
  input [0:0]dmonfiforeset_in;
  input [0:0]dmonitorclk_in;
  input [0:0]drpclk_in;
  input [0:0]drpen_in;
  input [0:0]drprst_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]freqos_in;
  input [0:0]gtgrefclk_in;
  input [0:0]gtnorthrefclk0_in;
  input [0:0]gtnorthrefclk1_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtrefclk1_in;
  input [0:0]gtrxresetsel_in;
  input [0:0]gtsouthrefclk0_in;
  input [0:0]gtsouthrefclk1_in;
  input [0:0]gttxresetsel_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [0:0]incpctrl_in;
  input [0:0]pcieeqrxeqadaptdone_in;
  input [0:0]pcierstidle_in;
  input [0:0]pciersttxsyncstart_in;
  input [0:0]pcieuserratedone_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0freqlock_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1freqlock_in;
  input [0:0]qpll1refclk_in;
  input [0:0]resetovrd_in;
  input [0:0]rx8b10ben_in;
  input [0:0]rxafecfoken_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrfreqreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxcdrreset_in;
  input [0:0]rxchbonden_in;
  input [0:0]rxchbondmaster_in;
  input [0:0]rxchbondslave_in;
  input [0:0]rxckcalreset_in;
  input [0:0]rxcommadeten_in;
  input [0:0]rxdfeagchold_in;
  input [0:0]rxdfeagcovrden_in;
  input [0:0]rxdfecfokfen_in;
  input [0:0]rxdfecfokfpulse_in;
  input [0:0]rxdfecfokhold_in;
  input [0:0]rxdfecfokovren_in;
  input [0:0]rxdfekhhold_in;
  input [0:0]rxdfekhovrden_in;
  input [0:0]rxdfelfhold_in;
  input [0:0]rxdfelfovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxdfetap10hold_in;
  input [0:0]rxdfetap10ovrden_in;
  input [0:0]rxdfetap11hold_in;
  input [0:0]rxdfetap11ovrden_in;
  input [0:0]rxdfetap12hold_in;
  input [0:0]rxdfetap12ovrden_in;
  input [0:0]rxdfetap13hold_in;
  input [0:0]rxdfetap13ovrden_in;
  input [0:0]rxdfetap14hold_in;
  input [0:0]rxdfetap14ovrden_in;
  input [0:0]rxdfetap15hold_in;
  input [0:0]rxdfetap15ovrden_in;
  input [0:0]rxdfetap2hold_in;
  input [0:0]rxdfetap2ovrden_in;
  input [0:0]rxdfetap3hold_in;
  input [0:0]rxdfetap3ovrden_in;
  input [0:0]rxdfetap4hold_in;
  input [0:0]rxdfetap4ovrden_in;
  input [0:0]rxdfetap5hold_in;
  input [0:0]rxdfetap5ovrden_in;
  input [0:0]rxdfetap6hold_in;
  input [0:0]rxdfetap6ovrden_in;
  input [0:0]rxdfetap7hold_in;
  input [0:0]rxdfetap7ovrden_in;
  input [0:0]rxdfetap8hold_in;
  input [0:0]rxdfetap8ovrden_in;
  input [0:0]rxdfetap9hold_in;
  input [0:0]rxdfetap9ovrden_in;
  input [0:0]rxdfeuthold_in;
  input [0:0]rxdfeutovrden_in;
  input [0:0]rxdfevphold_in;
  input [0:0]rxdfevpovrden_in;
  input [0:0]rxdfexyden_in;
  input [0:0]rxdlybypass_in;
  input [0:0]rxdlyen_in;
  input [0:0]rxdlyovrden_in;
  input [0:0]rxdlysreset_in;
  input [0:0]rxeqtraining_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxlpmgchold_in;
  input [0:0]rxlpmgcovrden_in;
  input [0:0]rxlpmhfhold_in;
  input [0:0]rxlpmhfovrden_in;
  input [0:0]rxlpmlfhold_in;
  input [0:0]rxlpmlfklovrden_in;
  input [0:0]rxlpmoshold_in;
  input [0:0]rxlpmosovrden_in;
  input [0:0]rxmcommaalignen_in;
  input [0:0]rxoobreset_in;
  input [0:0]rxoscalreset_in;
  input [0:0]rxoshold_in;
  input [0:0]rxosovrden_in;
  input [0:0]rxpcommaalignen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxphalign_in;
  input [0:0]rxphalignen_in;
  input [0:0]rxphdlypd_in;
  input [0:0]rxphdlyreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [0:0]rxratemode_in;
  input [0:0]rxslide_in;
  input [0:0]rxslipoutclk_in;
  input [0:0]rxslippma_in;
  input [0:0]rxsyncallin_in;
  input [0:0]rxsyncin_in;
  input [0:0]rxsyncmode_in;
  input [0:0]rxtermination_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]sigvalidclk_in;
  input [0:0]tx8b10ben_in;
  input [0:0]txcominit_in;
  input [0:0]txcomsas_in;
  input [0:0]txcomwake_in;
  input [0:0]txdccforcestart_in;
  input [0:0]txdccreset_in;
  input [0:0]txdetectrx_in;
  input [0:0]txdlybypass_in;
  input [0:0]txdlyen_in;
  input [0:0]txdlyhold_in;
  input [0:0]txdlyovrden_in;
  input [0:0]txdlysreset_in;
  input [0:0]txdlyupdown_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txlfpstreset_in;
  input [0:0]txlfpsu2lpexit_in;
  input [0:0]txlfpsu3wake_in;
  input [0:0]txmuxdcdexhold_in;
  input [0:0]txmuxdcdorwren_in;
  input [0:0]txoneszeros_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txphalign_in;
  input [0:0]txphalignen_in;
  input [0:0]txphdlypd_in;
  input [0:0]txphdlyreset_in;
  input [0:0]txphdlytstclk_in;
  input [0:0]txphinit_in;
  input [0:0]txphovrden_in;
  input [0:0]txpippmen_in;
  input [0:0]txpippmovrden_in;
  input [0:0]txpippmpd_in;
  input [0:0]txpippmsel_in;
  input [0:0]txpolarity_in;
  input [0:0]txprbsforceerr_in;
  input [0:0]txswing_in;
  input [0:0]txsyncallin_in;
  input [0:0]txsyncin_in;
  input [0:0]txsyncmode_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [63:0]gtwiz_userdata_tx_in;
  input [15:0]drpdi_in;
  input [15:0]gtrsvd_in;
  input [15:0]pcsrsvdin_in;
  input [15:0]txctrl0_in;
  input [15:0]txctrl1_in;
  input [19:0]tstin_in;
  input [1:0]rxelecidlemode_in;
  input [1:0]rxmonitorsel_in;
  input [1:0]rxpd_in;
  input [1:0]rxpllclksel_in;
  input [1:0]rxsysclksel_in;
  input [1:0]txdeemph_in;
  input [1:0]txpd_in;
  input [1:0]txpllclksel_in;
  input [1:0]txsysclksel_in;
  input [2:0]cpllrefclksel_in;
  input [2:0]loopback_in;
  input [2:0]rxchbondlevel_in;
  input [2:0]rxoutclksel_in;
  input [2:0]rxrate_in;
  input [2:0]txmargin_in;
  input [2:0]txoutclksel_in;
  input [3:0]rxdfecfokfcnum_in;
  input [3:0]rxprbssel_in;
  input [3:0]txprbssel_in;
  input [4:0]rxchbondi_in;
  input [4:0]txdiffctrl_in;
  input [4:0]txpippmstepsize_in;
  input [4:0]txpostcursor_in;
  input [4:0]txprecursor_in;
  input [5:0]txheader_in;
  input [6:0]rxckcalstart_in;
  input [6:0]txmaincursor_in;
  input [6:0]txsequence_in;
  input [7:0]tx8b10bbypass_in;
  input [7:0]txctrl2_in;
  input [7:0]txdataextendrsvd_in;
  input [9:0]drpaddr_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]txpmareset_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [0:0]bufgtce_out;
  wire [2:0]bufgtcemask_out;
  wire [8:0]bufgtdiv_out;
  wire [0:0]bufgtreset_out;
  wire [2:0]bufgtrstmask_out;
  wire [0:0]cdrstepdir_in;
  wire [0:0]cdrstepsq_in;
  wire [0:0]cdrstepsx_in;
  wire [0:0]cfgreset_in;
  wire [0:0]clkrsvd0_in;
  wire [0:0]clkrsvd1_in;
  wire [0:0]cpllfbclklost_out;
  wire [0:0]cpllfreqlock_in;
  wire [0:0]cplllock_out;
  wire [0:0]cplllockdetclk_in;
  wire [0:0]cplllocken_in;
  wire [0:0]cpllpd_in;
  wire [0:0]cpllrefclklost_out;
  wire [2:0]cpllrefclksel_in;
  wire [0:0]cpllreset_in;
  wire [0:0]dmonfiforeset_in;
  wire [0:0]dmonitorclk_in;
  wire [15:0]dmonitorout_out;
  wire [0:0]dmonitoroutclk_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drprst_in;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]freqos_in;
  wire \gen_gtwizard_gtye4.gen_channel_container[24].gen_enabled_channel.gtye4_channel_wrapper_inst_n_377 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[24].gen_enabled_channel.gtye4_channel_wrapper_inst_n_378 ;
  wire \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_3 ;
  wire \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_4 ;
  wire \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_5 ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txpmareset_ch_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_int ;
  wire [2:1]\gen_gtwizard_gtye4.txrate_ch_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire [0:0]gtgrefclk_in;
  wire [0:0]gtnorthrefclk0_in;
  wire [0:0]gtnorthrefclk1_in;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtrefclk1_in;
  wire [0:0]gtrefclkmonitor_out;
  wire [15:0]gtrsvd_in;
  wire [0:0]gtrxresetsel_in;
  wire [0:0]gtsouthrefclk0_in;
  wire [0:0]gtsouthrefclk1_in;
  wire [0:0]gttxresetsel_in;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [0:0]incpctrl_in;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [0:0]pcieeqrxeqadaptdone_in;
  wire [0:0]pcierategen3_out;
  wire [0:0]pcierateidle_out;
  wire [1:0]pcierateqpllpd_out;
  wire [1:0]pcierateqpllreset_out;
  wire [0:0]pcierstidle_in;
  wire [0:0]pciersttxsyncstart_in;
  wire [0:0]pciesynctxsyncdone_out;
  wire [0:0]pcieusergen3rdy_out;
  wire [0:0]pcieuserphystatusrst_out;
  wire [0:0]pcieuserratedone_in;
  wire [0:0]pcieuserratestart_out;
  wire [15:0]pcsrsvdin_in;
  wire [15:0]pcsrsvdout_out;
  wire [0:0]phystatus_out;
  wire [15:0]pinrsrvdas_out;
  wire [0:0]powerpresent_out;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0freqlock_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1freqlock_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]resetexception_out;
  wire [0:0]resetovrd_in;
  wire [0:0]rx8b10ben_in;
  wire [0:0]rxafecfoken_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxbyteisaligned_out;
  wire [0:0]rxbyterealign_out;
  wire [0:0]rxcdrfreqreset_in;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]rxcdrphdone_out;
  wire [0:0]rxcdrreset_in;
  wire [0:0]rxchanbondseq_out;
  wire [0:0]rxchanisaligned_out;
  wire [0:0]rxchanrealign_out;
  wire [0:0]rxchbonden_in;
  wire [4:0]rxchbondi_in;
  wire [2:0]rxchbondlevel_in;
  wire [0:0]rxchbondmaster_in;
  wire [4:0]rxchbondo_out;
  wire [0:0]rxchbondslave_in;
  wire [0:0]rxckcaldone_out;
  wire [0:0]rxckcalreset_in;
  wire [6:0]rxckcalstart_in;
  wire [1:0]rxclkcorcnt_out;
  wire [0:0]rxcominitdet_out;
  wire [0:0]rxcommadet_out;
  wire [0:0]rxcommadeten_in;
  wire [0:0]rxcomsasdet_out;
  wire [0:0]rxcomwakedet_out;
  wire [15:0]rxctrl0_out;
  wire [15:0]rxctrl1_out;
  wire [7:0]rxctrl2_out;
  wire [7:0]rxctrl3_out;
  wire [127:0]rxdata_out;
  wire [7:0]rxdataextendrsvd_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfeagchold_in;
  wire [0:0]rxdfeagcovrden_in;
  wire [3:0]rxdfecfokfcnum_in;
  wire [0:0]rxdfecfokfen_in;
  wire [0:0]rxdfecfokfpulse_in;
  wire [0:0]rxdfecfokhold_in;
  wire [0:0]rxdfecfokovren_in;
  wire [0:0]rxdfekhhold_in;
  wire [0:0]rxdfekhovrden_in;
  wire [0:0]rxdfelfhold_in;
  wire [0:0]rxdfelfovrden_in;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxdfetap10hold_in;
  wire [0:0]rxdfetap10ovrden_in;
  wire [0:0]rxdfetap11hold_in;
  wire [0:0]rxdfetap11ovrden_in;
  wire [0:0]rxdfetap12hold_in;
  wire [0:0]rxdfetap12ovrden_in;
  wire [0:0]rxdfetap13hold_in;
  wire [0:0]rxdfetap13ovrden_in;
  wire [0:0]rxdfetap14hold_in;
  wire [0:0]rxdfetap14ovrden_in;
  wire [0:0]rxdfetap15hold_in;
  wire [0:0]rxdfetap15ovrden_in;
  wire [0:0]rxdfetap2hold_in;
  wire [0:0]rxdfetap2ovrden_in;
  wire [0:0]rxdfetap3hold_in;
  wire [0:0]rxdfetap3ovrden_in;
  wire [0:0]rxdfetap4hold_in;
  wire [0:0]rxdfetap4ovrden_in;
  wire [0:0]rxdfetap5hold_in;
  wire [0:0]rxdfetap5ovrden_in;
  wire [0:0]rxdfetap6hold_in;
  wire [0:0]rxdfetap6ovrden_in;
  wire [0:0]rxdfetap7hold_in;
  wire [0:0]rxdfetap7ovrden_in;
  wire [0:0]rxdfetap8hold_in;
  wire [0:0]rxdfetap8ovrden_in;
  wire [0:0]rxdfetap9hold_in;
  wire [0:0]rxdfetap9ovrden_in;
  wire [0:0]rxdfeuthold_in;
  wire [0:0]rxdfeutovrden_in;
  wire [0:0]rxdfevphold_in;
  wire [0:0]rxdfevpovrden_in;
  wire [0:0]rxdfexyden_in;
  wire [0:0]rxdlybypass_in;
  wire [0:0]rxdlyen_in;
  wire [0:0]rxdlyovrden_in;
  wire [0:0]rxdlysreset_in;
  wire [0:0]rxdlysresetdone_out;
  wire [0:0]rxelecidle_out;
  wire [1:0]rxelecidlemode_in;
  wire [0:0]rxeqtraining_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlfpstresetdet_out;
  wire [0:0]rxlfpsu2lpexitdet_out;
  wire [0:0]rxlfpsu3wakedet_out;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxlpmgchold_in;
  wire [0:0]rxlpmgcovrden_in;
  wire [0:0]rxlpmhfhold_in;
  wire [0:0]rxlpmhfovrden_in;
  wire [0:0]rxlpmlfhold_in;
  wire [0:0]rxlpmlfklovrden_in;
  wire [0:0]rxlpmoshold_in;
  wire [0:0]rxlpmosovrden_in;
  wire [0:0]rxmcommaalignen_in;
  wire [7:0]rxmonitorout_out;
  wire [1:0]rxmonitorsel_in;
  wire [0:0]rxoobreset_in;
  wire [0:0]rxoscalreset_in;
  wire [0:0]rxoshold_in;
  wire [0:0]rxosintdone_out;
  wire [0:0]rxosintstarted_out;
  wire [0:0]rxosintstrobedone_out;
  wire [0:0]rxosintstrobestarted_out;
  wire [0:0]rxosovrden_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxoutclkfabric_out;
  wire [0:0]rxoutclkpcs_out;
  wire [2:0]rxoutclksel_in;
  wire [0:0]rxpcommaalignen_in;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxphalign_in;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxphalignen_in;
  wire [0:0]rxphalignerr_out;
  wire [0:0]rxphdlypd_in;
  wire [0:0]rxphdlyreset_in;
  wire [1:0]rxpllclksel_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire [2:0]rxrate_in;
  wire [0:0]rxratedone_out;
  wire [0:0]rxratemode_in;
  wire [0:0]rxrecclkout_out;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxslide_in;
  wire [0:0]rxsliderdy_out;
  wire [0:0]rxslipdone_out;
  wire [0:0]rxslipoutclk_in;
  wire [0:0]rxslipoutclkrdy_out;
  wire [0:0]rxslippma_in;
  wire [0:0]rxslippmardy_out;
  wire [1:0]rxstartofseq_out;
  wire [2:0]rxstatus_out;
  wire [0:0]rxsyncallin_in;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxsyncin_in;
  wire [0:0]rxsyncmode_in;
  wire [0:0]rxsyncout_out;
  wire [1:0]rxsysclksel_in;
  wire [0:0]rxtermination_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [0:0]rxvalid_out;
  wire [0:0]sigvalidclk_in;
  wire [19:0]tstin_in;
  wire [7:0]tx8b10bbypass_in;
  wire [0:0]tx8b10ben_in;
  wire [1:0]txbufstatus_out;
  wire [0:0]txcomfinish_out;
  wire [0:0]txcominit_in;
  wire [0:0]txcomsas_in;
  wire [0:0]txcomwake_in;
  wire [15:0]txctrl0_in;
  wire [15:0]txctrl1_in;
  wire [7:0]txctrl2_in;
  wire [7:0]txdataextendrsvd_in;
  wire [0:0]txdccdone_out;
  wire [0:0]txdccforcestart_in;
  wire [0:0]txdccreset_in;
  wire [1:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [4:0]txdiffctrl_in;
  wire [0:0]txdlybypass_in;
  wire [0:0]txdlyen_in;
  wire [0:0]txdlyhold_in;
  wire [0:0]txdlyovrden_in;
  wire [0:0]txdlysreset_in;
  wire [0:0]txdlysresetdone_out;
  wire [0:0]txdlyupdown_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txlfpstreset_in;
  wire [0:0]txlfpsu2lpexit_in;
  wire [0:0]txlfpsu3wake_in;
  wire [6:0]txmaincursor_in;
  wire [2:0]txmargin_in;
  wire [0:0]txmuxdcdexhold_in;
  wire [0:0]txmuxdcdorwren_in;
  wire [0:0]txoneszeros_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txoutclkfabric_out;
  wire [0:0]txoutclkpcs_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txphalign_in;
  wire [0:0]txphaligndone_out;
  wire [0:0]txphalignen_in;
  wire [0:0]txphdlypd_in;
  wire [0:0]txphdlyreset_in;
  wire [0:0]txphdlytstclk_in;
  wire [0:0]txphinit_in;
  wire [0:0]txphinitdone_out;
  wire [0:0]txphovrden_in;
  wire [0:0]txpippmen_in;
  wire [0:0]txpippmovrden_in;
  wire [0:0]txpippmpd_in;
  wire [0:0]txpippmsel_in;
  wire [4:0]txpippmstepsize_in;
  wire [0:0]txpisopd_in;
  wire [1:0]txpllclksel_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire [2:0]txrate_in;
  wire [0:0]txratedone_out;
  wire [0:0]txratemode_in;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txswing_in;
  wire [0:0]txsyncallin_in;
  wire [0:0]txsyncdone_out;
  wire [0:0]txsyncin_in;
  wire [0:0]txsyncmode_in;
  wire [0:0]txsyncout_out;
  wire [1:0]txsysclksel_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt_gtye4_channel_wrapper \gen_gtwizard_gtye4.gen_channel_container[24].gen_enabled_channel.gtye4_channel_wrapper_inst 
       (.TXRATE({\gen_gtwizard_gtye4.txrate_ch_int ,\gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_3 }),
        .bufgtce_out(bufgtce_out),
        .bufgtcemask_out(bufgtcemask_out),
        .bufgtdiv_out(bufgtdiv_out),
        .bufgtreset_out(bufgtreset_out),
        .bufgtrstmask_out(bufgtrstmask_out),
        .cdrstepdir_in(cdrstepdir_in),
        .cdrstepsq_in(cdrstepsq_in),
        .cdrstepsx_in(cdrstepsx_in),
        .cfgreset_in(cfgreset_in),
        .clkrsvd0_in(clkrsvd0_in),
        .clkrsvd1_in(clkrsvd1_in),
        .cpllfbclklost_out(cpllfbclklost_out),
        .cpllfreqlock_in(cpllfreqlock_in),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in(cplllockdetclk_in),
        .cplllocken_in(cplllocken_in),
        .cpllpd_in(cpllpd_in),
        .cpllrefclklost_out(cpllrefclklost_out),
        .cpllrefclksel_in(cpllrefclksel_in),
        .cpllreset_in(cpllreset_in),
        .dmonfiforeset_in(dmonfiforeset_in),
        .dmonitorclk_in(dmonitorclk_in),
        .dmonitorout_out(dmonitorout_out),
        .dmonitoroutclk_out(dmonitoroutclk_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drprst_in(drprst_in),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .freqos_in(freqos_in),
        .\gen_gtwizard_gtye4.gtpowergood_int (\gen_gtwizard_gtye4.gtpowergood_int ),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .\gen_gtwizard_gtye4.gttxreset_ch_int (\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .\gen_gtwizard_gtye4.txpmareset_ch_int (\gen_gtwizard_gtye4.txpmareset_ch_int ),
        .\gen_gtwizard_gtye4.txprogdivreset_int (\gen_gtwizard_gtye4.txprogdivreset_int ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[0] (\gen_gtwizard_gtye4.gen_channel_container[24].gen_enabled_channel.gtye4_channel_wrapper_inst_n_378 ),
        .\gen_powergood_delay.pwr_on_fsm_reg (\gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_5 ),
        .\gen_powergood_delay.pwr_on_fsm_reg_0 (\gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_4 ),
        .\gen_powergood_delay.wait_cnt_reg[0] (\gen_gtwizard_gtye4.gen_channel_container[24].gen_enabled_channel.gtye4_channel_wrapper_inst_n_377 ),
        .gtgrefclk_in(gtgrefclk_in),
        .gtnorthrefclk0_in(gtnorthrefclk0_in),
        .gtnorthrefclk1_in(gtnorthrefclk1_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk1_in(gtrefclk1_in),
        .gtrefclkmonitor_out(gtrefclkmonitor_out),
        .gtrsvd_in(gtrsvd_in),
        .gtrxresetsel_in(gtrxresetsel_in),
        .gtsouthrefclk0_in(gtsouthrefclk0_in),
        .gtsouthrefclk1_in(gtsouthrefclk1_in),
        .gttxresetsel_in(gttxresetsel_in),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .incpctrl_in(incpctrl_in),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .out(gtpowergood_out),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in),
        .pcierategen3_out(pcierategen3_out),
        .pcierateidle_out(pcierateidle_out),
        .pcierateqpllpd_out(pcierateqpllpd_out),
        .pcierateqpllreset_out(pcierateqpllreset_out),
        .pcierstidle_in(pcierstidle_in),
        .pciersttxsyncstart_in(pciersttxsyncstart_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out(pcieusergen3rdy_out),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out),
        .pcieuserratedone_in(pcieuserratedone_in),
        .pcieuserratestart_out(pcieuserratestart_out),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(pcsrsvdout_out),
        .phystatus_out(phystatus_out),
        .pinrsrvdas_out(pinrsrvdas_out),
        .powerpresent_out(powerpresent_out),
        .qpll0clk_in(qpll0clk_in),
        .qpll0freqlock_in(qpll0freqlock_in),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll1clk_in(qpll1clk_in),
        .qpll1freqlock_in(qpll1freqlock_in),
        .qpll1refclk_in(qpll1refclk_in),
        .resetexception_out(resetexception_out),
        .resetovrd_in(resetovrd_in),
        .rx8b10ben_in(rx8b10ben_in),
        .rxafecfoken_in(rxafecfoken_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(rxbyteisaligned_out),
        .rxbyterealign_out(rxbyterealign_out),
        .rxcdrfreqreset_in(rxcdrfreqreset_in),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(rxcdrphdone_out),
        .rxcdrreset_in(rxcdrreset_in),
        .rxchanbondseq_out(rxchanbondseq_out),
        .rxchanisaligned_out(rxchanisaligned_out),
        .rxchanrealign_out(rxchanrealign_out),
        .rxchbonden_in(rxchbonden_in),
        .rxchbondi_in(rxchbondi_in),
        .rxchbondlevel_in(rxchbondlevel_in),
        .rxchbondmaster_in(rxchbondmaster_in),
        .rxchbondo_out(rxchbondo_out),
        .rxchbondslave_in(rxchbondslave_in),
        .rxckcaldone_out(rxckcaldone_out),
        .rxckcalreset_in(rxckcalreset_in),
        .rxckcalstart_in(rxckcalstart_in),
        .rxclkcorcnt_out(rxclkcorcnt_out),
        .rxcominitdet_out(rxcominitdet_out),
        .rxcommadet_out(rxcommadet_out),
        .rxcommadeten_in(rxcommadeten_in),
        .rxcomsasdet_out(rxcomsasdet_out),
        .rxcomwakedet_out(rxcomwakedet_out),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxdata_out(rxdata_out),
        .rxdataextendrsvd_out(rxdataextendrsvd_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfeagchold_in(rxdfeagchold_in),
        .rxdfeagcovrden_in(rxdfeagcovrden_in),
        .rxdfecfokfcnum_in(rxdfecfokfcnum_in),
        .rxdfecfokfen_in(rxdfecfokfen_in),
        .rxdfecfokfpulse_in(rxdfecfokfpulse_in),
        .rxdfecfokhold_in(rxdfecfokhold_in),
        .rxdfecfokovren_in(rxdfecfokovren_in),
        .rxdfekhhold_in(rxdfekhhold_in),
        .rxdfekhovrden_in(rxdfekhovrden_in),
        .rxdfelfhold_in(rxdfelfhold_in),
        .rxdfelfovrden_in(rxdfelfovrden_in),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxdfetap10hold_in(rxdfetap10hold_in),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in),
        .rxdfetap11hold_in(rxdfetap11hold_in),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in),
        .rxdfetap12hold_in(rxdfetap12hold_in),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in),
        .rxdfetap13hold_in(rxdfetap13hold_in),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in),
        .rxdfetap14hold_in(rxdfetap14hold_in),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in),
        .rxdfetap15hold_in(rxdfetap15hold_in),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in),
        .rxdfetap2hold_in(rxdfetap2hold_in),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in),
        .rxdfetap3hold_in(rxdfetap3hold_in),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in),
        .rxdfetap4hold_in(rxdfetap4hold_in),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in),
        .rxdfetap5hold_in(rxdfetap5hold_in),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in),
        .rxdfetap6hold_in(rxdfetap6hold_in),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in),
        .rxdfetap7hold_in(rxdfetap7hold_in),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in),
        .rxdfetap8hold_in(rxdfetap8hold_in),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in),
        .rxdfetap9hold_in(rxdfetap9hold_in),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in),
        .rxdfeuthold_in(rxdfeuthold_in),
        .rxdfeutovrden_in(rxdfeutovrden_in),
        .rxdfevphold_in(rxdfevphold_in),
        .rxdfevpovrden_in(rxdfevpovrden_in),
        .rxdfexyden_in(rxdfexyden_in),
        .rxdlybypass_in(rxdlybypass_in),
        .rxdlyen_in(rxdlyen_in),
        .rxdlyovrden_in(rxdlyovrden_in),
        .rxdlysreset_in(rxdlysreset_in),
        .rxdlysresetdone_out(rxdlysresetdone_out),
        .rxelecidle_out(rxelecidle_out),
        .rxelecidlemode_in(rxelecidlemode_in),
        .rxeqtraining_in(rxeqtraining_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlfpstresetdet_out(rxlfpstresetdet_out),
        .rxlfpsu2lpexitdet_out(rxlfpsu2lpexitdet_out),
        .rxlfpsu3wakedet_out(rxlfpsu3wakedet_out),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in(rxlpmgchold_in),
        .rxlpmgcovrden_in(rxlpmgcovrden_in),
        .rxlpmhfhold_in(rxlpmhfhold_in),
        .rxlpmhfovrden_in(rxlpmhfovrden_in),
        .rxlpmlfhold_in(rxlpmlfhold_in),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in),
        .rxlpmoshold_in(rxlpmoshold_in),
        .rxlpmosovrden_in(rxlpmosovrden_in),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(rxmonitorout_out),
        .rxmonitorsel_in(rxmonitorsel_in),
        .rxoobreset_in(rxoobreset_in),
        .rxoscalreset_in(rxoscalreset_in),
        .rxoshold_in(rxoshold_in),
        .rxosintdone_out(rxosintdone_out),
        .rxosintstarted_out(rxosintstarted_out),
        .rxosintstrobedone_out(rxosintstrobedone_out),
        .rxosintstrobestarted_out(rxosintstrobestarted_out),
        .rxosovrden_in(rxosovrden_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(rxoutclkfabric_out),
        .rxoutclkpcs_out(rxoutclkpcs_out),
        .rxoutclksel_in(rxoutclksel_in),
        .rxpcommaalignen_in(rxpcommaalignen_in),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxphalign_in(rxphalign_in),
        .rxphaligndone_out(rxphaligndone_out),
        .rxphalignen_in(rxphalignen_in),
        .rxphalignerr_out(rxphalignerr_out),
        .rxphdlypd_in(rxphdlypd_in),
        .rxphdlyreset_in(rxphdlyreset_in),
        .rxpllclksel_in(rxpllclksel_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxrate_in(rxrate_in),
        .rxratedone_out(rxratedone_out),
        .rxratemode_in(rxratemode_in),
        .rxrecclkout_out(rxrecclkout_out),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(rxslide_in),
        .rxsliderdy_out(rxsliderdy_out),
        .rxslipdone_out(rxslipdone_out),
        .rxslipoutclk_in(rxslipoutclk_in),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out),
        .rxslippma_in(rxslippma_in),
        .rxslippmardy_out(rxslippmardy_out),
        .rxstartofseq_out(rxstartofseq_out),
        .rxstatus_out(rxstatus_out),
        .rxsyncallin_in(rxsyncallin_in),
        .rxsyncdone_out(rxsyncdone_out),
        .rxsyncin_in(rxsyncin_in),
        .rxsyncmode_in(rxsyncmode_in),
        .rxsyncout_out(rxsyncout_out),
        .rxsysclksel_in(rxsysclksel_in),
        .rxtermination_in(rxtermination_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(rxvalid_out),
        .sigvalidclk_in(sigvalidclk_in),
        .tstin_in(tstin_in),
        .tx8b10bbypass_in(tx8b10bbypass_in),
        .tx8b10ben_in(tx8b10ben_in),
        .txbufstatus_out(txbufstatus_out),
        .txcomfinish_out(txcomfinish_out),
        .txcominit_in(txcominit_in),
        .txcomsas_in(txcomsas_in),
        .txcomwake_in(txcomwake_in),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdataextendrsvd_in(txdataextendrsvd_in),
        .txdccdone_out(txdccdone_out),
        .txdccforcestart_in(txdccforcestart_in),
        .txdccreset_in(txdccreset_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txdlybypass_in(txdlybypass_in),
        .txdlyen_in(txdlyen_in),
        .txdlyhold_in(txdlyhold_in),
        .txdlyovrden_in(txdlyovrden_in),
        .txdlysreset_in(txdlysreset_in),
        .txdlysresetdone_out(txdlysresetdone_out),
        .txdlyupdown_in(txdlyupdown_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txlfpstreset_in(txlfpstreset_in),
        .txlfpsu2lpexit_in(txlfpsu2lpexit_in),
        .txlfpsu3wake_in(txlfpsu3wake_in),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in(txmargin_in),
        .txmuxdcdexhold_in(txmuxdcdexhold_in),
        .txmuxdcdorwren_in(txmuxdcdorwren_in),
        .txoneszeros_in(txoneszeros_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(txoutclkfabric_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txphalign_in(txphalign_in),
        .txphaligndone_out(txphaligndone_out),
        .txphalignen_in(txphalignen_in),
        .txphdlypd_in(txphdlypd_in),
        .txphdlyreset_in(txphdlyreset_in),
        .txphdlytstclk_in(txphdlytstclk_in),
        .txphinit_in(txphinit_in),
        .txphinitdone_out(txphinitdone_out),
        .txphovrden_in(txphovrden_in),
        .txpippmen_in(txpippmen_in),
        .txpippmovrden_in(txpippmovrden_in),
        .txpippmpd_in(txpippmpd_in),
        .txpippmsel_in(txpippmsel_in),
        .txpippmstepsize_in(txpippmstepsize_in),
        .txpllclksel_in(txpllclksel_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txratedone_out(txratedone_out),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txswing_in(txswing_in),
        .txsyncallin_in(txsyncallin_in),
        .txsyncdone_out(txsyncdone_out),
        .txsyncin_in(txsyncin_in),
        .txsyncmode_in(txsyncmode_in),
        .txsyncout_out(txsyncout_out),
        .txsysclksel_in(txsysclksel_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_gtye4_delay_powergood \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst 
       (.TXRATE({\gen_gtwizard_gtye4.txrate_ch_int ,\gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_3 }),
        .drpen_in_reg(\gen_gtwizard_gtye4.gen_channel_container[24].gen_enabled_channel.gtye4_channel_wrapper_inst_n_378 ),
        .drprdy_out_reg(\gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_4 ),
        .drprdy_out_reg_0(\gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst_n_5 ),
        .\gen_gtwizard_gtye4.txpmareset_ch_int (\gen_gtwizard_gtye4.txpmareset_ch_int ),
        .\gen_powergood_delay.pwr_on_fsm_reg_0 (\gen_gtwizard_gtye4.gen_channel_container[24].gen_enabled_channel.gtye4_channel_wrapper_inst_n_377 ),
        .out(gtpowergood_out),
        .txpisopd_in(txpisopd_in),
        .txpmareset_in(txpmareset_in),
        .txrate_in(txrate_in),
        .txratemode_in(txratemode_in));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_rxresetdone_inst 
       (.\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .rxresetdone_out(rxresetdone_out));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_29 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_txresetdone_inst 
       (.\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .txresetdone_out(txresetdone_out));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_gtwiz_reset \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst 
       (.\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .\gen_gtwizard_gtye4.gtpowergood_int (\gen_gtwizard_gtye4.gtpowergood_int ),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .\gen_gtwizard_gtye4.gttxreset_ch_int (\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .\gen_gtwizard_gtye4.txprogdivreset_int (\gen_gtwizard_gtye4.txprogdivreset_int ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .out(gtpowergood_out),
        .rxcdrlock_out(rxcdrlock_out),
        .rxusrclk2_in(rxusrclk2_in),
        .txusrclk2_in(txusrclk2_in));
endmodule

(* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_COMMON_SCALING_FACTOR = "1" *) (* C_CPLL_VCO_FREQUENCY = "2578.125000" *) 
(* C_FORCE_COMMONS = "0" *) (* C_FREERUN_FREQUENCY = "161.132812" *) (* C_GT_REV = "67" *) 
(* C_GT_TYPE = "3" *) (* C_INCLUDE_CPLL_CAL = "2" *) (* C_LOCATE_COMMON = "1" *) 
(* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) (* C_LOCATE_RESET_CONTROLLER = "0" *) (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
(* C_LOCATE_RX_USER_CLOCKING = "1" *) (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
(* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) (* C_PCIE_CORECLK_FREQ = "250" *) (* C_PCIE_ENABLE = "0" *) 
(* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) (* C_RESET_SEQUENCE_INTERVAL = "0" *) (* C_RX_BUFFBYPASS_MODE = "0" *) 
(* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_RX_BUFFER_MODE = "1" *) (* C_RX_CB_DISP = "8'b00000000" *) 
(* C_RX_CB_K = "8'b00000000" *) (* C_RX_CB_LEN_SEQ = "1" *) (* C_RX_CB_MAX_LEVEL = "1" *) 
(* C_RX_CB_NUM_SEQ = "0" *) (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_CC_DISP = "8'b00000000" *) 
(* C_RX_CC_ENABLE = "0" *) (* C_RX_CC_K = "8'b00000000" *) (* C_RX_CC_LEN_SEQ = "1" *) 
(* C_RX_CC_NUM_SEQ = "0" *) (* C_RX_CC_PERIODICITY = "5000" *) (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_COMMA_M_ENABLE = "0" *) (* C_RX_COMMA_M_VAL = "10'b1010000011" *) (* C_RX_COMMA_P_ENABLE = "0" *) 
(* C_RX_COMMA_P_VAL = "10'b0101111100" *) (* C_RX_DATA_DECODING = "2" *) (* C_RX_ENABLE = "1" *) 
(* C_RX_INT_DATA_WIDTH = "64" *) (* C_RX_LINE_RATE = "25.781300" *) (* C_RX_MASTER_CHANNEL_IDX = "96" *) 
(* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_RX_OUTCLK_FREQUENCY = "402.832825" *) (* C_RX_OUTCLK_SOURCE = "1" *) 
(* C_RX_PLL_TYPE = "0" *) (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_REFCLK_FREQUENCY = "161.133118" *) 
(* C_RX_SLIDE_MODE = "0" *) (* C_RX_USER_CLOCKING_CONTENTS = "0" *) (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
(* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
(* C_RX_USER_DATA_WIDTH = "64" *) (* C_RX_USRCLK2_FREQUENCY = "402.832825" *) (* C_RX_USRCLK_FREQUENCY = "402.832825" *) 
(* C_SECONDARY_QPLL_ENABLE = "0" *) (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) (* C_SIM_CPLL_CAL_BYPASS = "1'b0" *) 
(* C_TOTAL_NUM_CHANNELS = "1" *) (* C_TOTAL_NUM_COMMONS = "0" *) (* C_TOTAL_NUM_COMMONS_EXAMPLE = "1" *) 
(* C_TXPROGDIV_FREQ_ENABLE = "0" *) (* C_TXPROGDIV_FREQ_SOURCE = "0" *) (* C_TXPROGDIV_FREQ_VAL = "402.832825" *) 
(* C_TX_BUFFBYPASS_MODE = "0" *) (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_TX_BUFFER_MODE = "1" *) 
(* C_TX_DATA_ENCODING = "2" *) (* C_TX_ENABLE = "1" *) (* C_TX_INT_DATA_WIDTH = "64" *) 
(* C_TX_LINE_RATE = "25.781300" *) (* C_TX_MASTER_CHANNEL_IDX = "96" *) (* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) 
(* C_TX_OUTCLK_FREQUENCY = "402.832825" *) (* C_TX_OUTCLK_SOURCE = "1" *) (* C_TX_PLL_TYPE = "0" *) 
(* C_TX_REFCLK_FREQUENCY = "161.133118" *) (* C_TX_USER_CLOCKING_CONTENTS = "0" *) (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
(* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) (* C_TX_USER_CLOCKING_SOURCE = "0" *) 
(* C_TX_USER_DATA_WIDTH = "64" *) (* C_TX_USRCLK2_FREQUENCY = "402.832825" *) (* C_TX_USRCLK_FREQUENCY = "402.832825" *) 
(* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) (* ORIG_REF_NAME = "aurora_64b66b_25p78G_gt_gtwizard_top" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt_gtwizard_top
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_tx_srcclk_out,
    gtwiz_userclk_tx_usrclk_out,
    gtwiz_userclk_tx_usrclk2_out,
    gtwiz_userclk_tx_active_out,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_userclk_rx_srcclk_out,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    gtwiz_buffbypass_tx_reset_in,
    gtwiz_buffbypass_tx_start_user_in,
    gtwiz_buffbypass_tx_done_out,
    gtwiz_buffbypass_tx_error_out,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_buffbypass_rx_done_out,
    gtwiz_buffbypass_rx_error_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_tx_done_in,
    gtwiz_reset_rx_done_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_qpll1lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_reset_qpll1reset_out,
    gtwiz_gthe3_cpll_cal_txoutclk_period_in,
    gtwiz_gthe3_cpll_cal_cnt_tol_in,
    gtwiz_gthe3_cpll_cal_bufg_ce_in,
    gtwiz_gthe4_cpll_cal_txoutclk_period_in,
    gtwiz_gthe4_cpll_cal_cnt_tol_in,
    gtwiz_gthe4_cpll_cal_bufg_ce_in,
    gtwiz_gtye4_cpll_cal_txoutclk_period_in,
    gtwiz_gtye4_cpll_cal_cnt_tol_in,
    gtwiz_gtye4_cpll_cal_bufg_ce_in,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    bgbypassb_in,
    bgmonitorenb_in,
    bgpdb_in,
    bgrcalovrd_in,
    bgrcalovrdenb_in,
    drpaddr_common_in,
    drpclk_common_in,
    drpdi_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    pcierateqpll0_in,
    pcierateqpll1_in,
    pmarsvd0_in,
    pmarsvd1_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0fbdiv_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0refclksel_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1fbdiv_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1refclksel_in,
    qpll1reset_in,
    qpllrsvd1_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd4_in,
    rcalenb_in,
    sdm0data_in,
    sdm0reset_in,
    sdm0toggle_in,
    sdm0width_in,
    sdm1data_in,
    sdm1reset_in,
    sdm1toggle_in,
    sdm1width_in,
    tcongpi_in,
    tconpowerup_in,
    tconreset_in,
    tconrsvdin1_in,
    ubcfgstreamen_in,
    ubdo_in,
    ubdrdy_in,
    ubenable_in,
    ubgpi_in,
    ubintr_in,
    ubiolmbrst_in,
    ubmbrst_in,
    ubmdmcapture_in,
    ubmdmdbgrst_in,
    ubmdmdbgupdate_in,
    ubmdmregen_in,
    ubmdmshift_in,
    ubmdmsysrst_in,
    ubmdmtck_in,
    ubmdmtdi_in,
    drpdo_common_out,
    drprdy_common_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    rxrecclk0sel_out,
    rxrecclk1sel_out,
    sdm0finalout_out,
    sdm0testdata_out,
    sdm1finalout_out,
    sdm1testdata_out,
    tcongpo_out,
    tconrsvdout0_out,
    ubdaddr_out,
    ubden_out,
    ubdi_out,
    ubdwe_out,
    ubmdmtdo_out,
    ubrsvdout_out,
    ubtxuart_out,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllrefclksel_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    elpcaldvorwren_in,
    elpcalpaorwren_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrsvd_in,
    gtrxreset_in,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    gttxresetsel_in,
    incpctrl_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    looprsvd_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    pcsrsvdin_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondi_in,
    rxchbondlevel_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxckcalstart_in,
    rxcommadeten_in,
    rxdfeagcctrl_in,
    rxdccforcestart_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfcnum_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxelecidlemode_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxmonitorsel_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosintcfg_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxoutclksel_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxpd_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpllclksel_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxrate_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxsysclksel_in,
    rxtermination_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tstin_in,
    tx8b10bbypass_in,
    tx8b10ben_in,
    txbufdiffctrl_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdataextendrsvd_in,
    txdccforcestart_in,
    txdccreset_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffctrl_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txelforcestart_in,
    txheader_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmaincursor_in,
    txmargin_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txoutclksel_in,
    txpcsreset_in,
    txpd_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpippmstepsize_in,
    txpisopd_in,
    txpllclksel_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txrate_in,
    txratemode_in,
    txsequence_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txsysclksel_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    bufgtce_out,
    bufgtcemask_out,
    bufgtdiv_out,
    bufgtreset_out,
    bufgtrstmask_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitorout_out,
    dmonitoroutclk_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    pcsrsvdout_out,
    phystatus_out,
    pinrsrvdas_out,
    powerpresent_out,
    resetexception_out,
    rxbufstatus_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxchbondo_out,
    rxckcaldone_out,
    rxclkcorcnt_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdata_out,
    rxdataextendrsvd_out,
    rxdatavalid_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxheader_out,
    rxheadervalid_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxmonitorout_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxstartofseq_out,
    rxstatus_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txbufstatus_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  output [0:0]gtwiz_userclk_tx_srcclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk2_out;
  output [0:0]gtwiz_userclk_tx_active_out;
  input [0:0]gtwiz_userclk_rx_reset_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  output [0:0]gtwiz_userclk_rx_srcclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk2_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]gtwiz_buffbypass_tx_reset_in;
  input [0:0]gtwiz_buffbypass_tx_start_user_in;
  output [0:0]gtwiz_buffbypass_tx_done_out;
  output [0:0]gtwiz_buffbypass_tx_error_out;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output [0:0]gtwiz_buffbypass_rx_error_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_tx_done_in;
  input [0:0]gtwiz_reset_rx_done_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_qpll1lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [0:0]gtwiz_reset_qpll1reset_out;
  input [17:0]gtwiz_gthe3_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gthe3_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gthe3_cpll_cal_bufg_ce_in;
  input [17:0]gtwiz_gthe4_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gthe4_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gthe4_cpll_cal_bufg_ce_in;
  input [17:0]gtwiz_gtye4_cpll_cal_txoutclk_period_in;
  input [17:0]gtwiz_gtye4_cpll_cal_cnt_tol_in;
  input [0:0]gtwiz_gtye4_cpll_cal_bufg_ce_in;
  input [63:0]gtwiz_userdata_tx_in;
  output [63:0]gtwiz_userdata_rx_out;
  input [0:0]bgbypassb_in;
  input [0:0]bgmonitorenb_in;
  input [0:0]bgpdb_in;
  input [4:0]bgrcalovrd_in;
  input [0:0]bgrcalovrdenb_in;
  input [15:0]drpaddr_common_in;
  input [0:0]drpclk_common_in;
  input [15:0]drpdi_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [2:0]pcierateqpll0_in;
  input [2:0]pcierateqpll1_in;
  input [7:0]pmarsvd0_in;
  input [7:0]pmarsvd1_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [7:0]qpll0fbdiv_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [2:0]qpll0refclksel_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [7:0]qpll1fbdiv_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [2:0]qpll1refclksel_in;
  input [0:0]qpll1reset_in;
  input [7:0]qpllrsvd1_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd4_in;
  input [0:0]rcalenb_in;
  input [24:0]sdm0data_in;
  input [0:0]sdm0reset_in;
  input [0:0]sdm0toggle_in;
  input [1:0]sdm0width_in;
  input [24:0]sdm1data_in;
  input [0:0]sdm1reset_in;
  input [0:0]sdm1toggle_in;
  input [1:0]sdm1width_in;
  input [0:0]tcongpi_in;
  input [0:0]tconpowerup_in;
  input [0:0]tconreset_in;
  input [0:0]tconrsvdin1_in;
  input [0:0]ubcfgstreamen_in;
  input [15:0]ubdo_in;
  input [0:0]ubdrdy_in;
  input [0:0]ubenable_in;
  input [1:0]ubgpi_in;
  input [1:0]ubintr_in;
  input [0:0]ubiolmbrst_in;
  input [0:0]ubmbrst_in;
  input [0:0]ubmdmcapture_in;
  input [0:0]ubmdmdbgrst_in;
  input [0:0]ubmdmdbgupdate_in;
  input [3:0]ubmdmregen_in;
  input [0:0]ubmdmshift_in;
  input [0:0]ubmdmsysrst_in;
  input [0:0]ubmdmtck_in;
  input [0:0]ubmdmtdi_in;
  output [15:0]drpdo_common_out;
  output [0:0]drprdy_common_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [0:0]rxrecclk0_sel_out;
  output [0:0]rxrecclk1_sel_out;
  output [1:0]rxrecclk0sel_out;
  output [1:0]rxrecclk1sel_out;
  output [3:0]sdm0finalout_out;
  output [14:0]sdm0testdata_out;
  output [3:0]sdm1finalout_out;
  output [14:0]sdm1testdata_out;
  output [0:0]tcongpo_out;
  output [0:0]tconrsvdout0_out;
  output [15:0]ubdaddr_out;
  output [0:0]ubden_out;
  output [15:0]ubdi_out;
  output [0:0]ubdwe_out;
  output [0:0]ubmdmtdo_out;
  output [0:0]ubrsvdout_out;
  output [0:0]ubtxuart_out;
  input [0:0]cdrstepdir_in;
  input [0:0]cdrstepsq_in;
  input [0:0]cdrstepsx_in;
  input [0:0]cfgreset_in;
  input [0:0]clkrsvd0_in;
  input [0:0]clkrsvd1_in;
  input [0:0]cpllfreqlock_in;
  input [0:0]cplllockdetclk_in;
  input [0:0]cplllocken_in;
  input [0:0]cpllpd_in;
  input [2:0]cpllrefclksel_in;
  input [0:0]cpllreset_in;
  input [0:0]dmonfiforeset_in;
  input [0:0]dmonitorclk_in;
  input [9:0]drpaddr_in;
  input [0:0]drpclk_in;
  input [15:0]drpdi_in;
  input [0:0]drpen_in;
  input [0:0]drprst_in;
  input [0:0]drpwe_in;
  input [0:0]elpcaldvorwren_in;
  input [0:0]elpcalpaorwren_in;
  input [0:0]evoddphicaldone_in;
  input [0:0]evoddphicalstart_in;
  input [0:0]evoddphidrden_in;
  input [0:0]evoddphidwren_in;
  input [0:0]evoddphixrden_in;
  input [0:0]evoddphixwren_in;
  input [0:0]eyescanmode_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]freqos_in;
  input [0:0]gtgrefclk_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [0:0]gtnorthrefclk0_in;
  input [0:0]gtnorthrefclk1_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtrefclk1_in;
  input [0:0]gtresetsel_in;
  input [15:0]gtrsvd_in;
  input [0:0]gtrxreset_in;
  input [0:0]gtrxresetsel_in;
  input [0:0]gtsouthrefclk0_in;
  input [0:0]gtsouthrefclk1_in;
  input [0:0]gttxreset_in;
  input [0:0]gttxresetsel_in;
  input [0:0]incpctrl_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [2:0]loopback_in;
  input [0:0]looprsvd_in;
  input [0:0]lpbkrxtxseren_in;
  input [0:0]lpbktxrxseren_in;
  input [0:0]pcieeqrxeqadaptdone_in;
  input [0:0]pcierstidle_in;
  input [0:0]pciersttxsyncstart_in;
  input [0:0]pcieuserratedone_in;
  input [15:0]pcsrsvdin_in;
  input [0:0]pcsrsvdin2_in;
  input [0:0]pmarsvdin_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0freqlock_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1freqlock_in;
  input [0:0]qpll1refclk_in;
  input [0:0]resetovrd_in;
  input [0:0]rstclkentx_in;
  input [0:0]rx8b10ben_in;
  input [0:0]rxafecfoken_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrfreqreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxcdrreset_in;
  input [0:0]rxcdrresetrsv_in;
  input [0:0]rxchbonden_in;
  input [4:0]rxchbondi_in;
  input [2:0]rxchbondlevel_in;
  input [0:0]rxchbondmaster_in;
  input [0:0]rxchbondslave_in;
  input [0:0]rxckcalreset_in;
  input [6:0]rxckcalstart_in;
  input [0:0]rxcommadeten_in;
  input [0:0]rxdfeagcctrl_in;
  input [0:0]rxdccforcestart_in;
  input [0:0]rxdfeagchold_in;
  input [0:0]rxdfeagcovrden_in;
  input [3:0]rxdfecfokfcnum_in;
  input [0:0]rxdfecfokfen_in;
  input [0:0]rxdfecfokfpulse_in;
  input [0:0]rxdfecfokhold_in;
  input [0:0]rxdfecfokovren_in;
  input [0:0]rxdfekhhold_in;
  input [0:0]rxdfekhovrden_in;
  input [0:0]rxdfelfhold_in;
  input [0:0]rxdfelfovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxdfetap10hold_in;
  input [0:0]rxdfetap10ovrden_in;
  input [0:0]rxdfetap11hold_in;
  input [0:0]rxdfetap11ovrden_in;
  input [0:0]rxdfetap12hold_in;
  input [0:0]rxdfetap12ovrden_in;
  input [0:0]rxdfetap13hold_in;
  input [0:0]rxdfetap13ovrden_in;
  input [0:0]rxdfetap14hold_in;
  input [0:0]rxdfetap14ovrden_in;
  input [0:0]rxdfetap15hold_in;
  input [0:0]rxdfetap15ovrden_in;
  input [0:0]rxdfetap2hold_in;
  input [0:0]rxdfetap2ovrden_in;
  input [0:0]rxdfetap3hold_in;
  input [0:0]rxdfetap3ovrden_in;
  input [0:0]rxdfetap4hold_in;
  input [0:0]rxdfetap4ovrden_in;
  input [0:0]rxdfetap5hold_in;
  input [0:0]rxdfetap5ovrden_in;
  input [0:0]rxdfetap6hold_in;
  input [0:0]rxdfetap6ovrden_in;
  input [0:0]rxdfetap7hold_in;
  input [0:0]rxdfetap7ovrden_in;
  input [0:0]rxdfetap8hold_in;
  input [0:0]rxdfetap8ovrden_in;
  input [0:0]rxdfetap9hold_in;
  input [0:0]rxdfetap9ovrden_in;
  input [0:0]rxdfeuthold_in;
  input [0:0]rxdfeutovrden_in;
  input [0:0]rxdfevphold_in;
  input [0:0]rxdfevpovrden_in;
  input [0:0]rxdfevsen_in;
  input [0:0]rxdfexyden_in;
  input [0:0]rxdlybypass_in;
  input [0:0]rxdlyen_in;
  input [0:0]rxdlyovrden_in;
  input [0:0]rxdlysreset_in;
  input [1:0]rxelecidlemode_in;
  input [0:0]rxeqtraining_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxlpmgchold_in;
  input [0:0]rxlpmgcovrden_in;
  input [0:0]rxlpmhfhold_in;
  input [0:0]rxlpmhfovrden_in;
  input [0:0]rxlpmlfhold_in;
  input [0:0]rxlpmlfklovrden_in;
  input [0:0]rxlpmoshold_in;
  input [0:0]rxlpmosovrden_in;
  input [0:0]rxmcommaalignen_in;
  input [1:0]rxmonitorsel_in;
  input [0:0]rxoobreset_in;
  input [0:0]rxoscalreset_in;
  input [0:0]rxoshold_in;
  input [0:0]rxosintcfg_in;
  input [0:0]rxosinten_in;
  input [0:0]rxosinthold_in;
  input [0:0]rxosintovrden_in;
  input [0:0]rxosintstrobe_in;
  input [0:0]rxosinttestovrden_in;
  input [0:0]rxosovrden_in;
  input [2:0]rxoutclksel_in;
  input [0:0]rxpcommaalignen_in;
  input [0:0]rxpcsreset_in;
  input [1:0]rxpd_in;
  input [0:0]rxphalign_in;
  input [0:0]rxphalignen_in;
  input [0:0]rxphdlypd_in;
  input [0:0]rxphdlyreset_in;
  input [0:0]rxphovrden_in;
  input [1:0]rxpllclksel_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input [3:0]rxprbssel_in;
  input [0:0]rxprogdivreset_in;
  input [0:0]rxqpien_in;
  input [2:0]rxrate_in;
  input [0:0]rxratemode_in;
  input [0:0]rxslide_in;
  input [0:0]rxslipoutclk_in;
  input [0:0]rxslippma_in;
  input [0:0]rxsyncallin_in;
  input [0:0]rxsyncin_in;
  input [0:0]rxsyncmode_in;
  input [1:0]rxsysclksel_in;
  input [0:0]rxtermination_in;
  input [0:0]rxuserrdy_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]sigvalidclk_in;
  input [19:0]tstin_in;
  input [7:0]tx8b10bbypass_in;
  input [0:0]tx8b10ben_in;
  input [0:0]txbufdiffctrl_in;
  input [0:0]txcominit_in;
  input [0:0]txcomsas_in;
  input [0:0]txcomwake_in;
  input [15:0]txctrl0_in;
  input [15:0]txctrl1_in;
  input [7:0]txctrl2_in;
  input [127:0]txdata_in;
  input [7:0]txdataextendrsvd_in;
  input [0:0]txdccforcestart_in;
  input [0:0]txdccreset_in;
  input [1:0]txdeemph_in;
  input [0:0]txdetectrx_in;
  input [4:0]txdiffctrl_in;
  input [0:0]txdiffpd_in;
  input [0:0]txdlybypass_in;
  input [0:0]txdlyen_in;
  input [0:0]txdlyhold_in;
  input [0:0]txdlyovrden_in;
  input [0:0]txdlysreset_in;
  input [0:0]txdlyupdown_in;
  input [0:0]txelecidle_in;
  input [0:0]txelforcestart_in;
  input [5:0]txheader_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txlfpstreset_in;
  input [0:0]txlfpsu2lpexit_in;
  input [0:0]txlfpsu3wake_in;
  input [6:0]txmaincursor_in;
  input [2:0]txmargin_in;
  input [0:0]txmuxdcdexhold_in;
  input [0:0]txmuxdcdorwren_in;
  input [0:0]txoneszeros_in;
  input [2:0]txoutclksel_in;
  input [0:0]txpcsreset_in;
  input [1:0]txpd_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txphalign_in;
  input [0:0]txphalignen_in;
  input [0:0]txphdlypd_in;
  input [0:0]txphdlyreset_in;
  input [0:0]txphdlytstclk_in;
  input [0:0]txphinit_in;
  input [0:0]txphovrden_in;
  input [0:0]txpippmen_in;
  input [0:0]txpippmovrden_in;
  input [0:0]txpippmpd_in;
  input [0:0]txpippmsel_in;
  input [4:0]txpippmstepsize_in;
  input [0:0]txpisopd_in;
  input [1:0]txpllclksel_in;
  input [0:0]txpmareset_in;
  input [0:0]txpolarity_in;
  input [4:0]txpostcursor_in;
  input [0:0]txpostcursorinv_in;
  input [0:0]txprbsforceerr_in;
  input [3:0]txprbssel_in;
  input [4:0]txprecursor_in;
  input [0:0]txprecursorinv_in;
  input [0:0]txprogdivreset_in;
  input [0:0]txqpibiasen_in;
  input [0:0]txqpistrongpdown_in;
  input [0:0]txqpiweakpup_in;
  input [2:0]txrate_in;
  input [0:0]txratemode_in;
  input [6:0]txsequence_in;
  input [0:0]txswing_in;
  input [0:0]txsyncallin_in;
  input [0:0]txsyncin_in;
  input [0:0]txsyncmode_in;
  input [1:0]txsysclksel_in;
  input [0:0]txuserrdy_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  output [0:0]bufgtce_out;
  output [2:0]bufgtcemask_out;
  output [8:0]bufgtdiv_out;
  output [0:0]bufgtreset_out;
  output [2:0]bufgtrstmask_out;
  output [0:0]cpllfbclklost_out;
  output [0:0]cplllock_out;
  output [0:0]cpllrefclklost_out;
  output [15:0]dmonitorout_out;
  output [0:0]dmonitoroutclk_out;
  output [15:0]drpdo_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [0:0]gtpowergood_out;
  output [0:0]gtrefclkmonitor_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]pcierategen3_out;
  output [0:0]pcierateidle_out;
  output [1:0]pcierateqpllpd_out;
  output [1:0]pcierateqpllreset_out;
  output [0:0]pciesynctxsyncdone_out;
  output [0:0]pcieusergen3rdy_out;
  output [0:0]pcieuserphystatusrst_out;
  output [0:0]pcieuserratestart_out;
  output [15:0]pcsrsvdout_out;
  output [0:0]phystatus_out;
  output [15:0]pinrsrvdas_out;
  output [0:0]powerpresent_out;
  output [0:0]resetexception_out;
  output [2:0]rxbufstatus_out;
  output [0:0]rxbyteisaligned_out;
  output [0:0]rxbyterealign_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxcdrphdone_out;
  output [0:0]rxchanbondseq_out;
  output [0:0]rxchanisaligned_out;
  output [0:0]rxchanrealign_out;
  output [4:0]rxchbondo_out;
  output [0:0]rxckcaldone_out;
  output [1:0]rxclkcorcnt_out;
  output [0:0]rxcominitdet_out;
  output [0:0]rxcommadet_out;
  output [0:0]rxcomsasdet_out;
  output [0:0]rxcomwakedet_out;
  output [15:0]rxctrl0_out;
  output [15:0]rxctrl1_out;
  output [7:0]rxctrl2_out;
  output [7:0]rxctrl3_out;
  output [127:0]rxdata_out;
  output [7:0]rxdataextendrsvd_out;
  output [1:0]rxdatavalid_out;
  output [0:0]rxdlysresetdone_out;
  output [0:0]rxelecidle_out;
  output [5:0]rxheader_out;
  output [1:0]rxheadervalid_out;
  output [0:0]rxlfpstresetdet_out;
  output [0:0]rxlfpsu2lpexitdet_out;
  output [0:0]rxlfpsu3wakedet_out;
  output [7:0]rxmonitorout_out;
  output [0:0]rxosintdone_out;
  output [0:0]rxosintstarted_out;
  output [0:0]rxosintstrobedone_out;
  output [0:0]rxosintstrobestarted_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkfabric_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]rxphalignerr_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxqpisenn_out;
  output [0:0]rxqpisenp_out;
  output [0:0]rxratedone_out;
  output [0:0]rxrecclkout_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsliderdy_out;
  output [0:0]rxslipdone_out;
  output [0:0]rxslipoutclkrdy_out;
  output [0:0]rxslippmardy_out;
  output [1:0]rxstartofseq_out;
  output [2:0]rxstatus_out;
  output [0:0]rxsyncdone_out;
  output [0:0]rxsyncout_out;
  output [0:0]rxvalid_out;
  output [1:0]txbufstatus_out;
  output [0:0]txcomfinish_out;
  output [0:0]txdccdone_out;
  output [0:0]txdlysresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txphaligndone_out;
  output [0:0]txphinitdone_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txqpisenn_out;
  output [0:0]txqpisenp_out;
  output [0:0]txratedone_out;
  output [0:0]txresetdone_out;
  output [0:0]txsyncdone_out;
  output [0:0]txsyncout_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire \<const0> ;
  wire [0:0]bufgtce_out;
  wire [2:0]bufgtcemask_out;
  wire [8:0]bufgtdiv_out;
  wire [0:0]bufgtreset_out;
  wire [2:0]bufgtrstmask_out;
  wire [0:0]cdrstepdir_in;
  wire [0:0]cdrstepsq_in;
  wire [0:0]cdrstepsx_in;
  wire [0:0]cfgreset_in;
  wire [0:0]clkrsvd0_in;
  wire [0:0]clkrsvd1_in;
  wire [0:0]cpllfbclklost_out;
  wire [0:0]cpllfreqlock_in;
  wire [0:0]cplllock_out;
  wire [0:0]cplllockdetclk_in;
  wire [0:0]cplllocken_in;
  wire [0:0]cpllpd_in;
  wire [0:0]cpllrefclklost_out;
  wire [2:0]cpllrefclksel_in;
  wire [0:0]cpllreset_in;
  wire [0:0]dmonfiforeset_in;
  wire [0:0]dmonitorclk_in;
  wire [15:0]dmonitorout_out;
  wire [0:0]dmonitoroutclk_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drprst_in;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]freqos_in;
  wire [0:0]gtgrefclk_in;
  wire [0:0]gtnorthrefclk0_in;
  wire [0:0]gtnorthrefclk1_in;
  wire [0:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtrefclk1_in;
  wire [0:0]gtrefclkmonitor_out;
  wire [15:0]gtrsvd_in;
  wire [0:0]gtrxresetsel_in;
  wire [0:0]gtsouthrefclk0_in;
  wire [0:0]gtsouthrefclk1_in;
  wire [0:0]gttxresetsel_in;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_qpll1lock_in;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [0:0]incpctrl_in;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [0:0]pcieeqrxeqadaptdone_in;
  wire [0:0]pcierategen3_out;
  wire [0:0]pcierateidle_out;
  wire [1:0]pcierateqpllpd_out;
  wire [1:0]pcierateqpllreset_out;
  wire [0:0]pcierstidle_in;
  wire [0:0]pciersttxsyncstart_in;
  wire [0:0]pciesynctxsyncdone_out;
  wire [0:0]pcieusergen3rdy_out;
  wire [0:0]pcieuserphystatusrst_out;
  wire [0:0]pcieuserratedone_in;
  wire [0:0]pcieuserratestart_out;
  wire [15:0]pcsrsvdin_in;
  wire [15:0]pcsrsvdout_out;
  wire [0:0]phystatus_out;
  wire [15:0]pinrsrvdas_out;
  wire [0:0]powerpresent_out;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0freqlock_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1freqlock_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]qpll1reset_in;
  wire [0:0]resetexception_out;
  wire [0:0]resetovrd_in;
  wire [0:0]rx8b10ben_in;
  wire [0:0]rxafecfoken_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxbyteisaligned_out;
  wire [0:0]rxbyterealign_out;
  wire [0:0]rxcdrfreqreset_in;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]rxcdrphdone_out;
  wire [0:0]rxcdrreset_in;
  wire [0:0]rxchanbondseq_out;
  wire [0:0]rxchanisaligned_out;
  wire [0:0]rxchanrealign_out;
  wire [0:0]rxchbonden_in;
  wire [4:0]rxchbondi_in;
  wire [2:0]rxchbondlevel_in;
  wire [0:0]rxchbondmaster_in;
  wire [4:0]rxchbondo_out;
  wire [0:0]rxchbondslave_in;
  wire [0:0]rxckcaldone_out;
  wire [0:0]rxckcalreset_in;
  wire [6:0]rxckcalstart_in;
  wire [1:0]rxclkcorcnt_out;
  wire [0:0]rxcominitdet_out;
  wire [0:0]rxcommadet_out;
  wire [0:0]rxcommadeten_in;
  wire [0:0]rxcomsasdet_out;
  wire [0:0]rxcomwakedet_out;
  wire [15:0]rxctrl0_out;
  wire [15:0]rxctrl1_out;
  wire [7:0]rxctrl2_out;
  wire [7:0]rxctrl3_out;
  wire [127:0]rxdata_out;
  wire [7:0]rxdataextendrsvd_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfeagchold_in;
  wire [0:0]rxdfeagcovrden_in;
  wire [3:0]rxdfecfokfcnum_in;
  wire [0:0]rxdfecfokfen_in;
  wire [0:0]rxdfecfokfpulse_in;
  wire [0:0]rxdfecfokhold_in;
  wire [0:0]rxdfecfokovren_in;
  wire [0:0]rxdfekhhold_in;
  wire [0:0]rxdfekhovrden_in;
  wire [0:0]rxdfelfhold_in;
  wire [0:0]rxdfelfovrden_in;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxdfetap10hold_in;
  wire [0:0]rxdfetap10ovrden_in;
  wire [0:0]rxdfetap11hold_in;
  wire [0:0]rxdfetap11ovrden_in;
  wire [0:0]rxdfetap12hold_in;
  wire [0:0]rxdfetap12ovrden_in;
  wire [0:0]rxdfetap13hold_in;
  wire [0:0]rxdfetap13ovrden_in;
  wire [0:0]rxdfetap14hold_in;
  wire [0:0]rxdfetap14ovrden_in;
  wire [0:0]rxdfetap15hold_in;
  wire [0:0]rxdfetap15ovrden_in;
  wire [0:0]rxdfetap2hold_in;
  wire [0:0]rxdfetap2ovrden_in;
  wire [0:0]rxdfetap3hold_in;
  wire [0:0]rxdfetap3ovrden_in;
  wire [0:0]rxdfetap4hold_in;
  wire [0:0]rxdfetap4ovrden_in;
  wire [0:0]rxdfetap5hold_in;
  wire [0:0]rxdfetap5ovrden_in;
  wire [0:0]rxdfetap6hold_in;
  wire [0:0]rxdfetap6ovrden_in;
  wire [0:0]rxdfetap7hold_in;
  wire [0:0]rxdfetap7ovrden_in;
  wire [0:0]rxdfetap8hold_in;
  wire [0:0]rxdfetap8ovrden_in;
  wire [0:0]rxdfetap9hold_in;
  wire [0:0]rxdfetap9ovrden_in;
  wire [0:0]rxdfeuthold_in;
  wire [0:0]rxdfeutovrden_in;
  wire [0:0]rxdfevphold_in;
  wire [0:0]rxdfevpovrden_in;
  wire [0:0]rxdfexyden_in;
  wire [0:0]rxdlybypass_in;
  wire [0:0]rxdlyen_in;
  wire [0:0]rxdlyovrden_in;
  wire [0:0]rxdlysreset_in;
  wire [0:0]rxdlysresetdone_out;
  wire [0:0]rxelecidle_out;
  wire [1:0]rxelecidlemode_in;
  wire [0:0]rxeqtraining_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlfpstresetdet_out;
  wire [0:0]rxlfpsu2lpexitdet_out;
  wire [0:0]rxlfpsu3wakedet_out;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxlpmgchold_in;
  wire [0:0]rxlpmgcovrden_in;
  wire [0:0]rxlpmhfhold_in;
  wire [0:0]rxlpmhfovrden_in;
  wire [0:0]rxlpmlfhold_in;
  wire [0:0]rxlpmlfklovrden_in;
  wire [0:0]rxlpmoshold_in;
  wire [0:0]rxlpmosovrden_in;
  wire [0:0]rxmcommaalignen_in;
  wire [7:0]rxmonitorout_out;
  wire [1:0]rxmonitorsel_in;
  wire [0:0]rxoobreset_in;
  wire [0:0]rxoscalreset_in;
  wire [0:0]rxoshold_in;
  wire [0:0]rxosintdone_out;
  wire [0:0]rxosintstarted_out;
  wire [0:0]rxosintstrobedone_out;
  wire [0:0]rxosintstrobestarted_out;
  wire [0:0]rxosovrden_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxoutclkfabric_out;
  wire [0:0]rxoutclkpcs_out;
  wire [2:0]rxoutclksel_in;
  wire [0:0]rxpcommaalignen_in;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxphalign_in;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxphalignen_in;
  wire [0:0]rxphalignerr_out;
  wire [0:0]rxphdlypd_in;
  wire [0:0]rxphdlyreset_in;
  wire [1:0]rxpllclksel_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire [2:0]rxrate_in;
  wire [0:0]rxratedone_out;
  wire [0:0]rxratemode_in;
  wire [0:0]rxrecclkout_out;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxslide_in;
  wire [0:0]rxsliderdy_out;
  wire [0:0]rxslipdone_out;
  wire [0:0]rxslipoutclk_in;
  wire [0:0]rxslipoutclkrdy_out;
  wire [0:0]rxslippma_in;
  wire [0:0]rxslippmardy_out;
  wire [1:0]rxstartofseq_out;
  wire [2:0]rxstatus_out;
  wire [0:0]rxsyncallin_in;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxsyncin_in;
  wire [0:0]rxsyncmode_in;
  wire [0:0]rxsyncout_out;
  wire [1:0]rxsysclksel_in;
  wire [0:0]rxtermination_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [0:0]rxvalid_out;
  wire [0:0]sigvalidclk_in;
  wire [19:0]tstin_in;
  wire [7:0]tx8b10bbypass_in;
  wire [0:0]tx8b10ben_in;
  wire [1:0]txbufstatus_out;
  wire [0:0]txcomfinish_out;
  wire [0:0]txcominit_in;
  wire [0:0]txcomsas_in;
  wire [0:0]txcomwake_in;
  wire [15:0]txctrl0_in;
  wire [15:0]txctrl1_in;
  wire [7:0]txctrl2_in;
  wire [7:0]txdataextendrsvd_in;
  wire [0:0]txdccdone_out;
  wire [0:0]txdccforcestart_in;
  wire [0:0]txdccreset_in;
  wire [1:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [4:0]txdiffctrl_in;
  wire [0:0]txdlybypass_in;
  wire [0:0]txdlyen_in;
  wire [0:0]txdlyhold_in;
  wire [0:0]txdlyovrden_in;
  wire [0:0]txdlysreset_in;
  wire [0:0]txdlysresetdone_out;
  wire [0:0]txdlyupdown_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txlfpstreset_in;
  wire [0:0]txlfpsu2lpexit_in;
  wire [0:0]txlfpsu3wake_in;
  wire [6:0]txmaincursor_in;
  wire [2:0]txmargin_in;
  wire [0:0]txmuxdcdexhold_in;
  wire [0:0]txmuxdcdorwren_in;
  wire [0:0]txoneszeros_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txoutclkfabric_out;
  wire [0:0]txoutclkpcs_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txphalign_in;
  wire [0:0]txphaligndone_out;
  wire [0:0]txphalignen_in;
  wire [0:0]txphdlypd_in;
  wire [0:0]txphdlyreset_in;
  wire [0:0]txphdlytstclk_in;
  wire [0:0]txphinit_in;
  wire [0:0]txphinitdone_out;
  wire [0:0]txphovrden_in;
  wire [0:0]txpippmen_in;
  wire [0:0]txpippmovrden_in;
  wire [0:0]txpippmpd_in;
  wire [0:0]txpippmsel_in;
  wire [4:0]txpippmstepsize_in;
  wire [0:0]txpisopd_in;
  wire [1:0]txpllclksel_in;
  wire [0:0]txpmareset_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire [2:0]txrate_in;
  wire [0:0]txratedone_out;
  wire [0:0]txratemode_in;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txswing_in;
  wire [0:0]txsyncallin_in;
  wire [0:0]txsyncdone_out;
  wire [0:0]txsyncin_in;
  wire [0:0]txsyncmode_in;
  wire [0:0]txsyncout_out;
  wire [1:0]txsysclksel_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  assign drpdo_common_out[15] = \<const0> ;
  assign drpdo_common_out[14] = \<const0> ;
  assign drpdo_common_out[13] = \<const0> ;
  assign drpdo_common_out[12] = \<const0> ;
  assign drpdo_common_out[11] = \<const0> ;
  assign drpdo_common_out[10] = \<const0> ;
  assign drpdo_common_out[9] = \<const0> ;
  assign drpdo_common_out[8] = \<const0> ;
  assign drpdo_common_out[7] = \<const0> ;
  assign drpdo_common_out[6] = \<const0> ;
  assign drpdo_common_out[5] = \<const0> ;
  assign drpdo_common_out[4] = \<const0> ;
  assign drpdo_common_out[3] = \<const0> ;
  assign drpdo_common_out[2] = \<const0> ;
  assign drpdo_common_out[1] = \<const0> ;
  assign drpdo_common_out[0] = \<const0> ;
  assign drprdy_common_out[0] = \<const0> ;
  assign gthtxn_out[0] = \<const0> ;
  assign gthtxp_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_error_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_error_out[0] = \<const0> ;
  assign gtwiz_reset_qpll1reset_out[0] = qpll1reset_in;
  assign gtwiz_userclk_rx_active_out[0] = gtwiz_userclk_rx_active_in;
  assign gtwiz_userclk_rx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_active_out[0] = gtwiz_userclk_tx_active_in;
  assign gtwiz_userclk_tx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userdata_rx_out[63:0] = rxdata_out[63:0];
  assign pmarsvdout0_out[7] = \<const0> ;
  assign pmarsvdout0_out[6] = \<const0> ;
  assign pmarsvdout0_out[5] = \<const0> ;
  assign pmarsvdout0_out[4] = \<const0> ;
  assign pmarsvdout0_out[3] = \<const0> ;
  assign pmarsvdout0_out[2] = \<const0> ;
  assign pmarsvdout0_out[1] = \<const0> ;
  assign pmarsvdout0_out[0] = \<const0> ;
  assign pmarsvdout1_out[7] = \<const0> ;
  assign pmarsvdout1_out[6] = \<const0> ;
  assign pmarsvdout1_out[5] = \<const0> ;
  assign pmarsvdout1_out[4] = \<const0> ;
  assign pmarsvdout1_out[3] = \<const0> ;
  assign pmarsvdout1_out[2] = \<const0> ;
  assign pmarsvdout1_out[1] = \<const0> ;
  assign pmarsvdout1_out[0] = \<const0> ;
  assign qpll0fbclklost_out[0] = \<const0> ;
  assign qpll0lock_out[0] = gtwiz_reset_qpll0lock_in;
  assign qpll0outclk_out[0] = \<const0> ;
  assign qpll0outrefclk_out[0] = \<const0> ;
  assign qpll0refclklost_out[0] = \<const0> ;
  assign qpll1fbclklost_out[0] = \<const0> ;
  assign qpll1lock_out[0] = gtwiz_reset_qpll1lock_in;
  assign qpll1outclk_out[0] = \<const0> ;
  assign qpll1outrefclk_out[0] = \<const0> ;
  assign qpll1refclklost_out[0] = \<const0> ;
  assign qplldmonitor0_out[7] = \<const0> ;
  assign qplldmonitor0_out[6] = \<const0> ;
  assign qplldmonitor0_out[5] = \<const0> ;
  assign qplldmonitor0_out[4] = \<const0> ;
  assign qplldmonitor0_out[3] = \<const0> ;
  assign qplldmonitor0_out[2] = \<const0> ;
  assign qplldmonitor0_out[1] = \<const0> ;
  assign qplldmonitor0_out[0] = \<const0> ;
  assign qplldmonitor1_out[7] = \<const0> ;
  assign qplldmonitor1_out[6] = \<const0> ;
  assign qplldmonitor1_out[5] = \<const0> ;
  assign qplldmonitor1_out[4] = \<const0> ;
  assign qplldmonitor1_out[3] = \<const0> ;
  assign qplldmonitor1_out[2] = \<const0> ;
  assign qplldmonitor1_out[1] = \<const0> ;
  assign qplldmonitor1_out[0] = \<const0> ;
  assign refclkoutmonitor0_out[0] = \<const0> ;
  assign refclkoutmonitor1_out[0] = \<const0> ;
  assign rxqpisenn_out[0] = \<const0> ;
  assign rxqpisenp_out[0] = \<const0> ;
  assign rxrecclk0_sel_out[0] = \<const0> ;
  assign rxrecclk0sel_out[1] = \<const0> ;
  assign rxrecclk0sel_out[0] = \<const0> ;
  assign rxrecclk1_sel_out[0] = \<const0> ;
  assign rxrecclk1sel_out[1] = \<const0> ;
  assign rxrecclk1sel_out[0] = \<const0> ;
  assign sdm0finalout_out[3] = \<const0> ;
  assign sdm0finalout_out[2] = \<const0> ;
  assign sdm0finalout_out[1] = \<const0> ;
  assign sdm0finalout_out[0] = \<const0> ;
  assign sdm0testdata_out[14] = \<const0> ;
  assign sdm0testdata_out[13] = \<const0> ;
  assign sdm0testdata_out[12] = \<const0> ;
  assign sdm0testdata_out[11] = \<const0> ;
  assign sdm0testdata_out[10] = \<const0> ;
  assign sdm0testdata_out[9] = \<const0> ;
  assign sdm0testdata_out[8] = \<const0> ;
  assign sdm0testdata_out[7] = \<const0> ;
  assign sdm0testdata_out[6] = \<const0> ;
  assign sdm0testdata_out[5] = \<const0> ;
  assign sdm0testdata_out[4] = \<const0> ;
  assign sdm0testdata_out[3] = \<const0> ;
  assign sdm0testdata_out[2] = \<const0> ;
  assign sdm0testdata_out[1] = \<const0> ;
  assign sdm0testdata_out[0] = \<const0> ;
  assign sdm1finalout_out[3] = \<const0> ;
  assign sdm1finalout_out[2] = \<const0> ;
  assign sdm1finalout_out[1] = \<const0> ;
  assign sdm1finalout_out[0] = \<const0> ;
  assign sdm1testdata_out[14] = \<const0> ;
  assign sdm1testdata_out[13] = \<const0> ;
  assign sdm1testdata_out[12] = \<const0> ;
  assign sdm1testdata_out[11] = \<const0> ;
  assign sdm1testdata_out[10] = \<const0> ;
  assign sdm1testdata_out[9] = \<const0> ;
  assign sdm1testdata_out[8] = \<const0> ;
  assign sdm1testdata_out[7] = \<const0> ;
  assign sdm1testdata_out[6] = \<const0> ;
  assign sdm1testdata_out[5] = \<const0> ;
  assign sdm1testdata_out[4] = \<const0> ;
  assign sdm1testdata_out[3] = \<const0> ;
  assign sdm1testdata_out[2] = \<const0> ;
  assign sdm1testdata_out[1] = \<const0> ;
  assign sdm1testdata_out[0] = \<const0> ;
  assign tcongpo_out[0] = \<const0> ;
  assign tconrsvdout0_out[0] = \<const0> ;
  assign txqpisenn_out[0] = \<const0> ;
  assign txqpisenp_out[0] = \<const0> ;
  assign ubdaddr_out[15] = \<const0> ;
  assign ubdaddr_out[14] = \<const0> ;
  assign ubdaddr_out[13] = \<const0> ;
  assign ubdaddr_out[12] = \<const0> ;
  assign ubdaddr_out[11] = \<const0> ;
  assign ubdaddr_out[10] = \<const0> ;
  assign ubdaddr_out[9] = \<const0> ;
  assign ubdaddr_out[8] = \<const0> ;
  assign ubdaddr_out[7] = \<const0> ;
  assign ubdaddr_out[6] = \<const0> ;
  assign ubdaddr_out[5] = \<const0> ;
  assign ubdaddr_out[4] = \<const0> ;
  assign ubdaddr_out[3] = \<const0> ;
  assign ubdaddr_out[2] = \<const0> ;
  assign ubdaddr_out[1] = \<const0> ;
  assign ubdaddr_out[0] = \<const0> ;
  assign ubden_out[0] = \<const0> ;
  assign ubdi_out[15] = \<const0> ;
  assign ubdi_out[14] = \<const0> ;
  assign ubdi_out[13] = \<const0> ;
  assign ubdi_out[12] = \<const0> ;
  assign ubdi_out[11] = \<const0> ;
  assign ubdi_out[10] = \<const0> ;
  assign ubdi_out[9] = \<const0> ;
  assign ubdi_out[8] = \<const0> ;
  assign ubdi_out[7] = \<const0> ;
  assign ubdi_out[6] = \<const0> ;
  assign ubdi_out[5] = \<const0> ;
  assign ubdi_out[4] = \<const0> ;
  assign ubdi_out[3] = \<const0> ;
  assign ubdi_out[2] = \<const0> ;
  assign ubdi_out[1] = \<const0> ;
  assign ubdi_out[0] = \<const0> ;
  assign ubdwe_out[0] = \<const0> ;
  assign ubmdmtdo_out[0] = \<const0> ;
  assign ubrsvdout_out[0] = \<const0> ;
  assign ubtxuart_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt_gtwizard_gtye4 \gen_gtwizard_gtye4_top.aurora_64b66b_25p78G_gt_gtwizard_gtye4_inst 
       (.bufgtce_out(bufgtce_out),
        .bufgtcemask_out(bufgtcemask_out),
        .bufgtdiv_out(bufgtdiv_out),
        .bufgtreset_out(bufgtreset_out),
        .bufgtrstmask_out(bufgtrstmask_out),
        .cdrstepdir_in(cdrstepdir_in),
        .cdrstepsq_in(cdrstepsq_in),
        .cdrstepsx_in(cdrstepsx_in),
        .cfgreset_in(cfgreset_in),
        .clkrsvd0_in(clkrsvd0_in),
        .clkrsvd1_in(clkrsvd1_in),
        .cpllfbclklost_out(cpllfbclklost_out),
        .cpllfreqlock_in(cpllfreqlock_in),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in(cplllockdetclk_in),
        .cplllocken_in(cplllocken_in),
        .cpllpd_in(cpllpd_in),
        .cpllrefclklost_out(cpllrefclklost_out),
        .cpllrefclksel_in(cpllrefclksel_in),
        .cpllreset_in(cpllreset_in),
        .dmonfiforeset_in(dmonfiforeset_in),
        .dmonitorclk_in(dmonitorclk_in),
        .dmonitorout_out(dmonitorout_out),
        .dmonitoroutclk_out(dmonitoroutclk_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drprst_in(drprst_in),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .freqos_in(freqos_in),
        .gtgrefclk_in(gtgrefclk_in),
        .gtnorthrefclk0_in(gtnorthrefclk0_in),
        .gtnorthrefclk1_in(gtnorthrefclk1_in),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk1_in(gtrefclk1_in),
        .gtrefclkmonitor_out(gtrefclkmonitor_out),
        .gtrsvd_in(gtrsvd_in),
        .gtrxresetsel_in(gtrxresetsel_in),
        .gtsouthrefclk0_in(gtsouthrefclk0_in),
        .gtsouthrefclk1_in(gtsouthrefclk1_in),
        .gttxresetsel_in(gttxresetsel_in),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .incpctrl_in(incpctrl_in),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in),
        .pcierategen3_out(pcierategen3_out),
        .pcierateidle_out(pcierateidle_out),
        .pcierateqpllpd_out(pcierateqpllpd_out),
        .pcierateqpllreset_out(pcierateqpllreset_out),
        .pcierstidle_in(pcierstidle_in),
        .pciersttxsyncstart_in(pciersttxsyncstart_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out(pcieusergen3rdy_out),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out),
        .pcieuserratedone_in(pcieuserratedone_in),
        .pcieuserratestart_out(pcieuserratestart_out),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(pcsrsvdout_out),
        .phystatus_out(phystatus_out),
        .pinrsrvdas_out(pinrsrvdas_out),
        .powerpresent_out(powerpresent_out),
        .qpll0clk_in(qpll0clk_in),
        .qpll0freqlock_in(qpll0freqlock_in),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll1clk_in(qpll1clk_in),
        .qpll1freqlock_in(qpll1freqlock_in),
        .qpll1refclk_in(qpll1refclk_in),
        .resetexception_out(resetexception_out),
        .resetovrd_in(resetovrd_in),
        .rx8b10ben_in(rx8b10ben_in),
        .rxafecfoken_in(rxafecfoken_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(rxbyteisaligned_out),
        .rxbyterealign_out(rxbyterealign_out),
        .rxcdrfreqreset_in(rxcdrfreqreset_in),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(rxcdrphdone_out),
        .rxcdrreset_in(rxcdrreset_in),
        .rxchanbondseq_out(rxchanbondseq_out),
        .rxchanisaligned_out(rxchanisaligned_out),
        .rxchanrealign_out(rxchanrealign_out),
        .rxchbonden_in(rxchbonden_in),
        .rxchbondi_in(rxchbondi_in),
        .rxchbondlevel_in(rxchbondlevel_in),
        .rxchbondmaster_in(rxchbondmaster_in),
        .rxchbondo_out(rxchbondo_out),
        .rxchbondslave_in(rxchbondslave_in),
        .rxckcaldone_out(rxckcaldone_out),
        .rxckcalreset_in(rxckcalreset_in),
        .rxckcalstart_in(rxckcalstart_in),
        .rxclkcorcnt_out(rxclkcorcnt_out),
        .rxcominitdet_out(rxcominitdet_out),
        .rxcommadet_out(rxcommadet_out),
        .rxcommadeten_in(rxcommadeten_in),
        .rxcomsasdet_out(rxcomsasdet_out),
        .rxcomwakedet_out(rxcomwakedet_out),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxdata_out(rxdata_out),
        .rxdataextendrsvd_out(rxdataextendrsvd_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfeagchold_in(rxdfeagchold_in),
        .rxdfeagcovrden_in(rxdfeagcovrden_in),
        .rxdfecfokfcnum_in(rxdfecfokfcnum_in),
        .rxdfecfokfen_in(rxdfecfokfen_in),
        .rxdfecfokfpulse_in(rxdfecfokfpulse_in),
        .rxdfecfokhold_in(rxdfecfokhold_in),
        .rxdfecfokovren_in(rxdfecfokovren_in),
        .rxdfekhhold_in(rxdfekhhold_in),
        .rxdfekhovrden_in(rxdfekhovrden_in),
        .rxdfelfhold_in(rxdfelfhold_in),
        .rxdfelfovrden_in(rxdfelfovrden_in),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxdfetap10hold_in(rxdfetap10hold_in),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in),
        .rxdfetap11hold_in(rxdfetap11hold_in),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in),
        .rxdfetap12hold_in(rxdfetap12hold_in),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in),
        .rxdfetap13hold_in(rxdfetap13hold_in),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in),
        .rxdfetap14hold_in(rxdfetap14hold_in),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in),
        .rxdfetap15hold_in(rxdfetap15hold_in),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in),
        .rxdfetap2hold_in(rxdfetap2hold_in),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in),
        .rxdfetap3hold_in(rxdfetap3hold_in),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in),
        .rxdfetap4hold_in(rxdfetap4hold_in),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in),
        .rxdfetap5hold_in(rxdfetap5hold_in),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in),
        .rxdfetap6hold_in(rxdfetap6hold_in),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in),
        .rxdfetap7hold_in(rxdfetap7hold_in),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in),
        .rxdfetap8hold_in(rxdfetap8hold_in),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in),
        .rxdfetap9hold_in(rxdfetap9hold_in),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in),
        .rxdfeuthold_in(rxdfeuthold_in),
        .rxdfeutovrden_in(rxdfeutovrden_in),
        .rxdfevphold_in(rxdfevphold_in),
        .rxdfevpovrden_in(rxdfevpovrden_in),
        .rxdfexyden_in(rxdfexyden_in),
        .rxdlybypass_in(rxdlybypass_in),
        .rxdlyen_in(rxdlyen_in),
        .rxdlyovrden_in(rxdlyovrden_in),
        .rxdlysreset_in(rxdlysreset_in),
        .rxdlysresetdone_out(rxdlysresetdone_out),
        .rxelecidle_out(rxelecidle_out),
        .rxelecidlemode_in(rxelecidlemode_in),
        .rxeqtraining_in(rxeqtraining_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlfpstresetdet_out(rxlfpstresetdet_out),
        .rxlfpsu2lpexitdet_out(rxlfpsu2lpexitdet_out),
        .rxlfpsu3wakedet_out(rxlfpsu3wakedet_out),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in(rxlpmgchold_in),
        .rxlpmgcovrden_in(rxlpmgcovrden_in),
        .rxlpmhfhold_in(rxlpmhfhold_in),
        .rxlpmhfovrden_in(rxlpmhfovrden_in),
        .rxlpmlfhold_in(rxlpmlfhold_in),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in),
        .rxlpmoshold_in(rxlpmoshold_in),
        .rxlpmosovrden_in(rxlpmosovrden_in),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(rxmonitorout_out),
        .rxmonitorsel_in(rxmonitorsel_in),
        .rxoobreset_in(rxoobreset_in),
        .rxoscalreset_in(rxoscalreset_in),
        .rxoshold_in(rxoshold_in),
        .rxosintdone_out(rxosintdone_out),
        .rxosintstarted_out(rxosintstarted_out),
        .rxosintstrobedone_out(rxosintstrobedone_out),
        .rxosintstrobestarted_out(rxosintstrobestarted_out),
        .rxosovrden_in(rxosovrden_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(rxoutclkfabric_out),
        .rxoutclkpcs_out(rxoutclkpcs_out),
        .rxoutclksel_in(rxoutclksel_in),
        .rxpcommaalignen_in(rxpcommaalignen_in),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxphalign_in(rxphalign_in),
        .rxphaligndone_out(rxphaligndone_out),
        .rxphalignen_in(rxphalignen_in),
        .rxphalignerr_out(rxphalignerr_out),
        .rxphdlypd_in(rxphdlypd_in),
        .rxphdlyreset_in(rxphdlyreset_in),
        .rxpllclksel_in(rxpllclksel_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxrate_in(rxrate_in),
        .rxratedone_out(rxratedone_out),
        .rxratemode_in(rxratemode_in),
        .rxrecclkout_out(rxrecclkout_out),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(rxslide_in),
        .rxsliderdy_out(rxsliderdy_out),
        .rxslipdone_out(rxslipdone_out),
        .rxslipoutclk_in(rxslipoutclk_in),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out),
        .rxslippma_in(rxslippma_in),
        .rxslippmardy_out(rxslippmardy_out),
        .rxstartofseq_out(rxstartofseq_out),
        .rxstatus_out(rxstatus_out),
        .rxsyncallin_in(rxsyncallin_in),
        .rxsyncdone_out(rxsyncdone_out),
        .rxsyncin_in(rxsyncin_in),
        .rxsyncmode_in(rxsyncmode_in),
        .rxsyncout_out(rxsyncout_out),
        .rxsysclksel_in(rxsysclksel_in),
        .rxtermination_in(rxtermination_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(rxvalid_out),
        .sigvalidclk_in(sigvalidclk_in),
        .tstin_in(tstin_in),
        .tx8b10bbypass_in(tx8b10bbypass_in),
        .tx8b10ben_in(tx8b10ben_in),
        .txbufstatus_out(txbufstatus_out),
        .txcomfinish_out(txcomfinish_out),
        .txcominit_in(txcominit_in),
        .txcomsas_in(txcomsas_in),
        .txcomwake_in(txcomwake_in),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdataextendrsvd_in(txdataextendrsvd_in),
        .txdccdone_out(txdccdone_out),
        .txdccforcestart_in(txdccforcestart_in),
        .txdccreset_in(txdccreset_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txdlybypass_in(txdlybypass_in),
        .txdlyen_in(txdlyen_in),
        .txdlyhold_in(txdlyhold_in),
        .txdlyovrden_in(txdlyovrden_in),
        .txdlysreset_in(txdlysreset_in),
        .txdlysresetdone_out(txdlysresetdone_out),
        .txdlyupdown_in(txdlyupdown_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txlfpstreset_in(txlfpstreset_in),
        .txlfpsu2lpexit_in(txlfpsu2lpexit_in),
        .txlfpsu3wake_in(txlfpsu3wake_in),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in(txmargin_in),
        .txmuxdcdexhold_in(txmuxdcdexhold_in),
        .txmuxdcdorwren_in(txmuxdcdorwren_in),
        .txoneszeros_in(txoneszeros_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(txoutclkfabric_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txphalign_in(txphalign_in),
        .txphaligndone_out(txphaligndone_out),
        .txphalignen_in(txphalignen_in),
        .txphdlypd_in(txphdlypd_in),
        .txphdlyreset_in(txphdlyreset_in),
        .txphdlytstclk_in(txphdlytstclk_in),
        .txphinit_in(txphinit_in),
        .txphinitdone_out(txphinitdone_out),
        .txphovrden_in(txphovrden_in),
        .txpippmen_in(txpippmen_in),
        .txpippmovrden_in(txpippmovrden_in),
        .txpippmpd_in(txpippmpd_in),
        .txpippmsel_in(txpippmsel_in),
        .txpippmstepsize_in(txpippmstepsize_in),
        .txpisopd_in(txpisopd_in),
        .txpllclksel_in(txpllclksel_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txrate_in(txrate_in),
        .txratedone_out(txratedone_out),
        .txratemode_in(txratemode_in),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txswing_in(txswing_in),
        .txsyncallin_in(txsyncallin_in),
        .txsyncdone_out(txsyncdone_out),
        .txsyncin_in(txsyncin_in),
        .txsyncmode_in(txsyncmode_in),
        .txsyncout_out(txsyncout_out),
        .txsysclksel_in(txsysclksel_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_gt_gtye4_channel_wrapper" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_gt_gtye4_channel_wrapper
   (bufgtce_out,
    bufgtreset_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitoroutclk_out,
    drprdy_out,
    eyescandataerror_out,
    \gen_gtwizard_gtye4.gtpowergood_int ,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    powerpresent_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxckcaldone_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    rxdata_out,
    dmonitorout_out,
    drpdo_out,
    pcsrsvdout_out,
    pinrsrvdas_out,
    rxctrl0_out,
    rxctrl1_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtcemask_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    rxmonitorout_out,
    bufgtdiv_out,
    \gen_powergood_delay.wait_cnt_reg[0] ,
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] ,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    \gen_gtwizard_gtye4.gtrxreset_int ,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    \gen_gtwizard_gtye4.gttxreset_ch_int ,
    gttxresetsel_in,
    gtyrxn_in,
    gtyrxp_in,
    incpctrl_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    \gen_gtwizard_gtye4.rxprogdivreset_int ,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxtermination_in,
    \gen_gtwizard_gtye4.rxuserrdy_int ,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdccforcestart_in,
    txdccreset_in,
    txdetectrx_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    \gen_powergood_delay.pwr_on_fsm_reg ,
    \gen_gtwizard_gtye4.txpmareset_ch_int ,
    txpolarity_in,
    txprbsforceerr_in,
    \gen_gtwizard_gtye4.txprogdivreset_int ,
    \gen_powergood_delay.pwr_on_fsm_reg_0 ,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    \gen_gtwizard_gtye4.txuserrdy_int ,
    txusrclk_in,
    txusrclk2_in,
    gtwiz_userdata_tx_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    tstin_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txdeemph_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txmargin_in,
    txoutclksel_in,
    TXRATE,
    rxdfecfokfcnum_in,
    rxprbssel_in,
    txprbssel_in,
    rxchbondi_in,
    txdiffctrl_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    rxckcalstart_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in,
    out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [0:0]bufgtce_out;
  output [0:0]bufgtreset_out;
  output [0:0]cpllfbclklost_out;
  output [0:0]cplllock_out;
  output [0:0]cpllrefclklost_out;
  output [0:0]dmonitoroutclk_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output \gen_gtwizard_gtye4.gtpowergood_int ;
  output [0:0]gtrefclkmonitor_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]pcierategen3_out;
  output [0:0]pcierateidle_out;
  output [0:0]pciesynctxsyncdone_out;
  output [0:0]pcieusergen3rdy_out;
  output [0:0]pcieuserphystatusrst_out;
  output [0:0]pcieuserratestart_out;
  output [0:0]phystatus_out;
  output [0:0]powerpresent_out;
  output [0:0]resetexception_out;
  output [0:0]rxbyteisaligned_out;
  output [0:0]rxbyterealign_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxcdrphdone_out;
  output [0:0]rxchanbondseq_out;
  output [0:0]rxchanisaligned_out;
  output [0:0]rxchanrealign_out;
  output [0:0]rxckcaldone_out;
  output [0:0]rxcominitdet_out;
  output [0:0]rxcommadet_out;
  output [0:0]rxcomsasdet_out;
  output [0:0]rxcomwakedet_out;
  output [0:0]rxdlysresetdone_out;
  output [0:0]rxelecidle_out;
  output [0:0]rxlfpstresetdet_out;
  output [0:0]rxlfpsu2lpexitdet_out;
  output [0:0]rxlfpsu3wakedet_out;
  output [0:0]rxosintdone_out;
  output [0:0]rxosintstarted_out;
  output [0:0]rxosintstrobedone_out;
  output [0:0]rxosintstrobestarted_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkfabric_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]rxphalignerr_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxratedone_out;
  output [0:0]rxrecclkout_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsliderdy_out;
  output [0:0]rxslipdone_out;
  output [0:0]rxslipoutclkrdy_out;
  output [0:0]rxslippmardy_out;
  output [0:0]rxsyncdone_out;
  output [0:0]rxsyncout_out;
  output [0:0]rxvalid_out;
  output [0:0]txcomfinish_out;
  output [0:0]txdccdone_out;
  output [0:0]txdlysresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txphaligndone_out;
  output [0:0]txphinitdone_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txratedone_out;
  output [0:0]txresetdone_out;
  output [0:0]txsyncdone_out;
  output [0:0]txsyncout_out;
  output [127:0]rxdata_out;
  output [15:0]dmonitorout_out;
  output [15:0]drpdo_out;
  output [15:0]pcsrsvdout_out;
  output [15:0]pinrsrvdas_out;
  output [15:0]rxctrl0_out;
  output [15:0]rxctrl1_out;
  output [1:0]pcierateqpllpd_out;
  output [1:0]pcierateqpllreset_out;
  output [1:0]rxclkcorcnt_out;
  output [1:0]rxdatavalid_out;
  output [1:0]rxheadervalid_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [2:0]bufgtcemask_out;
  output [2:0]bufgtrstmask_out;
  output [2:0]rxbufstatus_out;
  output [2:0]rxstatus_out;
  output [4:0]rxchbondo_out;
  output [5:0]rxheader_out;
  output [7:0]rxctrl2_out;
  output [7:0]rxctrl3_out;
  output [7:0]rxdataextendrsvd_out;
  output [7:0]rxmonitorout_out;
  output [8:0]bufgtdiv_out;
  output \gen_powergood_delay.wait_cnt_reg[0] ;
  output \gen_powergood_delay.intclk_rrst_n_r_reg[0] ;
  input [0:0]cdrstepdir_in;
  input [0:0]cdrstepsq_in;
  input [0:0]cdrstepsx_in;
  input [0:0]cfgreset_in;
  input [0:0]clkrsvd0_in;
  input [0:0]clkrsvd1_in;
  input [0:0]cpllfreqlock_in;
  input [0:0]cplllockdetclk_in;
  input [0:0]cplllocken_in;
  input [0:0]cpllpd_in;
  input [0:0]cpllreset_in;
  input [0:0]dmonfiforeset_in;
  input [0:0]dmonitorclk_in;
  input [0:0]drpclk_in;
  input [0:0]drpen_in;
  input [0:0]drprst_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]freqos_in;
  input [0:0]gtgrefclk_in;
  input [0:0]gtnorthrefclk0_in;
  input [0:0]gtnorthrefclk1_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtrefclk1_in;
  input \gen_gtwizard_gtye4.gtrxreset_int ;
  input [0:0]gtrxresetsel_in;
  input [0:0]gtsouthrefclk0_in;
  input [0:0]gtsouthrefclk1_in;
  input \gen_gtwizard_gtye4.gttxreset_ch_int ;
  input [0:0]gttxresetsel_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [0:0]incpctrl_in;
  input [0:0]pcieeqrxeqadaptdone_in;
  input [0:0]pcierstidle_in;
  input [0:0]pciersttxsyncstart_in;
  input [0:0]pcieuserratedone_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0freqlock_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1freqlock_in;
  input [0:0]qpll1refclk_in;
  input [0:0]resetovrd_in;
  input [0:0]rx8b10ben_in;
  input [0:0]rxafecfoken_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrfreqreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxcdrreset_in;
  input [0:0]rxchbonden_in;
  input [0:0]rxchbondmaster_in;
  input [0:0]rxchbondslave_in;
  input [0:0]rxckcalreset_in;
  input [0:0]rxcommadeten_in;
  input [0:0]rxdfeagchold_in;
  input [0:0]rxdfeagcovrden_in;
  input [0:0]rxdfecfokfen_in;
  input [0:0]rxdfecfokfpulse_in;
  input [0:0]rxdfecfokhold_in;
  input [0:0]rxdfecfokovren_in;
  input [0:0]rxdfekhhold_in;
  input [0:0]rxdfekhovrden_in;
  input [0:0]rxdfelfhold_in;
  input [0:0]rxdfelfovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxdfetap10hold_in;
  input [0:0]rxdfetap10ovrden_in;
  input [0:0]rxdfetap11hold_in;
  input [0:0]rxdfetap11ovrden_in;
  input [0:0]rxdfetap12hold_in;
  input [0:0]rxdfetap12ovrden_in;
  input [0:0]rxdfetap13hold_in;
  input [0:0]rxdfetap13ovrden_in;
  input [0:0]rxdfetap14hold_in;
  input [0:0]rxdfetap14ovrden_in;
  input [0:0]rxdfetap15hold_in;
  input [0:0]rxdfetap15ovrden_in;
  input [0:0]rxdfetap2hold_in;
  input [0:0]rxdfetap2ovrden_in;
  input [0:0]rxdfetap3hold_in;
  input [0:0]rxdfetap3ovrden_in;
  input [0:0]rxdfetap4hold_in;
  input [0:0]rxdfetap4ovrden_in;
  input [0:0]rxdfetap5hold_in;
  input [0:0]rxdfetap5ovrden_in;
  input [0:0]rxdfetap6hold_in;
  input [0:0]rxdfetap6ovrden_in;
  input [0:0]rxdfetap7hold_in;
  input [0:0]rxdfetap7ovrden_in;
  input [0:0]rxdfetap8hold_in;
  input [0:0]rxdfetap8ovrden_in;
  input [0:0]rxdfetap9hold_in;
  input [0:0]rxdfetap9ovrden_in;
  input [0:0]rxdfeuthold_in;
  input [0:0]rxdfeutovrden_in;
  input [0:0]rxdfevphold_in;
  input [0:0]rxdfevpovrden_in;
  input [0:0]rxdfexyden_in;
  input [0:0]rxdlybypass_in;
  input [0:0]rxdlyen_in;
  input [0:0]rxdlyovrden_in;
  input [0:0]rxdlysreset_in;
  input [0:0]rxeqtraining_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxlpmgchold_in;
  input [0:0]rxlpmgcovrden_in;
  input [0:0]rxlpmhfhold_in;
  input [0:0]rxlpmhfovrden_in;
  input [0:0]rxlpmlfhold_in;
  input [0:0]rxlpmlfklovrden_in;
  input [0:0]rxlpmoshold_in;
  input [0:0]rxlpmosovrden_in;
  input [0:0]rxmcommaalignen_in;
  input [0:0]rxoobreset_in;
  input [0:0]rxoscalreset_in;
  input [0:0]rxoshold_in;
  input [0:0]rxosovrden_in;
  input [0:0]rxpcommaalignen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxphalign_in;
  input [0:0]rxphalignen_in;
  input [0:0]rxphdlypd_in;
  input [0:0]rxphdlyreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input \gen_gtwizard_gtye4.rxprogdivreset_int ;
  input [0:0]rxratemode_in;
  input [0:0]rxslide_in;
  input [0:0]rxslipoutclk_in;
  input [0:0]rxslippma_in;
  input [0:0]rxsyncallin_in;
  input [0:0]rxsyncin_in;
  input [0:0]rxsyncmode_in;
  input [0:0]rxtermination_in;
  input \gen_gtwizard_gtye4.rxuserrdy_int ;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]sigvalidclk_in;
  input [0:0]tx8b10ben_in;
  input [0:0]txcominit_in;
  input [0:0]txcomsas_in;
  input [0:0]txcomwake_in;
  input [0:0]txdccforcestart_in;
  input [0:0]txdccreset_in;
  input [0:0]txdetectrx_in;
  input [0:0]txdlybypass_in;
  input [0:0]txdlyen_in;
  input [0:0]txdlyhold_in;
  input [0:0]txdlyovrden_in;
  input [0:0]txdlysreset_in;
  input [0:0]txdlyupdown_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txlfpstreset_in;
  input [0:0]txlfpsu2lpexit_in;
  input [0:0]txlfpsu3wake_in;
  input [0:0]txmuxdcdexhold_in;
  input [0:0]txmuxdcdorwren_in;
  input [0:0]txoneszeros_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txphalign_in;
  input [0:0]txphalignen_in;
  input [0:0]txphdlypd_in;
  input [0:0]txphdlyreset_in;
  input [0:0]txphdlytstclk_in;
  input [0:0]txphinit_in;
  input [0:0]txphovrden_in;
  input [0:0]txpippmen_in;
  input [0:0]txpippmovrden_in;
  input [0:0]txpippmpd_in;
  input [0:0]txpippmsel_in;
  input \gen_powergood_delay.pwr_on_fsm_reg ;
  input \gen_gtwizard_gtye4.txpmareset_ch_int ;
  input [0:0]txpolarity_in;
  input [0:0]txprbsforceerr_in;
  input \gen_gtwizard_gtye4.txprogdivreset_int ;
  input \gen_powergood_delay.pwr_on_fsm_reg_0 ;
  input [0:0]txswing_in;
  input [0:0]txsyncallin_in;
  input [0:0]txsyncin_in;
  input [0:0]txsyncmode_in;
  input \gen_gtwizard_gtye4.txuserrdy_int ;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [63:0]gtwiz_userdata_tx_in;
  input [15:0]drpdi_in;
  input [15:0]gtrsvd_in;
  input [15:0]pcsrsvdin_in;
  input [15:0]txctrl0_in;
  input [15:0]txctrl1_in;
  input [19:0]tstin_in;
  input [1:0]rxelecidlemode_in;
  input [1:0]rxmonitorsel_in;
  input [1:0]rxpd_in;
  input [1:0]rxpllclksel_in;
  input [1:0]rxsysclksel_in;
  input [1:0]txdeemph_in;
  input [1:0]txpd_in;
  input [1:0]txpllclksel_in;
  input [1:0]txsysclksel_in;
  input [2:0]cpllrefclksel_in;
  input [2:0]loopback_in;
  input [2:0]rxchbondlevel_in;
  input [2:0]rxoutclksel_in;
  input [2:0]rxrate_in;
  input [2:0]txmargin_in;
  input [2:0]txoutclksel_in;
  input [2:0]TXRATE;
  input [3:0]rxdfecfokfcnum_in;
  input [3:0]rxprbssel_in;
  input [3:0]txprbssel_in;
  input [4:0]rxchbondi_in;
  input [4:0]txdiffctrl_in;
  input [4:0]txpippmstepsize_in;
  input [4:0]txpostcursor_in;
  input [4:0]txprecursor_in;
  input [5:0]txheader_in;
  input [6:0]rxckcalstart_in;
  input [6:0]txmaincursor_in;
  input [6:0]txsequence_in;
  input [7:0]tx8b10bbypass_in;
  input [7:0]txctrl2_in;
  input [7:0]txdataextendrsvd_in;
  input [9:0]drpaddr_in;
  input out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [2:0]TXRATE;
  wire [0:0]bufgtce_out;
  wire [2:0]bufgtcemask_out;
  wire [8:0]bufgtdiv_out;
  wire [0:0]bufgtreset_out;
  wire [2:0]bufgtrstmask_out;
  wire [0:0]cdrstepdir_in;
  wire [0:0]cdrstepsq_in;
  wire [0:0]cdrstepsx_in;
  wire [0:0]cfgreset_in;
  wire [0:0]clkrsvd0_in;
  wire [0:0]clkrsvd1_in;
  wire [0:0]cpllfbclklost_out;
  wire [0:0]cpllfreqlock_in;
  wire [0:0]cplllock_out;
  wire [0:0]cplllockdetclk_in;
  wire [0:0]cplllocken_in;
  wire [0:0]cpllpd_in;
  wire [0:0]cpllrefclklost_out;
  wire [2:0]cpllrefclksel_in;
  wire [0:0]cpllreset_in;
  wire [0:0]dmonfiforeset_in;
  wire [0:0]dmonitorclk_in;
  wire [15:0]dmonitorout_out;
  wire [0:0]dmonitoroutclk_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drprst_in;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]freqos_in;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txpmareset_ch_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[0] ;
  wire \gen_powergood_delay.pwr_on_fsm_reg ;
  wire \gen_powergood_delay.pwr_on_fsm_reg_0 ;
  wire \gen_powergood_delay.wait_cnt_reg[0] ;
  wire [0:0]gtgrefclk_in;
  wire [0:0]gtnorthrefclk0_in;
  wire [0:0]gtnorthrefclk1_in;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtrefclk1_in;
  wire [0:0]gtrefclkmonitor_out;
  wire [15:0]gtrsvd_in;
  wire [0:0]gtrxresetsel_in;
  wire [0:0]gtsouthrefclk0_in;
  wire [0:0]gtsouthrefclk1_in;
  wire [0:0]gttxresetsel_in;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [0:0]incpctrl_in;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire out;
  wire [0:0]pcieeqrxeqadaptdone_in;
  wire [0:0]pcierategen3_out;
  wire [0:0]pcierateidle_out;
  wire [1:0]pcierateqpllpd_out;
  wire [1:0]pcierateqpllreset_out;
  wire [0:0]pcierstidle_in;
  wire [0:0]pciersttxsyncstart_in;
  wire [0:0]pciesynctxsyncdone_out;
  wire [0:0]pcieusergen3rdy_out;
  wire [0:0]pcieuserphystatusrst_out;
  wire [0:0]pcieuserratedone_in;
  wire [0:0]pcieuserratestart_out;
  wire [15:0]pcsrsvdin_in;
  wire [15:0]pcsrsvdout_out;
  wire [0:0]phystatus_out;
  wire [15:0]pinrsrvdas_out;
  wire [0:0]powerpresent_out;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0freqlock_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1freqlock_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]resetexception_out;
  wire [0:0]resetovrd_in;
  wire [0:0]rx8b10ben_in;
  wire [0:0]rxafecfoken_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxbyteisaligned_out;
  wire [0:0]rxbyterealign_out;
  wire [0:0]rxcdrfreqreset_in;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]rxcdrphdone_out;
  wire [0:0]rxcdrreset_in;
  wire [0:0]rxchanbondseq_out;
  wire [0:0]rxchanisaligned_out;
  wire [0:0]rxchanrealign_out;
  wire [0:0]rxchbonden_in;
  wire [4:0]rxchbondi_in;
  wire [2:0]rxchbondlevel_in;
  wire [0:0]rxchbondmaster_in;
  wire [4:0]rxchbondo_out;
  wire [0:0]rxchbondslave_in;
  wire [0:0]rxckcaldone_out;
  wire [0:0]rxckcalreset_in;
  wire [6:0]rxckcalstart_in;
  wire [1:0]rxclkcorcnt_out;
  wire [0:0]rxcominitdet_out;
  wire [0:0]rxcommadet_out;
  wire [0:0]rxcommadeten_in;
  wire [0:0]rxcomsasdet_out;
  wire [0:0]rxcomwakedet_out;
  wire [15:0]rxctrl0_out;
  wire [15:0]rxctrl1_out;
  wire [7:0]rxctrl2_out;
  wire [7:0]rxctrl3_out;
  wire [127:0]rxdata_out;
  wire [7:0]rxdataextendrsvd_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfeagchold_in;
  wire [0:0]rxdfeagcovrden_in;
  wire [3:0]rxdfecfokfcnum_in;
  wire [0:0]rxdfecfokfen_in;
  wire [0:0]rxdfecfokfpulse_in;
  wire [0:0]rxdfecfokhold_in;
  wire [0:0]rxdfecfokovren_in;
  wire [0:0]rxdfekhhold_in;
  wire [0:0]rxdfekhovrden_in;
  wire [0:0]rxdfelfhold_in;
  wire [0:0]rxdfelfovrden_in;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxdfetap10hold_in;
  wire [0:0]rxdfetap10ovrden_in;
  wire [0:0]rxdfetap11hold_in;
  wire [0:0]rxdfetap11ovrden_in;
  wire [0:0]rxdfetap12hold_in;
  wire [0:0]rxdfetap12ovrden_in;
  wire [0:0]rxdfetap13hold_in;
  wire [0:0]rxdfetap13ovrden_in;
  wire [0:0]rxdfetap14hold_in;
  wire [0:0]rxdfetap14ovrden_in;
  wire [0:0]rxdfetap15hold_in;
  wire [0:0]rxdfetap15ovrden_in;
  wire [0:0]rxdfetap2hold_in;
  wire [0:0]rxdfetap2ovrden_in;
  wire [0:0]rxdfetap3hold_in;
  wire [0:0]rxdfetap3ovrden_in;
  wire [0:0]rxdfetap4hold_in;
  wire [0:0]rxdfetap4ovrden_in;
  wire [0:0]rxdfetap5hold_in;
  wire [0:0]rxdfetap5ovrden_in;
  wire [0:0]rxdfetap6hold_in;
  wire [0:0]rxdfetap6ovrden_in;
  wire [0:0]rxdfetap7hold_in;
  wire [0:0]rxdfetap7ovrden_in;
  wire [0:0]rxdfetap8hold_in;
  wire [0:0]rxdfetap8ovrden_in;
  wire [0:0]rxdfetap9hold_in;
  wire [0:0]rxdfetap9ovrden_in;
  wire [0:0]rxdfeuthold_in;
  wire [0:0]rxdfeutovrden_in;
  wire [0:0]rxdfevphold_in;
  wire [0:0]rxdfevpovrden_in;
  wire [0:0]rxdfexyden_in;
  wire [0:0]rxdlybypass_in;
  wire [0:0]rxdlyen_in;
  wire [0:0]rxdlyovrden_in;
  wire [0:0]rxdlysreset_in;
  wire [0:0]rxdlysresetdone_out;
  wire [0:0]rxelecidle_out;
  wire [1:0]rxelecidlemode_in;
  wire [0:0]rxeqtraining_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlfpstresetdet_out;
  wire [0:0]rxlfpsu2lpexitdet_out;
  wire [0:0]rxlfpsu3wakedet_out;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxlpmgchold_in;
  wire [0:0]rxlpmgcovrden_in;
  wire [0:0]rxlpmhfhold_in;
  wire [0:0]rxlpmhfovrden_in;
  wire [0:0]rxlpmlfhold_in;
  wire [0:0]rxlpmlfklovrden_in;
  wire [0:0]rxlpmoshold_in;
  wire [0:0]rxlpmosovrden_in;
  wire [0:0]rxmcommaalignen_in;
  wire [7:0]rxmonitorout_out;
  wire [1:0]rxmonitorsel_in;
  wire [0:0]rxoobreset_in;
  wire [0:0]rxoscalreset_in;
  wire [0:0]rxoshold_in;
  wire [0:0]rxosintdone_out;
  wire [0:0]rxosintstarted_out;
  wire [0:0]rxosintstrobedone_out;
  wire [0:0]rxosintstrobestarted_out;
  wire [0:0]rxosovrden_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxoutclkfabric_out;
  wire [0:0]rxoutclkpcs_out;
  wire [2:0]rxoutclksel_in;
  wire [0:0]rxpcommaalignen_in;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxphalign_in;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxphalignen_in;
  wire [0:0]rxphalignerr_out;
  wire [0:0]rxphdlypd_in;
  wire [0:0]rxphdlyreset_in;
  wire [1:0]rxpllclksel_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire [2:0]rxrate_in;
  wire [0:0]rxratedone_out;
  wire [0:0]rxratemode_in;
  wire [0:0]rxrecclkout_out;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxslide_in;
  wire [0:0]rxsliderdy_out;
  wire [0:0]rxslipdone_out;
  wire [0:0]rxslipoutclk_in;
  wire [0:0]rxslipoutclkrdy_out;
  wire [0:0]rxslippma_in;
  wire [0:0]rxslippmardy_out;
  wire [1:0]rxstartofseq_out;
  wire [2:0]rxstatus_out;
  wire [0:0]rxsyncallin_in;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxsyncin_in;
  wire [0:0]rxsyncmode_in;
  wire [0:0]rxsyncout_out;
  wire [1:0]rxsysclksel_in;
  wire [0:0]rxtermination_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [0:0]rxvalid_out;
  wire [0:0]sigvalidclk_in;
  wire [19:0]tstin_in;
  wire [7:0]tx8b10bbypass_in;
  wire [0:0]tx8b10ben_in;
  wire [1:0]txbufstatus_out;
  wire [0:0]txcomfinish_out;
  wire [0:0]txcominit_in;
  wire [0:0]txcomsas_in;
  wire [0:0]txcomwake_in;
  wire [15:0]txctrl0_in;
  wire [15:0]txctrl1_in;
  wire [7:0]txctrl2_in;
  wire [7:0]txdataextendrsvd_in;
  wire [0:0]txdccdone_out;
  wire [0:0]txdccforcestart_in;
  wire [0:0]txdccreset_in;
  wire [1:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [4:0]txdiffctrl_in;
  wire [0:0]txdlybypass_in;
  wire [0:0]txdlyen_in;
  wire [0:0]txdlyhold_in;
  wire [0:0]txdlyovrden_in;
  wire [0:0]txdlysreset_in;
  wire [0:0]txdlysresetdone_out;
  wire [0:0]txdlyupdown_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txlfpstreset_in;
  wire [0:0]txlfpsu2lpexit_in;
  wire [0:0]txlfpsu3wake_in;
  wire [6:0]txmaincursor_in;
  wire [2:0]txmargin_in;
  wire [0:0]txmuxdcdexhold_in;
  wire [0:0]txmuxdcdorwren_in;
  wire [0:0]txoneszeros_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txoutclkfabric_out;
  wire [0:0]txoutclkpcs_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txphalign_in;
  wire [0:0]txphaligndone_out;
  wire [0:0]txphalignen_in;
  wire [0:0]txphdlypd_in;
  wire [0:0]txphdlyreset_in;
  wire [0:0]txphdlytstclk_in;
  wire [0:0]txphinit_in;
  wire [0:0]txphinitdone_out;
  wire [0:0]txphovrden_in;
  wire [0:0]txpippmen_in;
  wire [0:0]txpippmovrden_in;
  wire [0:0]txpippmpd_in;
  wire [0:0]txpippmsel_in;
  wire [4:0]txpippmstepsize_in;
  wire [1:0]txpllclksel_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire [0:0]txratedone_out;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txswing_in;
  wire [0:0]txsyncallin_in;
  wire [0:0]txsyncdone_out;
  wire [0:0]txsyncin_in;
  wire [0:0]txsyncmode_in;
  wire [0:0]txsyncout_out;
  wire [1:0]txsysclksel_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_gtye4_channel channel_inst
       (.TXRATE(TXRATE),
        .bufgtce_out(bufgtce_out),
        .bufgtcemask_out(bufgtcemask_out),
        .bufgtdiv_out(bufgtdiv_out),
        .bufgtreset_out(bufgtreset_out),
        .bufgtrstmask_out(bufgtrstmask_out),
        .cdrstepdir_in(cdrstepdir_in),
        .cdrstepsq_in(cdrstepsq_in),
        .cdrstepsx_in(cdrstepsx_in),
        .cfgreset_in(cfgreset_in),
        .clkrsvd0_in(clkrsvd0_in),
        .clkrsvd1_in(clkrsvd1_in),
        .cpllfbclklost_out(cpllfbclklost_out),
        .cpllfreqlock_in(cpllfreqlock_in),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in(cplllockdetclk_in),
        .cplllocken_in(cplllocken_in),
        .cpllpd_in(cpllpd_in),
        .cpllrefclklost_out(cpllrefclklost_out),
        .cpllrefclksel_in(cpllrefclksel_in),
        .cpllreset_in(cpllreset_in),
        .dmonfiforeset_in(dmonfiforeset_in),
        .dmonitorclk_in(dmonitorclk_in),
        .dmonitorout_out(dmonitorout_out),
        .dmonitoroutclk_out(dmonitoroutclk_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drprst_in(drprst_in),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .freqos_in(freqos_in),
        .\gen_gtwizard_gtye4.gtpowergood_int (\gen_gtwizard_gtye4.gtpowergood_int ),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .\gen_gtwizard_gtye4.gttxreset_ch_int (\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .\gen_gtwizard_gtye4.txpmareset_ch_int (\gen_gtwizard_gtye4.txpmareset_ch_int ),
        .\gen_gtwizard_gtye4.txprogdivreset_int (\gen_gtwizard_gtye4.txprogdivreset_int ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[0] (\gen_powergood_delay.intclk_rrst_n_r_reg[0] ),
        .\gen_powergood_delay.pwr_on_fsm_reg (\gen_powergood_delay.pwr_on_fsm_reg ),
        .\gen_powergood_delay.pwr_on_fsm_reg_0 (\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .\gen_powergood_delay.wait_cnt_reg[0] (\gen_powergood_delay.wait_cnt_reg[0] ),
        .gtgrefclk_in(gtgrefclk_in),
        .gtnorthrefclk0_in(gtnorthrefclk0_in),
        .gtnorthrefclk1_in(gtnorthrefclk1_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk1_in(gtrefclk1_in),
        .gtrefclkmonitor_out(gtrefclkmonitor_out),
        .gtrsvd_in(gtrsvd_in),
        .gtrxresetsel_in(gtrxresetsel_in),
        .gtsouthrefclk0_in(gtsouthrefclk0_in),
        .gtsouthrefclk1_in(gtsouthrefclk1_in),
        .gttxresetsel_in(gttxresetsel_in),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .incpctrl_in(incpctrl_in),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .out(out),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in),
        .pcierategen3_out(pcierategen3_out),
        .pcierateidle_out(pcierateidle_out),
        .pcierateqpllpd_out(pcierateqpllpd_out),
        .pcierateqpllreset_out(pcierateqpllreset_out),
        .pcierstidle_in(pcierstidle_in),
        .pciersttxsyncstart_in(pciersttxsyncstart_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out(pcieusergen3rdy_out),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out),
        .pcieuserratedone_in(pcieuserratedone_in),
        .pcieuserratestart_out(pcieuserratestart_out),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(pcsrsvdout_out),
        .phystatus_out(phystatus_out),
        .pinrsrvdas_out(pinrsrvdas_out),
        .powerpresent_out(powerpresent_out),
        .qpll0clk_in(qpll0clk_in),
        .qpll0freqlock_in(qpll0freqlock_in),
        .qpll0refclk_in(qpll0refclk_in),
        .qpll1clk_in(qpll1clk_in),
        .qpll1freqlock_in(qpll1freqlock_in),
        .qpll1refclk_in(qpll1refclk_in),
        .resetexception_out(resetexception_out),
        .resetovrd_in(resetovrd_in),
        .rx8b10ben_in(rx8b10ben_in),
        .rxafecfoken_in(rxafecfoken_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(rxbyteisaligned_out),
        .rxbyterealign_out(rxbyterealign_out),
        .rxcdrfreqreset_in(rxcdrfreqreset_in),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(rxcdrphdone_out),
        .rxcdrreset_in(rxcdrreset_in),
        .rxchanbondseq_out(rxchanbondseq_out),
        .rxchanisaligned_out(rxchanisaligned_out),
        .rxchanrealign_out(rxchanrealign_out),
        .rxchbonden_in(rxchbonden_in),
        .rxchbondi_in(rxchbondi_in),
        .rxchbondlevel_in(rxchbondlevel_in),
        .rxchbondmaster_in(rxchbondmaster_in),
        .rxchbondo_out(rxchbondo_out),
        .rxchbondslave_in(rxchbondslave_in),
        .rxckcaldone_out(rxckcaldone_out),
        .rxckcalreset_in(rxckcalreset_in),
        .rxckcalstart_in(rxckcalstart_in),
        .rxclkcorcnt_out(rxclkcorcnt_out),
        .rxcominitdet_out(rxcominitdet_out),
        .rxcommadet_out(rxcommadet_out),
        .rxcommadeten_in(rxcommadeten_in),
        .rxcomsasdet_out(rxcomsasdet_out),
        .rxcomwakedet_out(rxcomwakedet_out),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxdata_out(rxdata_out),
        .rxdataextendrsvd_out(rxdataextendrsvd_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfeagchold_in(rxdfeagchold_in),
        .rxdfeagcovrden_in(rxdfeagcovrden_in),
        .rxdfecfokfcnum_in(rxdfecfokfcnum_in),
        .rxdfecfokfen_in(rxdfecfokfen_in),
        .rxdfecfokfpulse_in(rxdfecfokfpulse_in),
        .rxdfecfokhold_in(rxdfecfokhold_in),
        .rxdfecfokovren_in(rxdfecfokovren_in),
        .rxdfekhhold_in(rxdfekhhold_in),
        .rxdfekhovrden_in(rxdfekhovrden_in),
        .rxdfelfhold_in(rxdfelfhold_in),
        .rxdfelfovrden_in(rxdfelfovrden_in),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxdfetap10hold_in(rxdfetap10hold_in),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in),
        .rxdfetap11hold_in(rxdfetap11hold_in),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in),
        .rxdfetap12hold_in(rxdfetap12hold_in),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in),
        .rxdfetap13hold_in(rxdfetap13hold_in),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in),
        .rxdfetap14hold_in(rxdfetap14hold_in),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in),
        .rxdfetap15hold_in(rxdfetap15hold_in),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in),
        .rxdfetap2hold_in(rxdfetap2hold_in),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in),
        .rxdfetap3hold_in(rxdfetap3hold_in),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in),
        .rxdfetap4hold_in(rxdfetap4hold_in),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in),
        .rxdfetap5hold_in(rxdfetap5hold_in),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in),
        .rxdfetap6hold_in(rxdfetap6hold_in),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in),
        .rxdfetap7hold_in(rxdfetap7hold_in),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in),
        .rxdfetap8hold_in(rxdfetap8hold_in),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in),
        .rxdfetap9hold_in(rxdfetap9hold_in),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in),
        .rxdfeuthold_in(rxdfeuthold_in),
        .rxdfeutovrden_in(rxdfeutovrden_in),
        .rxdfevphold_in(rxdfevphold_in),
        .rxdfevpovrden_in(rxdfevpovrden_in),
        .rxdfexyden_in(rxdfexyden_in),
        .rxdlybypass_in(rxdlybypass_in),
        .rxdlyen_in(rxdlyen_in),
        .rxdlyovrden_in(rxdlyovrden_in),
        .rxdlysreset_in(rxdlysreset_in),
        .rxdlysresetdone_out(rxdlysresetdone_out),
        .rxelecidle_out(rxelecidle_out),
        .rxelecidlemode_in(rxelecidlemode_in),
        .rxeqtraining_in(rxeqtraining_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlfpstresetdet_out(rxlfpstresetdet_out),
        .rxlfpsu2lpexitdet_out(rxlfpsu2lpexitdet_out),
        .rxlfpsu3wakedet_out(rxlfpsu3wakedet_out),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in(rxlpmgchold_in),
        .rxlpmgcovrden_in(rxlpmgcovrden_in),
        .rxlpmhfhold_in(rxlpmhfhold_in),
        .rxlpmhfovrden_in(rxlpmhfovrden_in),
        .rxlpmlfhold_in(rxlpmlfhold_in),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in),
        .rxlpmoshold_in(rxlpmoshold_in),
        .rxlpmosovrden_in(rxlpmosovrden_in),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(rxmonitorout_out),
        .rxmonitorsel_in(rxmonitorsel_in),
        .rxoobreset_in(rxoobreset_in),
        .rxoscalreset_in(rxoscalreset_in),
        .rxoshold_in(rxoshold_in),
        .rxosintdone_out(rxosintdone_out),
        .rxosintstarted_out(rxosintstarted_out),
        .rxosintstrobedone_out(rxosintstrobedone_out),
        .rxosintstrobestarted_out(rxosintstrobestarted_out),
        .rxosovrden_in(rxosovrden_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(rxoutclkfabric_out),
        .rxoutclkpcs_out(rxoutclkpcs_out),
        .rxoutclksel_in(rxoutclksel_in),
        .rxpcommaalignen_in(rxpcommaalignen_in),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxphalign_in(rxphalign_in),
        .rxphaligndone_out(rxphaligndone_out),
        .rxphalignen_in(rxphalignen_in),
        .rxphalignerr_out(rxphalignerr_out),
        .rxphdlypd_in(rxphdlypd_in),
        .rxphdlyreset_in(rxphdlyreset_in),
        .rxpllclksel_in(rxpllclksel_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxrate_in(rxrate_in),
        .rxratedone_out(rxratedone_out),
        .rxratemode_in(rxratemode_in),
        .rxrecclkout_out(rxrecclkout_out),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(rxslide_in),
        .rxsliderdy_out(rxsliderdy_out),
        .rxslipdone_out(rxslipdone_out),
        .rxslipoutclk_in(rxslipoutclk_in),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out),
        .rxslippma_in(rxslippma_in),
        .rxslippmardy_out(rxslippmardy_out),
        .rxstartofseq_out(rxstartofseq_out),
        .rxstatus_out(rxstatus_out),
        .rxsyncallin_in(rxsyncallin_in),
        .rxsyncdone_out(rxsyncdone_out),
        .rxsyncin_in(rxsyncin_in),
        .rxsyncmode_in(rxsyncmode_in),
        .rxsyncout_out(rxsyncout_out),
        .rxsysclksel_in(rxsysclksel_in),
        .rxtermination_in(rxtermination_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(rxvalid_out),
        .sigvalidclk_in(sigvalidclk_in),
        .tstin_in(tstin_in),
        .tx8b10bbypass_in(tx8b10bbypass_in),
        .tx8b10ben_in(tx8b10ben_in),
        .txbufstatus_out(txbufstatus_out),
        .txcomfinish_out(txcomfinish_out),
        .txcominit_in(txcominit_in),
        .txcomsas_in(txcomsas_in),
        .txcomwake_in(txcomwake_in),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdataextendrsvd_in(txdataextendrsvd_in),
        .txdccdone_out(txdccdone_out),
        .txdccforcestart_in(txdccforcestart_in),
        .txdccreset_in(txdccreset_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txdlybypass_in(txdlybypass_in),
        .txdlyen_in(txdlyen_in),
        .txdlyhold_in(txdlyhold_in),
        .txdlyovrden_in(txdlyovrden_in),
        .txdlysreset_in(txdlysreset_in),
        .txdlysresetdone_out(txdlysresetdone_out),
        .txdlyupdown_in(txdlyupdown_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txlfpstreset_in(txlfpstreset_in),
        .txlfpsu2lpexit_in(txlfpsu2lpexit_in),
        .txlfpsu3wake_in(txlfpsu3wake_in),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in(txmargin_in),
        .txmuxdcdexhold_in(txmuxdcdexhold_in),
        .txmuxdcdorwren_in(txmuxdcdorwren_in),
        .txoneszeros_in(txoneszeros_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(txoutclkfabric_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txphalign_in(txphalign_in),
        .txphaligndone_out(txphaligndone_out),
        .txphalignen_in(txphalignen_in),
        .txphdlypd_in(txphdlypd_in),
        .txphdlyreset_in(txphdlyreset_in),
        .txphdlytstclk_in(txphdlytstclk_in),
        .txphinit_in(txphinit_in),
        .txphinitdone_out(txphinitdone_out),
        .txphovrden_in(txphovrden_in),
        .txpippmen_in(txpippmen_in),
        .txpippmovrden_in(txpippmovrden_in),
        .txpippmpd_in(txpippmpd_in),
        .txpippmsel_in(txpippmsel_in),
        .txpippmstepsize_in(txpippmstepsize_in),
        .txpllclksel_in(txpllclksel_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txratedone_out(txratedone_out),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txswing_in(txswing_in),
        .txsyncallin_in(txsyncallin_in),
        .txsyncdone_out(txsyncdone_out),
        .txsyncin_in(txsyncin_in),
        .txsyncmode_in(txsyncmode_in),
        .txsyncout_out(txsyncout_out),
        .txsysclksel_in(txsysclksel_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync
   (RESET,
    SR,
    pma_init,
    init_clk,
    link_reset_0_c);
  output RESET;
  output [0:0]SR;
  input pma_init;
  input init_clk;
  input link_reset_0_c;

  wire RESET;
  wire [0:0]SR;
  wire init_clk;
  wire link_reset_0_c;
  wire pma_init;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    \cdr_reset_fsm_r[1]_i_1 
       (.I0(RESET),
        .I1(link_reset_0_c),
        .O(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(pma_init),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(RESET),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_0
   (sysreset_to_core_sync,
    sysreset_to_core,
    user_clk);
  output sysreset_to_core_sync;
  input sysreset_to_core;
  input user_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire sysreset_to_core;
  wire sysreset_to_core_sync;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(sysreset_to_core),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(sysreset_to_core_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_1
   (link_reset_sync,
    link_reset_out,
    user_clk);
  output link_reset_sync;
  input link_reset_out;
  input user_clk;

  wire link_reset_out;
  wire link_reset_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(link_reset_out),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(link_reset_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_2
   (power_down_sync,
    power_down,
    user_clk);
  output power_down_sync;
  input power_down;
  input user_clk;

  wire power_down;
  wire power_down_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(power_down),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(power_down_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_3
   (fsm_resetdone_sync,
    stg3_reg_0,
    user_clk);
  output fsm_resetdone_sync;
  input stg3_reg_0;
  input user_clk;

  wire fsm_resetdone_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3_reg_0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync_4
   (reset,
    SR,
    \s_axi_rdata_reg[0] ,
    ready_det_r_reg,
    RESET,
    init_clk,
    out,
    tx_done,
    Q,
    drprdy_out,
    tx_done_r,
    ready_det__1,
    ready_det_r_reg_0);
  output reset;
  output [0:0]SR;
  output [0:0]\s_axi_rdata_reg[0] ;
  output ready_det_r_reg;
  input RESET;
  input init_clk;
  input [2:0]out;
  input tx_done;
  input Q;
  input drprdy_out;
  input tx_done_r;
  input ready_det__1;
  input ready_det_r_reg_0;

  wire Q;
  wire RESET;
  wire [0:0]SR;
  wire drprdy_out;
  wire init_clk;
  wire [2:0]out;
  wire ready_det__1;
  wire ready_det_r_reg;
  wire ready_det_r_reg_0;
  wire reset;
  wire [0:0]\s_axi_rdata_reg[0] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire tx_done;
  wire tx_done_r;

  LUT5 #(
    .INIT(32'hAAAEAAAA)) 
    \drpaddr_in[9]_i_1 
       (.I0(reset),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[0]),
        .I4(tx_done),
        .O(SR));
  LUT6 #(
    .INIT(64'h3332332000020020)) 
    ready_det_r_i_1
       (.I0(ready_det__1),
        .I1(reset),
        .I2(out[1]),
        .I3(out[2]),
        .I4(out[0]),
        .I5(ready_det_r_reg_0),
        .O(ready_det_r_reg));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    \s_axi_rdata[15]_i_1 
       (.I0(reset),
        .I1(Q),
        .I2(drprdy_out),
        .I3(tx_done_r),
        .I4(tx_done),
        .O(\s_axi_rdata_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(RESET),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(reset),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0
   (FSM_RESETDONE_j_reg,
    out,
    user_clk);
  output FSM_RESETDONE_j_reg;
  input out;
  input user_clk;

  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire user_clk;

  assign FSM_RESETDONE_j_reg = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_10
   (out,
    rxusrclk_out);
  input out;
  input rxusrclk_out;

  wire out;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_27
   (SR,
    user_clk,
    mmcm_not_locked);
  output [0:0]SR;
  input user_clk;
  input mmcm_not_locked;

  wire [0:0]SR;
  wire mmcm_not_locked;
  wire mmcm_not_locked_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire user_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \fabric_pcs_rst_extend_cntr[9]_i_1 
       (.I0(stg3),
        .O(SR));
  LUT1 #(
    .INIT(2'h1)) 
    prmry_in_inferred_i_1
       (.I0(mmcm_not_locked),
        .O(mmcm_not_locked_i));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(mmcm_not_locked_i),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_8
   (out,
    rxusrclk_out);
  input out;
  input rxusrclk_out;

  wire out;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized0_9
   (FSM_RESETDONE_j_reg,
    out,
    user_clk,
    stg3_reg_0);
  output FSM_RESETDONE_j_reg;
  input out;
  input user_clk;
  input stg3_reg_0;

  wire FSM_RESETDONE_j_reg;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;
  wire user_clk;

  LUT2 #(
    .INIT(4'h8)) 
    prmry_in_inferred_i_1__2
       (.I0(stg3),
        .I1(stg3_reg_0),
        .O(FSM_RESETDONE_j_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1
   (E,
    in0,
    init_clk,
    Q,
    \cdr_reset_fsm_cntr_r_reg[7] ,
    \cdr_reset_fsm_cntr_r_reg[4] );
  output [0:0]E;
  input in0;
  input init_clk;
  input [1:0]Q;
  input [1:0]\cdr_reset_fsm_cntr_r_reg[7] ;
  input \cdr_reset_fsm_cntr_r_reg[4] ;

  wire [0:0]E;
  wire [1:0]Q;
  wire \cdr_reset_fsm_cntr_r_reg[4] ;
  wire [1:0]\cdr_reset_fsm_cntr_r_reg[7] ;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_n_0;

  LUT6 #(
    .INIT(64'h0400FFFF0400AAAA)) 
    \cdr_reset_fsm_r[1]_i_2 
       (.I0(Q[1]),
        .I1(\cdr_reset_fsm_cntr_r_reg[7] [1]),
        .I2(\cdr_reset_fsm_cntr_r_reg[4] ),
        .I3(\cdr_reset_fsm_cntr_r_reg[7] [0]),
        .I4(Q[0]),
        .I5(stg5_reg_n_0),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_11
   (rxlossofsync_out_i,
    in0,
    rxusrclk_out,
    blocksync_out_i);
  output rxlossofsync_out_i;
  input in0;
  input rxusrclk_out;
  input blocksync_out_i;

  wire allow_block_sync_propagation_inrxclk;
  wire blocksync_out_i;
  wire in0;
  wire rxlossofsync_out_i;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT2 #(
    .INIT(4'h8)) 
    rxlossofsync_out_q_i_1
       (.I0(allow_block_sync_propagation_inrxclk),
        .I1(blocksync_out_i),
        .O(rxlossofsync_out_i));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(allow_block_sync_propagation_inrxclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_12
   (fsm_resetdone_to_new_gtx_rx_comb,
    in0,
    rxusrclk_out);
  output fsm_resetdone_to_new_gtx_rx_comb;
  input in0;
  input rxusrclk_out;

  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire in0;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_new_gtx_rx_comb),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_13
   (SR,
    in0,
    user_clk);
  output [0:0]SR;
  input in0;
  input user_clk;

  wire [0:0]SR;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(SR),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_14
   (SYSTEM_RESET_reg,
    init_clk);
  input SYSTEM_RESET_reg;
  input init_clk;

  wire SYSTEM_RESET_reg;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(SYSTEM_RESET_reg),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_15
   (fsm_resetdone_to_rxreset_in,
    in0,
    rxusrclk_out);
  output fsm_resetdone_to_rxreset_in;
  input in0;
  input rxusrclk_out;

  wire fsm_resetdone_to_rxreset_in;
  wire in0;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_rxreset_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_16
   (in0,
    \count_for_reset_r_reg[23] ,
    E,
    init_clk,
    valid_btf_detect_dlyd1);
  output in0;
  output \count_for_reset_r_reg[23] ;
  input [0:0]E;
  input init_clk;
  input valid_btf_detect_dlyd1;

  wire [0:0]E;
  wire \count_for_reset_r_reg[23] ;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire valid_btf_detect_dlyd1;

  LUT2 #(
    .INIT(4'hE)) 
    \count_for_reset_r[0]_i_1 
       (.I0(in0),
        .I1(valid_btf_detect_dlyd1),
        .O(\count_for_reset_r_reg[23] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(E),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_18
   (stg1_aurora_64b66b_25p78G_cdc_to_reg_0,
    in0,
    user_clk);
  output stg1_aurora_64b66b_25p78G_cdc_to_reg_0;
  input in0;
  input user_clk;

  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  wire stg1_aurora_64b66b_25p78G_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_19
   (stg5,
    new_gtx_rx_pcsreset_comb_reg,
    user_clk);
  output stg5;
  input [0:0]new_gtx_rx_pcsreset_comb_reg;
  input user_clk;

  wire [0:0]new_gtx_rx_pcsreset_comb_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(new_gtx_rx_pcsreset_comb_reg),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_20
   (stg1_aurora_64b66b_25p78G_cdc_to_reg_0,
    in0,
    rxusrclk_out,
    reset_cbcc_comb_reg);
  output stg1_aurora_64b66b_25p78G_cdc_to_reg_0;
  input in0;
  input rxusrclk_out;
  input reset_cbcc_comb_reg;

  wire fifo_reset_wr_sync3;
  wire in0;
  wire reset_cbcc_comb_reg;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  wire stg1_aurora_64b66b_25p78G_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    prmry_in_inferred_i_1__1
       (.I0(fifo_reset_wr_sync3),
        .I1(reset_cbcc_comb_reg),
        .O(stg1_aurora_64b66b_25p78G_cdc_to_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fifo_reset_wr_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_21
   (cbcc_fifo_reset_rd_clk_reg,
    in0,
    user_clk);
  output cbcc_fifo_reset_rd_clk_reg;
  input in0;
  input user_clk;

  wire cbcc_fifo_reset_rd_clk_reg;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_rd_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(user_clk),
        .D(stg3),
        .Q(cbcc_fifo_reset_rd_clk_reg));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_22
   (cbcc_fifo_reset_wr_clk_reg,
    in0,
    rxusrclk_out);
  output cbcc_fifo_reset_wr_clk_reg;
  input in0;
  input rxusrclk_out;

  wire cbcc_fifo_reset_wr_clk_reg;
  wire in0;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_wr_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(stg3),
        .Q(cbcc_fifo_reset_wr_clk_reg));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_23
   (rd_stg1_reg,
    cbcc_reset_cbstg2_rd_clk_reg,
    reset_cbcc_comb_reg,
    user_clk,
    rd_stg1);
  output rd_stg1_reg;
  output cbcc_reset_cbstg2_rd_clk_reg;
  input reset_cbcc_comb_reg;
  input user_clk;
  input rd_stg1;

  wire cbcc_reset_cbstg2_rd_clk_reg;
  wire rd_stg1;
  wire rd_stg1_reg;
  wire reset_cbcc_comb_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  LUT2 #(
    .INIT(4'hE)) 
    cbcc_reset_cbstg2_rd_clk_i_1
       (.I0(rd_stg1),
        .I1(rd_stg1_reg),
        .O(cbcc_reset_cbstg2_rd_clk_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_cbcc_comb_reg),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(rd_stg1_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized1_26
   (valid_btf_detect_dlyd1_reg,
    in0,
    init_clk);
  output valid_btf_detect_dlyd1_reg;
  input in0;
  input init_clk;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire valid_btf_detect_dlyd1_reg;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/cbcc_gtx0_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(valid_btf_detect_dlyd1_reg));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized2
   (stg1_aurora_64b66b_25p78G_cdc_to_reg_0,
    in0,
    rxusrclk_out);
  output stg1_aurora_64b66b_25p78G_cdc_to_reg_0;
  input in0;
  input rxusrclk_out;

  wire in0;
  wire rxusrclk_out;
  wire stg10_reg_srl7_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  wire stg1_aurora_64b66b_25p78G_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_user_clk/stg10_reg_srl7 " *) 
  SRL16E #(
    .INIT(16'h007F)) 
    stg10_reg_srl7
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(stg3),
        .Q(stg10_reg_srl7_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg11_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg10_reg_srl7_n_0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized3
   (fifo_reset_comb_user_clk_int,
    dbg_srst_assert_reg,
    in0,
    rxusrclk_out,
    fifo_reset_comb_user_clk_int_22q_reg);
  output fifo_reset_comb_user_clk_int;
  output dbg_srst_assert_reg;
  input in0;
  input rxusrclk_out;
  input fifo_reset_comb_user_clk_int_22q_reg;

  wire dbg_srst_assert_reg;
  wire fifo_reset_comb_user_clk_int;
  wire fifo_reset_comb_user_clk_int_22q_reg;
  wire in0;
  wire rxusrclk_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  wire stg20_reg_srl17_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire NLW_stg20_reg_srl17_Q31_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    dbg_srst_assert_i_1
       (.I0(fifo_reset_comb_user_clk_int_22q_reg),
        .I1(fifo_reset_comb_user_clk_int),
        .O(dbg_srst_assert_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_comb_user_clk_in/stg20_reg_srl17 " *) 
  SRLC32E #(
    .INIT(32'h0001FFFF)) 
    stg20_reg_srl17
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(stg3),
        .Q(stg20_reg_srl17_n_0),
        .Q31(NLW_stg20_reg_srl17_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg21_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg20_reg_srl17_n_0),
        .Q(fifo_reset_comb_user_clk_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized4
   (cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg,
    cbc_wr_if_reset_reg,
    fifo_reset_comb_user_clk_int_22q_reg,
    rxusrclk_out,
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd,
    in0,
    stg11_reg);
  output [0:0]cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg;
  output cbc_wr_if_reset_reg;
  input fifo_reset_comb_user_clk_int_22q_reg;
  input rxusrclk_out;
  input cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  input in0;
  input stg11_reg;

  wire cbc_wr_if_reset_reg;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  wire [0:0]cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg;
  wire fifo_reset_comb_user_clk_int_22q_reg;
  wire in0;
  wire rxusrclk_out;
  wire stg11_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg8_reg_srl5_n_0;

  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_wr_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .I1(cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg),
        .I2(in0),
        .I3(stg11_reg),
        .O(cbc_wr_if_reset_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(fifo_reset_comb_user_clk_int_22q_reg),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_wr_clk/stg8_reg_srl5 " *) 
  SRL16E #(
    .INIT(16'h001F)) 
    stg8_reg_srl5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rxusrclk_out),
        .D(stg3),
        .Q(stg8_reg_srl5_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg9_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(stg8_reg_srl5_n_0),
        .Q(cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_rst_sync" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_rst_sync__parameterized5
   (cbcc_fifo_reset_to_fifo_rd_clk,
    cbc_rd_if_reset_reg,
    stg5_reg,
    user_clk,
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd,
    in0);
  output cbcc_fifo_reset_to_fifo_rd_clk;
  output cbc_rd_if_reset_reg;
  input stg5_reg;
  input user_clk;
  input cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  input in0;

  wire cbc_rd_if_reset_reg;
  wire cbcc_fifo_reset_to_fifo_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_25p78G_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg30_reg_srl27_n_0;
  wire stg5_reg;
  wire user_clk;
  wire NLW_stg30_reg_srl27_Q31_UNCONNECTED;

  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_rd_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .I1(cbcc_fifo_reset_to_fifo_rd_clk),
        .I2(in0),
        .I3(stg5_reg),
        .O(cbc_rd_if_reset_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_25p78G_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg5_reg),
        .Q(stg1_aurora_64b66b_25p78G_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_25p78G_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_25p78G_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_rd_clk/stg30_reg_srl27 " *) 
  SRLC32E #(
    .INIT(32'h07FFFFFF)) 
    stg30_reg_srl27
       (.A({1'b1,1'b1,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(stg3),
        .Q(stg30_reg_srl27_n_0),
        .Q31(NLW_stg30_reg_srl27_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg31_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg30_reg_srl27_n_0),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_25p78G_ultrascale_rx_userclk" *) 
module aurora_64b66b_25p78G_aurora_64b66b_25p78G_ultrascale_rx_userclk
   (rxusrclk2_in,
    SR,
    gtwiz_userclk_rx_reset_in_r,
    rxoutclk_out,
    init_clk,
    lopt,
    lopt_1,
    lopt_2);
  output [0:0]rxusrclk2_in;
  output [0:0]SR;
  input gtwiz_userclk_rx_reset_in_r;
  input [0:0]rxoutclk_out;
  input init_clk;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \<const1> ;
  wire [0:0]SR;
  wire \gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_r_i_1_n_0 ;
  wire gtwiz_userclk_rx_active_o;
  wire gtwiz_userclk_rx_active_out;
  wire gtwiz_userclk_rx_active_r;
  wire gtwiz_userclk_rx_reset_in_r;
  wire init_clk;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxusrclk2_in;

  assign \^lopt  = lopt_1;
  assign \^lopt_1  = lopt_2;
  assign lopt = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT \gen_gtwiz_userclk_rx_main.bufg_gt_usrclk_inst 
       (.CE(\^lopt ),
        .CEMASK(1'b0),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(rxoutclk_out),
        .O(rxusrclk2_in));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_out_reg 
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_active_o),
        .Q(gtwiz_userclk_rx_active_out),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_r_i_1 
       (.I0(gtwiz_userclk_rx_reset_in_r),
        .O(\gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_r_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_r_reg 
       (.C(init_clk),
        .CE(1'b1),
        .D(\gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_r_i_1_n_0 ),
        .Q(gtwiz_userclk_rx_active_r),
        .R(1'b0));
  aurora_64b66b_25p78G_aurora_64b66b_25p78G_cdc_sync__parameterized0_28 \gen_gtwiz_userclk_rx_main.rx_active_out_i 
       (.gtwiz_userclk_rx_reset_in_r_reg(rxusrclk2_in),
        .in0(gtwiz_userclk_rx_active_r),
        .out(gtwiz_userclk_rx_active_o));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_1 
       (.I0(gtwiz_userclk_rx_active_out),
        .O(SR));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    rxresetdone_out,
    gtwiz_reset_clk_freerun_in);
  output \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]rxresetdone_out;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]rxresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rxresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_29
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    txresetdone_out,
    gtwiz_reset_clk_freerun_in);
  output \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]txresetdone_out;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [0:0]txresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(txresetdone_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_30
   (gtpowergood_sync,
    out,
    gtwiz_reset_clk_freerun_in);
  output gtpowergood_sync;
  input out;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire gtpowergood_sync;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtpowergood_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_31
   (gtwiz_reset_rx_datapath_dly,
    in0,
    gtwiz_reset_clk_freerun_in);
  output gtwiz_reset_rx_datapath_dly;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_32
   (\FSM_sequential_sm_reset_rx_reg[0] ,
    D,
    in0,
    gtwiz_reset_clk_freerun_in,
    sm_reset_rx_pll_timer_sat,
    sm_reset_rx_pll_timer_clr_reg,
    out,
    gtwiz_reset_rx_datapath_dly,
    p_0_in11_out);
  output \FSM_sequential_sm_reset_rx_reg[0] ;
  output [1:0]D;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input sm_reset_rx_pll_timer_sat;
  input sm_reset_rx_pll_timer_clr_reg;
  input [2:0]out;
  input gtwiz_reset_rx_datapath_dly;
  input p_0_in11_out;

  wire [1:0]D;
  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_datapath_dly;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire [2:0]out;
  wire p_0_in11_out;
  wire sm_reset_rx_pll_timer_clr_reg;
  wire sm_reset_rx_pll_timer_sat;

  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h0303BFBC)) 
    \FSM_sequential_sm_reset_rx[0]_i_1 
       (.I0(p_0_in11_out),
        .I1(out[1]),
        .I2(out[2]),
        .I3(gtwiz_reset_rx_pll_and_datapath_dly),
        .I4(out[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00F3FF11)) 
    \FSM_sequential_sm_reset_rx[1]_i_1 
       (.I0(gtwiz_reset_rx_pll_and_datapath_dly),
        .I1(out[2]),
        .I2(p_0_in11_out),
        .I3(out[0]),
        .I4(out[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h2F2F2F20)) 
    \FSM_sequential_sm_reset_rx[2]_i_5 
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(sm_reset_rx_pll_timer_clr_reg),
        .I2(out[0]),
        .I3(gtwiz_reset_rx_pll_and_datapath_dly),
        .I4(gtwiz_reset_rx_datapath_dly),
        .O(\FSM_sequential_sm_reset_rx_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_33
   (gtwiz_reset_tx_datapath_dly,
    in0,
    gtwiz_reset_clk_freerun_in);
  output gtwiz_reset_tx_datapath_dly;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_tx_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_34
   (\FSM_sequential_sm_reset_tx_reg[0] ,
    D,
    in0,
    gtwiz_reset_clk_freerun_in,
    sm_reset_tx_pll_timer_sat,
    sm_reset_tx_pll_timer_clr_reg,
    out,
    gtwiz_reset_tx_datapath_dly);
  output \FSM_sequential_sm_reset_tx_reg[0] ;
  output [1:0]D;
  input in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input sm_reset_tx_pll_timer_sat;
  input sm_reset_tx_pll_timer_clr_reg;
  input [2:0]out;
  input gtwiz_reset_tx_datapath_dly;

  wire [1:0]D;
  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_tx_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire [2:0]out;
  wire sm_reset_tx_pll_timer_clr_reg;
  wire sm_reset_tx_pll_timer_sat;

  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h5756)) 
    \FSM_sequential_sm_reset_tx[0]_i_1 
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[1]),
        .I3(gtwiz_reset_tx_pll_and_datapath_dly),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h03F1)) 
    \FSM_sequential_sm_reset_tx[1]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(out[2]),
        .I2(out[0]),
        .I3(out[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h2F2F2F20)) 
    \FSM_sequential_sm_reset_tx[2]_i_6 
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx_pll_timer_clr_reg),
        .I2(out[0]),
        .I3(gtwiz_reset_tx_pll_and_datapath_dly),
        .I4(gtwiz_reset_tx_datapath_dly),
        .O(\FSM_sequential_sm_reset_tx_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_35
   (rxuserrdy_out_reg,
    sm_reset_rx_timer_clr_reg,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gtye4.rxuserrdy_int ,
    i_in_out_reg_0,
    sm_reset_rx_timer_clr_reg_0,
    sm_reset_rx_timer_sat,
    p_0_in11_out,
    sm_reset_rx_cdr_to_sat,
    gtwiz_reset_rx_cdr_stable_out,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync );
  output rxuserrdy_out_reg;
  output sm_reset_rx_timer_clr_reg;
  output \FSM_sequential_sm_reset_rx_reg[0] ;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gtye4.rxuserrdy_int ;
  input i_in_out_reg_0;
  input sm_reset_rx_timer_clr_reg_0;
  input sm_reset_rx_timer_sat;
  input p_0_in11_out;
  input sm_reset_rx_cdr_to_sat;
  input [0:0]gtwiz_reset_rx_cdr_stable_out;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;

  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire gtwiz_reset_userclk_rx_active_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire p_0_in11_out;
  wire rxuserrdy_out_reg;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_timer_clr0;
  wire sm_reset_rx_timer_clr_i_2_n_0;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_clr_reg_0;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h30BB30BB30BB3088)) 
    \FSM_sequential_sm_reset_rx[2]_i_4 
       (.I0(p_0_in11_out),
        .I1(out[1]),
        .I2(sm_reset_rx_timer_clr0),
        .I3(out[0]),
        .I4(sm_reset_rx_cdr_to_sat),
        .I5(gtwiz_reset_rx_cdr_stable_out),
        .O(\FSM_sequential_sm_reset_rx_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_rx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFEDED00000800)) 
    rxuserrdy_out_i_1
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[1]),
        .I3(sm_reset_rx_timer_clr0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gtye4.rxuserrdy_int ),
        .O(rxuserrdy_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h40)) 
    rxuserrdy_out_i_2
       (.I0(sm_reset_rx_timer_clr_reg_0),
        .I1(sm_reset_rx_timer_sat),
        .I2(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr0));
  LUT6 #(
    .INIT(64'hFAAFCCFF0AA0CC0F)) 
    sm_reset_rx_timer_clr_i_1
       (.I0(sm_reset_rx_timer_clr_i_2_n_0),
        .I1(i_in_out_reg_0),
        .I2(out[0]),
        .I3(out[1]),
        .I4(out[2]),
        .I5(sm_reset_rx_timer_clr_reg_0),
        .O(sm_reset_rx_timer_clr_reg));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h0B000800)) 
    sm_reset_rx_timer_clr_i_2
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .I1(out[1]),
        .I2(sm_reset_rx_timer_clr_reg_0),
        .I3(sm_reset_rx_timer_sat),
        .I4(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_36
   (txuserrdy_out_reg,
    sm_reset_tx_timer_clr0,
    sm_reset_tx_timer_clr_reg,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gtye4.txuserrdy_int ,
    i_in_out_reg_0,
    sm_reset_tx_timer_clr_reg_0,
    sm_reset_tx_timer_sat,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    sm_reset_tx_timer_sat_reg);
  output txuserrdy_out_reg;
  output sm_reset_tx_timer_clr0;
  output sm_reset_tx_timer_clr_reg;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gtye4.txuserrdy_int ;
  input i_in_out_reg_0;
  input sm_reset_tx_timer_clr_reg_0;
  input sm_reset_tx_timer_sat;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input sm_reset_tx_timer_sat_reg;

  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_userclk_tx_active_sync;
  wire [0:0]gtwiz_userclk_tx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire sm_reset_tx_timer_clr0;
  wire sm_reset_tx_timer_clr_i_2_n_0;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_clr_reg_0;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_reg;
  wire txuserrdy_out_reg;

  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_5 
       (.I0(sm_reset_tx_timer_clr_reg_0),
        .I1(sm_reset_tx_timer_sat),
        .I2(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_userclk_tx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_tx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFACFFACF0AC00ACF)) 
    sm_reset_tx_timer_clr_i_1
       (.I0(sm_reset_tx_timer_clr_i_2_n_0),
        .I1(i_in_out_reg_0),
        .I2(out[1]),
        .I3(out[2]),
        .I4(out[0]),
        .I5(sm_reset_tx_timer_clr_reg_0),
        .O(sm_reset_tx_timer_clr_reg));
  LUT6 #(
    .INIT(64'hBABF00008A800000)) 
    sm_reset_tx_timer_clr_i_2
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[1]),
        .I4(sm_reset_tx_timer_sat_reg),
        .I5(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFCCF00000008)) 
    txuserrdy_out_i_1
       (.I0(sm_reset_tx_timer_clr0),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[0]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(\gen_gtwizard_gtye4.txuserrdy_int ),
        .O(txuserrdy_out_reg));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_37
   (gtrxreset_out_reg,
    gtrxreset_out_reg_0,
    gtwiz_reset_rx_done_int_reg,
    E,
    sm_reset_rx_timer_clr_reg,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gtye4.gtrxreset_int ,
    p_0_in11_out,
    gtwiz_reset_rx_done_int_reg_0,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    sm_reset_rx_timer_sat,
    sm_reset_rx_timer_clr_reg_0,
    sm_reset_rx_pll_timer_sat_reg);
  output gtrxreset_out_reg;
  output gtrxreset_out_reg_0;
  output gtwiz_reset_rx_done_int_reg;
  output [0:0]E;
  output sm_reset_rx_timer_clr_reg;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gtye4.gtrxreset_int ;
  input p_0_in11_out;
  input gtwiz_reset_rx_done_int_reg_0;
  input \FSM_sequential_sm_reset_rx_reg[1] ;
  input sm_reset_rx_timer_sat;
  input sm_reset_rx_timer_clr_reg_0;
  input sm_reset_rx_pll_timer_sat_reg;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_rx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire gtrxreset_out_reg;
  wire gtrxreset_out_reg_0;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_done_int_reg;
  wire gtwiz_reset_rx_done_int_reg_0;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire p_0_in11_out;
  wire plllock_rx_sync;
  wire sm_reset_rx_pll_timer_sat_reg;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_clr_reg_0;
  wire sm_reset_rx_timer_sat;

  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_rx[2]_i_3 
       (.I0(plllock_rx_sync),
        .I1(out[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(sm_reset_rx_timer_clr_reg_0),
        .I4(out[1]),
        .I5(sm_reset_rx_pll_timer_sat_reg),
        .O(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ));
  MUXF7 \FSM_sequential_sm_reset_rx_reg[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ),
        .I1(\FSM_sequential_sm_reset_rx_reg[1] ),
        .O(E),
        .S(out[2]));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003E)) 
    gtrxreset_out_i_1
       (.I0(gtrxreset_out_reg_0),
        .I1(out[1]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gtye4.gtrxreset_int ),
        .O(gtrxreset_out_reg));
  LUT6 #(
    .INIT(64'hFFFF77FF00800080)) 
    gtwiz_reset_rx_done_int_i_1
       (.I0(out[2]),
        .I1(out[1]),
        .I2(p_0_in11_out),
        .I3(out[0]),
        .I4(plllock_rx_sync),
        .I5(gtwiz_reset_rx_done_int_reg_0),
        .O(gtwiz_reset_rx_done_int_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_rx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    sm_reset_rx_cdr_to_clr_i_3
       (.I0(out[1]),
        .I1(plllock_rx_sync),
        .I2(sm_reset_rx_timer_sat),
        .I3(sm_reset_rx_timer_clr_reg_0),
        .O(gtrxreset_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    sm_reset_rx_timer_clr_i_3
       (.I0(plllock_rx_sync),
        .I1(out[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(sm_reset_rx_timer_clr_reg_0),
        .O(sm_reset_rx_timer_clr_reg));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_38
   (gttxreset_out_reg,
    gtwiz_reset_tx_done_int_reg,
    E,
    sm_reset_tx_timer_clr_reg,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_clk_freerun_in,
    out,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gtye4.gttxreset_int ,
    gtwiz_reset_tx_done_int0,
    gtwiz_reset_tx_done_int_reg_0,
    sm_reset_tx_timer_clr_reg_0,
    sm_reset_tx_timer_sat,
    sm_reset_tx_timer_clr0,
    sm_reset_tx_pll_timer_sat_reg);
  output gttxreset_out_reg;
  output gtwiz_reset_tx_done_int_reg;
  output [0:0]E;
  output sm_reset_tx_timer_clr_reg;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gtye4.gttxreset_int ;
  input gtwiz_reset_tx_done_int0;
  input gtwiz_reset_tx_done_int_reg_0;
  input sm_reset_tx_timer_clr_reg_0;
  input sm_reset_tx_timer_sat;
  input sm_reset_tx_timer_clr0;
  input sm_reset_tx_pll_timer_sat_reg;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_tx[2]_i_3_n_0 ;
  wire \gen_gtwizard_gtye4.gttxreset_int ;
  wire gttxreset_out_reg;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0;
  wire gtwiz_reset_tx_done_int_reg;
  wire gtwiz_reset_tx_done_int_reg_0;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire plllock_tx_sync;
  wire sm_reset_tx_pll_timer_sat_reg;
  wire sm_reset_tx_timer_clr0;
  wire sm_reset_tx_timer_clr012_out;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_clr_reg_0;
  wire sm_reset_tx_timer_sat;

  LUT6 #(
    .INIT(64'h3A0A3A3A3A0A0A0A)) 
    \FSM_sequential_sm_reset_tx[2]_i_1 
       (.I0(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ),
        .I1(out[1]),
        .I2(out[2]),
        .I3(gtwiz_reset_tx_done_int0),
        .I4(out[0]),
        .I5(sm_reset_tx_timer_clr0),
        .O(E));
  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_tx[2]_i_3 
       (.I0(plllock_tx_sync),
        .I1(out[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(sm_reset_tx_timer_clr_reg_0),
        .I4(out[1]),
        .I5(sm_reset_tx_pll_timer_sat_reg),
        .O(\FSM_sequential_sm_reset_tx[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF7F0000003C)) 
    gttxreset_out_i_1
       (.I0(sm_reset_tx_timer_clr012_out),
        .I1(out[1]),
        .I2(out[0]),
        .I3(out[2]),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(\gen_gtwizard_gtye4.gttxreset_int ),
        .O(gttxreset_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h40)) 
    gttxreset_out_i_2
       (.I0(sm_reset_tx_timer_clr_reg_0),
        .I1(sm_reset_tx_timer_sat),
        .I2(plllock_tx_sync),
        .O(sm_reset_tx_timer_clr012_out));
  LUT6 #(
    .INIT(64'hFFCFFFFF00008080)) 
    gtwiz_reset_tx_done_int_i_1
       (.I0(gtwiz_reset_tx_done_int0),
        .I1(out[0]),
        .I2(out[2]),
        .I3(plllock_tx_sync),
        .I4(out[1]),
        .I5(gtwiz_reset_tx_done_int_reg_0),
        .O(gtwiz_reset_tx_done_int_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_tx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    sm_reset_tx_timer_clr_i_3
       (.I0(plllock_tx_sync),
        .I1(out[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(sm_reset_tx_timer_clr_reg_0),
        .O(sm_reset_tx_timer_clr_reg));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_bit_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_39
   (gtwiz_reset_rx_cdr_stable_out,
    sm_reset_rx_cdr_to_clr_reg,
    rxprogdivreset_out_reg,
    rxcdrlock_out,
    gtwiz_reset_clk_freerun_in,
    out,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    sm_reset_rx_cdr_to_clr,
    gtwiz_reset_rx_any_sync,
    \gen_gtwizard_gtye4.rxprogdivreset_int ,
    sm_reset_rx_cdr_to_sat);
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output sm_reset_rx_cdr_to_clr_reg;
  output rxprogdivreset_out_reg;
  input [0:0]rxcdrlock_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input \FSM_sequential_sm_reset_rx_reg[1] ;
  input sm_reset_rx_cdr_to_clr;
  input gtwiz_reset_rx_any_sync;
  input \gen_gtwizard_gtye4.rxprogdivreset_int ;
  input sm_reset_rx_cdr_to_sat;

  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire [2:0]out;
  wire [0:0]rxcdrlock_out;
  wire rxprogdivreset_out_reg;
  wire sm_reset_rx_cdr_to_clr;
  wire sm_reset_rx_cdr_to_clr0;
  wire sm_reset_rx_cdr_to_clr_reg;
  wire sm_reset_rx_cdr_to_sat;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rxcdrlock_out),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_cdr_stable_out),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFF700000330)) 
    rxprogdivreset_out_i_1
       (.I0(sm_reset_rx_cdr_to_clr0),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[0]),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .O(rxprogdivreset_out_reg));
  LUT6 #(
    .INIT(64'hFFFF3FFF02023303)) 
    sm_reset_rx_cdr_to_clr_i_1
       (.I0(sm_reset_rx_cdr_to_clr0),
        .I1(out[1]),
        .I2(out[0]),
        .I3(\FSM_sequential_sm_reset_rx_reg[1] ),
        .I4(out[2]),
        .I5(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_clr_reg));
  LUT2 #(
    .INIT(4'hE)) 
    sm_reset_rx_cdr_to_clr_i_2
       (.I0(sm_reset_rx_cdr_to_sat),
        .I1(gtwiz_reset_rx_cdr_stable_out),
        .O(sm_reset_rx_cdr_to_clr0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_gtwiz_reset" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_gtwiz_reset
   (\gen_gtwizard_gtye4.txprogdivreset_int ,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_rx_done_out,
    \gen_gtwizard_gtye4.txuserrdy_int ,
    \gen_gtwizard_gtye4.rxprogdivreset_int ,
    \gen_gtwizard_gtye4.gtrxreset_int ,
    \gen_gtwizard_gtye4.rxuserrdy_int ,
    \gen_gtwizard_gtye4.gttxreset_ch_int ,
    gtwiz_reset_qpll0reset_out,
    out,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    rxcdrlock_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_datapath_in,
    txusrclk2_in,
    rxusrclk2_in,
    \gen_gtwizard_gtye4.gtpowergood_int ,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in);
  output \gen_gtwizard_gtye4.txprogdivreset_int ;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output \gen_gtwizard_gtye4.txuserrdy_int ;
  output \gen_gtwizard_gtye4.rxprogdivreset_int ;
  output \gen_gtwizard_gtye4.gtrxreset_int ;
  output \gen_gtwizard_gtye4.rxuserrdy_int ;
  output \gen_gtwizard_gtye4.gttxreset_ch_int ;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input out;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]rxcdrlock_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]txusrclk2_in;
  input [0:0]rxusrclk2_in;
  input \gen_gtwizard_gtye4.gtpowergood_int ;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire \/FSM_sequential_sm_reset_all[0]_i_1_n_0 ;
  wire \/FSM_sequential_sm_reset_all[2]_i_2_n_0 ;
  wire \FSM_sequential_sm_reset_all[1]_i_1_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_1_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx[2]_i_2_n_0 ;
  wire \FSM_sequential_sm_reset_tx[2]_i_2_n_0 ;
  wire bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1;
  wire bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_0;
  wire bit_synchronizer_plllock_rx_inst_n_1;
  wire bit_synchronizer_plllock_rx_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_3;
  wire bit_synchronizer_plllock_rx_inst_n_4;
  wire bit_synchronizer_plllock_tx_inst_n_0;
  wire bit_synchronizer_plllock_tx_inst_n_1;
  wire bit_synchronizer_plllock_tx_inst_n_2;
  wire bit_synchronizer_plllock_tx_inst_n_3;
  wire bit_synchronizer_rxcdrlock_inst_n_1;
  wire bit_synchronizer_rxcdrlock_inst_n_2;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.gttxreset_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire gtpowergood_sync;
  wire [0:0]gtwiz_reset_all_in;
  wire gtwiz_reset_all_sync;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_cdr_stable_out;
  wire gtwiz_reset_rx_datapath_dly;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_datapath_sync;
  wire gtwiz_reset_rx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_sync;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_datapath_dly;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire gtwiz_reset_tx_datapath_sync;
  wire gtwiz_reset_tx_done_int0;
  wire gtwiz_reset_tx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire out;
  wire p_0_in;
  wire p_0_in11_out;
  wire [9:0]p_0_in__0;
  wire [9:0]p_0_in__1;
  wire [2:0]p_1_in;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_1;
  wire reset_synchronizer_gtwiz_reset_tx_any_inst_n_1;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxusrclk2_in;
  wire sel;
  (* RTL_KEEP = "yes" *) wire [2:0]sm_reset_all;
  wire sm_reset_all_timer_clr_i_1_n_0;
  wire sm_reset_all_timer_clr_i_2_n_0;
  wire sm_reset_all_timer_clr_reg_n_0;
  wire [2:0]sm_reset_all_timer_ctr;
  wire \sm_reset_all_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_all_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_all_timer_sat;
  wire sm_reset_all_timer_sat_i_1_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]sm_reset_rx;
  wire sm_reset_rx_cdr_to_clr;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_9_n_0 ;
  wire [25:0]sm_reset_rx_cdr_to_ctr_reg;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_cdr_to_sat_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_reg_n_0;
  wire \sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_rx_pll_timer_ctr_reg__0;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_i_1_n_0;
  wire sm_reset_rx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_rx_timer_ctr;
  wire \sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_rx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_rx_timer_sat;
  wire sm_reset_rx_timer_sat_i_1_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]sm_reset_tx;
  wire sm_reset_tx_pll_timer_clr_i_1_n_0;
  wire sm_reset_tx_pll_timer_clr_reg_n_0;
  wire \sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_tx_pll_timer_ctr_reg__0;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_i_1_n_0;
  wire sm_reset_tx_timer_clr0;
  wire sm_reset_tx_timer_clr_i_4_n_0;
  wire sm_reset_tx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_tx_timer_ctr;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_i_1_n_0;
  wire [0:0]txusrclk2_in;
  wire [3:3]\NLW_sm_reset_rx_cdr_to_ctr_reg[0]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_sm_reset_rx_cdr_to_ctr_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_DI_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_S_UNCONNECTED ;
  wire [3:3]\NLW_sm_reset_rx_cdr_to_ctr_reg[8]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h77777777DDDD5DDD)) 
    \/FSM_sequential_sm_reset_all[0]_i_1 
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(gtwiz_reset_rx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[1]),
        .O(\/FSM_sequential_sm_reset_all[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h2C)) 
    \/FSM_sequential_sm_reset_all[2]_i_2 
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .O(\/FSM_sequential_sm_reset_all[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_sm_reset_all[1]_i_1 
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[1]),
        .O(\FSM_sequential_sm_reset_all[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000AAEA)) 
    \FSM_sequential_sm_reset_all[2]_i_1 
       (.I0(sm_reset_all[0]),
        .I1(gtwiz_reset_tx_done_int_reg_n_0),
        .I2(sm_reset_all_timer_sat),
        .I3(sm_reset_all_timer_clr_reg_n_0),
        .I4(sm_reset_all[2]),
        .I5(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ),
        .O(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8888B88833333333)) 
    \FSM_sequential_sm_reset_all[2]_i_3 
       (.I0(gtpowergood_sync),
        .I1(sm_reset_all[1]),
        .I2(gtwiz_reset_rx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[0]),
        .O(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_INIT:111,ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_WAIT:101,iSTATE:110" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ),
        .D(\/FSM_sequential_sm_reset_all[0]_i_1_n_0 ),
        .Q(sm_reset_all[0]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_INIT:111,ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_WAIT:101,iSTATE:110" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ),
        .D(\FSM_sequential_sm_reset_all[1]_i_1_n_0 ),
        .Q(sm_reset_all[1]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_INIT:111,ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_WAIT:101,iSTATE:110" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\FSM_sequential_sm_reset_all[2]_i_1_n_0 ),
        .D(\/FSM_sequential_sm_reset_all[2]_i_2_n_0 ),
        .Q(sm_reset_all[2]),
        .R(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_rx[1]_i_2 
       (.I0(sm_reset_rx_timer_clr_reg_n_0),
        .I1(sm_reset_rx_timer_sat),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .O(p_0_in11_out));
  LUT6 #(
    .INIT(64'hCCCCECCCAAAAAAAA)) 
    \FSM_sequential_sm_reset_rx[2]_i_2 
       (.I0(sm_reset_rx[2]),
        .I1(sm_reset_rx[0]),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .I5(sm_reset_rx[1]),
        .O(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_BRANCH:000,ST_RESET_RX_PLL:001,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_IDLE:111" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_rx_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_3),
        .D(bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2),
        .Q(sm_reset_rx[0]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_BRANCH:000,ST_RESET_RX_PLL:001,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_IDLE:111" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_rx_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_3),
        .D(bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_1),
        .Q(sm_reset_rx[1]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_BRANCH:000,ST_RESET_RX_PLL:001,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_IDLE:111" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_rx_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_plllock_rx_inst_n_3),
        .D(\FSM_sequential_sm_reset_rx[2]_i_2_n_0 ),
        .Q(sm_reset_rx[2]),
        .R(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h38)) 
    \FSM_sequential_sm_reset_tx[2]_i_2 
       (.I0(sm_reset_tx[0]),
        .I1(sm_reset_tx[1]),
        .I2(sm_reset_tx[2]),
        .O(\FSM_sequential_sm_reset_tx[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_4 
       (.I0(sm_reset_tx_timer_clr_reg_n_0),
        .I1(sm_reset_tx_timer_sat),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .O(gtwiz_reset_tx_done_int0));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_PLL:001,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_tx_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_2),
        .D(bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_2),
        .Q(sm_reset_tx[0]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_PLL:001,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_tx_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_2),
        .D(bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_1),
        .Q(sm_reset_tx[1]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_PLL:001,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110" *) 
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_sm_reset_tx_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(bit_synchronizer_plllock_tx_inst_n_2),
        .D(\FSM_sequential_sm_reset_tx[2]_i_2_n_0 ),
        .Q(sm_reset_tx[2]),
        .R(gtwiz_reset_tx_any_sync));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_30 bit_synchronizer_gtpowergood_inst
       (.gtpowergood_sync(gtpowergood_sync),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .out(out));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_31 bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .in0(gtwiz_reset_rx_datapath_sync));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_32 bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst
       (.D({bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_1,bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_2}),
        .\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_0),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_datapath_dly(gtwiz_reset_rx_datapath_dly),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .out(sm_reset_rx),
        .p_0_in11_out(p_0_in11_out),
        .sm_reset_rx_pll_timer_clr_reg(sm_reset_rx_pll_timer_clr_reg_n_0),
        .sm_reset_rx_pll_timer_sat(sm_reset_rx_pll_timer_sat));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_33 bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .in0(gtwiz_reset_tx_datapath_sync));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_34 bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst
       (.D({bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_1,bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_2}),
        .\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_datapath_dly(gtwiz_reset_tx_datapath_dly),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .out(sm_reset_tx),
        .sm_reset_tx_pll_timer_clr_reg(sm_reset_tx_pll_timer_clr_reg_n_0),
        .sm_reset_tx_pll_timer_sat(sm_reset_tx_pll_timer_sat));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_35 bit_synchronizer_gtwiz_reset_userclk_rx_active_inst
       (.\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gtye4.rxuserrdy_int (\gen_gtwizard_gtye4.rxuserrdy_int ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .i_in_out_reg_0(bit_synchronizer_plllock_rx_inst_n_4),
        .out(sm_reset_rx),
        .p_0_in11_out(p_0_in11_out),
        .rxuserrdy_out_reg(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat),
        .sm_reset_rx_timer_clr_reg(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1),
        .sm_reset_rx_timer_clr_reg_0(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_36 bit_synchronizer_gtwiz_reset_userclk_tx_active_inst
       (.\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .\gen_gtwizard_gtye4.txuserrdy_int (\gen_gtwizard_gtye4.txuserrdy_int ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .i_in_out_reg_0(bit_synchronizer_plllock_tx_inst_n_3),
        .out(sm_reset_tx),
        .sm_reset_tx_timer_clr0(sm_reset_tx_timer_clr0),
        .sm_reset_tx_timer_clr_reg(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .sm_reset_tx_timer_clr_reg_0(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat),
        .sm_reset_tx_timer_sat_reg(sm_reset_tx_timer_clr_i_4_n_0),
        .txuserrdy_out_reg(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_37 bit_synchronizer_plllock_rx_inst
       (.E(bit_synchronizer_plllock_rx_inst_n_3),
        .\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_2),
        .\gen_gtwizard_gtye4.gtrxreset_int (\gen_gtwizard_gtye4.gtrxreset_int ),
        .gtrxreset_out_reg(bit_synchronizer_plllock_rx_inst_n_0),
        .gtrxreset_out_reg_0(bit_synchronizer_plllock_rx_inst_n_1),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_done_int_reg(bit_synchronizer_plllock_rx_inst_n_2),
        .gtwiz_reset_rx_done_int_reg_0(gtwiz_reset_rx_done_int_reg_n_0),
        .out(sm_reset_rx),
        .p_0_in11_out(p_0_in11_out),
        .sm_reset_rx_pll_timer_sat_reg(bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst_n_0),
        .sm_reset_rx_timer_clr_reg(bit_synchronizer_plllock_rx_inst_n_4),
        .sm_reset_rx_timer_clr_reg_0(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_38 bit_synchronizer_plllock_tx_inst
       (.E(bit_synchronizer_plllock_tx_inst_n_2),
        .\gen_gtwizard_gtye4.gttxreset_int (\gen_gtwizard_gtye4.gttxreset_int ),
        .gttxreset_out_reg(bit_synchronizer_plllock_tx_inst_n_0),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0(gtwiz_reset_tx_done_int0),
        .gtwiz_reset_tx_done_int_reg(bit_synchronizer_plllock_tx_inst_n_1),
        .gtwiz_reset_tx_done_int_reg_0(gtwiz_reset_tx_done_int_reg_n_0),
        .out(sm_reset_tx),
        .sm_reset_tx_pll_timer_sat_reg(bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst_n_0),
        .sm_reset_tx_timer_clr0(sm_reset_tx_timer_clr0),
        .sm_reset_tx_timer_clr_reg(bit_synchronizer_plllock_tx_inst_n_3),
        .sm_reset_tx_timer_clr_reg_0(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_bit_synchronizer_39 bit_synchronizer_rxcdrlock_inst
       (.\FSM_sequential_sm_reset_rx_reg[1] (bit_synchronizer_plllock_rx_inst_n_1),
        .\gen_gtwizard_gtye4.rxprogdivreset_int (\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_cdr_stable_out(gtwiz_reset_rx_cdr_stable_out),
        .out(sm_reset_rx),
        .rxcdrlock_out(rxcdrlock_out),
        .rxprogdivreset_out_reg(bit_synchronizer_rxcdrlock_inst_n_2),
        .sm_reset_rx_cdr_to_clr(sm_reset_rx_cdr_to_clr),
        .sm_reset_rx_cdr_to_clr_reg(bit_synchronizer_rxcdrlock_inst_n_1),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat));
  FDRE #(
    .INIT(1'b1)) 
    gtrxreset_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_0),
        .Q(\gen_gtwizard_gtye4.gtrxreset_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    gttxreset_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_0),
        .Q(\gen_gtwizard_gtye4.gttxreset_int ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \gtwiz_reset_qpll0reset_out[0]_INST_0 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(gtwiz_reset_qpll0reset_out));
  LUT4 #(
    .INIT(16'hF720)) 
    gtwiz_reset_rx_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_datapath_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_done_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_2),
        .Q(gtwiz_reset_rx_done_int_reg_n_0),
        .R(gtwiz_reset_rx_any_sync));
  LUT4 #(
    .INIT(16'hF704)) 
    gtwiz_reset_rx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_pll_and_datapath_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_done_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_1),
        .Q(gtwiz_reset_tx_done_int_reg_n_0),
        .R(gtwiz_reset_tx_any_sync));
  LUT4 #(
    .INIT(16'hFD04)) 
    gtwiz_reset_tx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[1]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_pll_and_datapath_int_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gttxreset_int ),
        .I1(out),
        .I2(\gen_gtwizard_gtye4.gtpowergood_int ),
        .O(\gen_gtwizard_gtye4.gttxreset_ch_int ));
  FDRE #(
    .INIT(1'b0)) 
    pllreset_rx_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    pllreset_tx_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .R(1'b0));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer reset_synchronizer_gtwiz_reset_all_inst
       (.SR(gtwiz_reset_all_sync),
        .gtwiz_reset_all_in(gtwiz_reset_all_in),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_40 reset_synchronizer_gtwiz_reset_rx_any_inst
       (.\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_datapath_int_reg(gtwiz_reset_rx_datapath_int_reg_n_0),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_rx_pll_and_datapath_int_reg(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .out(sm_reset_rx),
        .pllreset_rx_out_reg(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_41 reset_synchronizer_gtwiz_reset_rx_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_datapath_int_reg(gtwiz_reset_rx_datapath_int_reg_n_0),
        .in0(gtwiz_reset_rx_datapath_sync));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_42 reset_synchronizer_gtwiz_reset_rx_pll_and_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_rx_pll_and_datapath_int_reg(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_43 reset_synchronizer_gtwiz_reset_tx_any_inst
       (.\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_reset_tx_pll_and_datapath_int_reg(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .out(sm_reset_tx),
        .pllreset_tx_out_reg(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_44 reset_synchronizer_gtwiz_reset_tx_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_datapath_in(gtwiz_reset_tx_datapath_in),
        .in0(gtwiz_reset_tx_datapath_sync));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_45 reset_synchronizer_gtwiz_reset_tx_pll_and_datapath_inst
       (.gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_tx_pll_and_datapath_in(gtwiz_reset_tx_pll_and_datapath_in),
        .gtwiz_reset_tx_pll_and_datapath_int_reg(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_inv_synchronizer reset_synchronizer_rx_done_inst
       (.gtwiz_reset_rx_done_int_reg(gtwiz_reset_rx_done_int_reg_n_0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .rxusrclk2_in(rxusrclk2_in));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_inv_synchronizer_46 reset_synchronizer_tx_done_inst
       (.gtwiz_reset_tx_done_int_reg(gtwiz_reset_tx_done_int_reg_n_0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .txusrclk2_in(txusrclk2_in));
  aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_47 reset_synchronizer_txprogdivreset_inst
       (.\gen_gtwizard_gtye4.txprogdivreset_int (\gen_gtwizard_gtye4.txprogdivreset_int ),
        .gtwiz_reset_clk_freerun_in(gtwiz_reset_clk_freerun_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in));
  FDRE #(
    .INIT(1'b1)) 
    rxprogdivreset_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_2),
        .Q(\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_0),
        .Q(\gen_gtwizard_gtye4.rxuserrdy_int ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFA200A)) 
    sm_reset_all_timer_clr_i_1
       (.I0(sm_reset_all_timer_clr_i_2_n_0),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[0]),
        .I3(sm_reset_all[2]),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_1_n_0));
  LUT6 #(
    .INIT(64'h05050505DD0D0505)) 
    sm_reset_all_timer_clr_i_2
       (.I0(sm_reset_all[1]),
        .I1(gtwiz_reset_tx_done_int_reg_n_0),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_rx_done_int_reg_n_0),
        .I4(sm_reset_all_timer_sat),
        .I5(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_all_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_clr_i_1_n_0),
        .Q(sm_reset_all_timer_clr_reg_n_0),
        .S(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_all_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_all_timer_ctr[0]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .O(\sm_reset_all_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_all_timer_ctr[1]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_all_timer_ctr[2]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .I2(sm_reset_all_timer_ctr[2]),
        .O(\sm_reset_all_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[0]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[1]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[2]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_all_timer_sat_i_1
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_all_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_sat_i_1_n_0),
        .Q(sm_reset_all_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_cdr_to_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_1),
        .Q(sm_reset_rx_cdr_to_clr),
        .S(gtwiz_reset_rx_any_sync));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_1 
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ),
        .I1(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I2(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ),
        .I3(\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ),
        .I4(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ),
        .I5(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_3 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[4]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[1]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[8]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[6]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[15]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[10]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[9]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_5 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[5]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[3]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[0]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[16]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[17]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_6 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[13]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[12]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[11]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[7]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_7 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[18]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[14]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[19]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_8 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[24]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[23]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[25]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[20]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[22]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_9 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[0]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ,\NLW_sm_reset_rx_cdr_to_ctr_reg[0]_i_2_CO_UNCONNECTED [3],\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 }),
        .S({sm_reset_rx_cdr_to_ctr_reg[7:1],\sm_reset_rx_cdr_to_ctr[0]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[10] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[10]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[11] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[11]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[12] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[12]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[13] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[13]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[14] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[14]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[15] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[15]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[16] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[16]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[16]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ,\NLW_sm_reset_rx_cdr_to_ctr_reg[16]_i_1_CO_UNCONNECTED [3],\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[23:16]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[17] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[17]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[18] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[18]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[19] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[19]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[1]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[20] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[20]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[21] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[21]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[22] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[22]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[23] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[23]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[24] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[24]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[24]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED [7:1],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 }),
        .DI({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_DI_UNCONNECTED [7:2],1'b0,1'b0}),
        .O({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED [7:2],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 }),
        .S({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_S_UNCONNECTED [7:2],sm_reset_rx_cdr_to_ctr_reg[25:24]}));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[25] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[25]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[2]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[3] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[3]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[4] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[4]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[5] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[5]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[6] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[6]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[7] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[7]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[8] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[8]),
        .R(sm_reset_rx_cdr_to_clr));
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[8]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ,\NLW_sm_reset_rx_cdr_to_ctr_reg[8]_i_1_CO_UNCONNECTED [3],\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[15:8]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[9] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[9]),
        .R(sm_reset_rx_cdr_to_clr));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_cdr_to_sat_i_1
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .I1(sm_reset_rx_cdr_to_sat),
        .I2(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_cdr_to_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_cdr_to_sat_i_1_n_0),
        .Q(sm_reset_rx_cdr_to_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_rx_pll_timer_clr_i_1
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(sm_reset_rx[0]),
        .I2(sm_reset_rx[1]),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_pll_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .O(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_rx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .I5(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .O(p_0_in__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .O(p_0_in__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .O(p_0_in__1[8]));
  LUT6 #(
    .INIT(64'hFFFFFF7FFFFFFFFF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .I5(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[9]),
        .O(p_0_in__1[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[9]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .I1(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .I2(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .I4(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .I5(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[0]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[0]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[1]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[1]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[2]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[3] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[3]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[3]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[4] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[4]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[4]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[5] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[5]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[5]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[6] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[6]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[6]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[7] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[7]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[7]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[8] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[8]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[8]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[9] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[9]),
        .Q(sm_reset_rx_pll_timer_ctr_reg__0[9]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_pll_timer_sat_i_1
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .I1(sm_reset_rx_pll_timer_sat),
        .I2(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_pll_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_rx_active_inst_n_1),
        .Q(sm_reset_rx_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_rx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .O(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .I2(sm_reset_rx_timer_ctr[2]),
        .O(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[0]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[1]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[2]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_rx_timer_sat_i_1
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_rx_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_timer_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_tx_pll_timer_clr_i_1
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx[0]),
        .I2(sm_reset_tx[1]),
        .I3(sm_reset_tx[2]),
        .I4(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_pll_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .O(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_tx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .I5(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .O(p_0_in__0[8]));
  LUT6 #(
    .INIT(64'hFFFFFF7FFFFFFFFF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .I5(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[9]),
        .O(p_0_in__0[9]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[9]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .I1(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .I2(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .I4(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .I5(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[0]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[1]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[2]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[3] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[3]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[4] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[4]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[5] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[5]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[6] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[6]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[7] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[7]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[8] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[8]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[9] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(sel),
        .D(p_0_in__0[9]),
        .Q(sm_reset_tx_pll_timer_ctr_reg__0[9]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_tx_pll_timer_sat_i_1
       (.I0(sel),
        .I1(sm_reset_tx_pll_timer_sat),
        .I2(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_pll_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_sat),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h2)) 
    sm_reset_tx_timer_clr_i_4
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_clr_i_4_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_timer_clr_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .Q(sm_reset_tx_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_tx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .O(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .I2(sm_reset_tx_timer_ctr[2]),
        .O(p_1_in[2]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[0] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(p_0_in),
        .D(p_1_in[0]),
        .Q(sm_reset_tx_timer_ctr[0]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[1] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(p_0_in),
        .D(p_1_in[1]),
        .Q(sm_reset_tx_timer_ctr[1]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[2] 
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(p_0_in),
        .D(p_1_in[2]),
        .Q(sm_reset_tx_timer_ctr[2]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_tx_timer_sat_i_1
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .I3(sm_reset_tx_timer_sat),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_timer_sat_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(sm_reset_tx_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_timer_sat),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txuserrdy_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0),
        .Q(\gen_gtwizard_gtye4.txuserrdy_int ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_gtye4_channel" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_gtye4_channel
   (bufgtce_out,
    bufgtreset_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitoroutclk_out,
    drprdy_out,
    eyescandataerror_out,
    \gen_gtwizard_gtye4.gtpowergood_int ,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    powerpresent_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxckcaldone_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    rxdata_out,
    dmonitorout_out,
    drpdo_out,
    pcsrsvdout_out,
    pinrsrvdas_out,
    rxctrl0_out,
    rxctrl1_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtcemask_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    rxmonitorout_out,
    bufgtdiv_out,
    \gen_powergood_delay.wait_cnt_reg[0] ,
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] ,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    \gen_gtwizard_gtye4.gtrxreset_int ,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    \gen_gtwizard_gtye4.gttxreset_ch_int ,
    gttxresetsel_in,
    gtyrxn_in,
    gtyrxp_in,
    incpctrl_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    \gen_gtwizard_gtye4.rxprogdivreset_int ,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxtermination_in,
    \gen_gtwizard_gtye4.rxuserrdy_int ,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdccforcestart_in,
    txdccreset_in,
    txdetectrx_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    \gen_powergood_delay.pwr_on_fsm_reg ,
    \gen_gtwizard_gtye4.txpmareset_ch_int ,
    txpolarity_in,
    txprbsforceerr_in,
    \gen_gtwizard_gtye4.txprogdivreset_int ,
    \gen_powergood_delay.pwr_on_fsm_reg_0 ,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    \gen_gtwizard_gtye4.txuserrdy_int ,
    txusrclk_in,
    txusrclk2_in,
    gtwiz_userdata_tx_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    tstin_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txdeemph_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txmargin_in,
    txoutclksel_in,
    TXRATE,
    rxdfecfokfcnum_in,
    rxprbssel_in,
    txprbssel_in,
    rxchbondi_in,
    txdiffctrl_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    rxckcalstart_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in,
    out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [0:0]bufgtce_out;
  output [0:0]bufgtreset_out;
  output [0:0]cpllfbclklost_out;
  output [0:0]cplllock_out;
  output [0:0]cpllrefclklost_out;
  output [0:0]dmonitoroutclk_out;
  output [0:0]drprdy_out;
  output [0:0]eyescandataerror_out;
  output \gen_gtwizard_gtye4.gtpowergood_int ;
  output [0:0]gtrefclkmonitor_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [0:0]pcierategen3_out;
  output [0:0]pcierateidle_out;
  output [0:0]pciesynctxsyncdone_out;
  output [0:0]pcieusergen3rdy_out;
  output [0:0]pcieuserphystatusrst_out;
  output [0:0]pcieuserratestart_out;
  output [0:0]phystatus_out;
  output [0:0]powerpresent_out;
  output [0:0]resetexception_out;
  output [0:0]rxbyteisaligned_out;
  output [0:0]rxbyterealign_out;
  output [0:0]rxcdrlock_out;
  output [0:0]rxcdrphdone_out;
  output [0:0]rxchanbondseq_out;
  output [0:0]rxchanisaligned_out;
  output [0:0]rxchanrealign_out;
  output [0:0]rxckcaldone_out;
  output [0:0]rxcominitdet_out;
  output [0:0]rxcommadet_out;
  output [0:0]rxcomsasdet_out;
  output [0:0]rxcomwakedet_out;
  output [0:0]rxdlysresetdone_out;
  output [0:0]rxelecidle_out;
  output [0:0]rxlfpstresetdet_out;
  output [0:0]rxlfpsu2lpexitdet_out;
  output [0:0]rxlfpsu3wakedet_out;
  output [0:0]rxosintdone_out;
  output [0:0]rxosintstarted_out;
  output [0:0]rxosintstrobedone_out;
  output [0:0]rxosintstrobestarted_out;
  output [0:0]rxoutclk_out;
  output [0:0]rxoutclkfabric_out;
  output [0:0]rxoutclkpcs_out;
  output [0:0]rxphaligndone_out;
  output [0:0]rxphalignerr_out;
  output [0:0]rxpmaresetdone_out;
  output [0:0]rxprbserr_out;
  output [0:0]rxprbslocked_out;
  output [0:0]rxprgdivresetdone_out;
  output [0:0]rxratedone_out;
  output [0:0]rxrecclkout_out;
  output [0:0]rxresetdone_out;
  output [0:0]rxsliderdy_out;
  output [0:0]rxslipdone_out;
  output [0:0]rxslipoutclkrdy_out;
  output [0:0]rxslippmardy_out;
  output [0:0]rxsyncdone_out;
  output [0:0]rxsyncout_out;
  output [0:0]rxvalid_out;
  output [0:0]txcomfinish_out;
  output [0:0]txdccdone_out;
  output [0:0]txdlysresetdone_out;
  output [0:0]txoutclk_out;
  output [0:0]txoutclkfabric_out;
  output [0:0]txoutclkpcs_out;
  output [0:0]txphaligndone_out;
  output [0:0]txphinitdone_out;
  output [0:0]txpmaresetdone_out;
  output [0:0]txprgdivresetdone_out;
  output [0:0]txratedone_out;
  output [0:0]txresetdone_out;
  output [0:0]txsyncdone_out;
  output [0:0]txsyncout_out;
  output [127:0]rxdata_out;
  output [15:0]dmonitorout_out;
  output [15:0]drpdo_out;
  output [15:0]pcsrsvdout_out;
  output [15:0]pinrsrvdas_out;
  output [15:0]rxctrl0_out;
  output [15:0]rxctrl1_out;
  output [1:0]pcierateqpllpd_out;
  output [1:0]pcierateqpllreset_out;
  output [1:0]rxclkcorcnt_out;
  output [1:0]rxdatavalid_out;
  output [1:0]rxheadervalid_out;
  output [1:0]rxstartofseq_out;
  output [1:0]txbufstatus_out;
  output [2:0]bufgtcemask_out;
  output [2:0]bufgtrstmask_out;
  output [2:0]rxbufstatus_out;
  output [2:0]rxstatus_out;
  output [4:0]rxchbondo_out;
  output [5:0]rxheader_out;
  output [7:0]rxctrl2_out;
  output [7:0]rxctrl3_out;
  output [7:0]rxdataextendrsvd_out;
  output [7:0]rxmonitorout_out;
  output [8:0]bufgtdiv_out;
  output \gen_powergood_delay.wait_cnt_reg[0] ;
  output \gen_powergood_delay.intclk_rrst_n_r_reg[0] ;
  input [0:0]cdrstepdir_in;
  input [0:0]cdrstepsq_in;
  input [0:0]cdrstepsx_in;
  input [0:0]cfgreset_in;
  input [0:0]clkrsvd0_in;
  input [0:0]clkrsvd1_in;
  input [0:0]cpllfreqlock_in;
  input [0:0]cplllockdetclk_in;
  input [0:0]cplllocken_in;
  input [0:0]cpllpd_in;
  input [0:0]cpllreset_in;
  input [0:0]dmonfiforeset_in;
  input [0:0]dmonitorclk_in;
  input [0:0]drpclk_in;
  input [0:0]drpen_in;
  input [0:0]drprst_in;
  input [0:0]drpwe_in;
  input [0:0]eyescanreset_in;
  input [0:0]eyescantrigger_in;
  input [0:0]freqos_in;
  input [0:0]gtgrefclk_in;
  input [0:0]gtnorthrefclk0_in;
  input [0:0]gtnorthrefclk1_in;
  input [0:0]gtrefclk0_in;
  input [0:0]gtrefclk1_in;
  input \gen_gtwizard_gtye4.gtrxreset_int ;
  input [0:0]gtrxresetsel_in;
  input [0:0]gtsouthrefclk0_in;
  input [0:0]gtsouthrefclk1_in;
  input \gen_gtwizard_gtye4.gttxreset_ch_int ;
  input [0:0]gttxresetsel_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [0:0]incpctrl_in;
  input [0:0]pcieeqrxeqadaptdone_in;
  input [0:0]pcierstidle_in;
  input [0:0]pciersttxsyncstart_in;
  input [0:0]pcieuserratedone_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0freqlock_in;
  input [0:0]qpll0refclk_in;
  input [0:0]qpll1clk_in;
  input [0:0]qpll1freqlock_in;
  input [0:0]qpll1refclk_in;
  input [0:0]resetovrd_in;
  input [0:0]rx8b10ben_in;
  input [0:0]rxafecfoken_in;
  input [0:0]rxbufreset_in;
  input [0:0]rxcdrfreqreset_in;
  input [0:0]rxcdrhold_in;
  input [0:0]rxcdrovrden_in;
  input [0:0]rxcdrreset_in;
  input [0:0]rxchbonden_in;
  input [0:0]rxchbondmaster_in;
  input [0:0]rxchbondslave_in;
  input [0:0]rxckcalreset_in;
  input [0:0]rxcommadeten_in;
  input [0:0]rxdfeagchold_in;
  input [0:0]rxdfeagcovrden_in;
  input [0:0]rxdfecfokfen_in;
  input [0:0]rxdfecfokfpulse_in;
  input [0:0]rxdfecfokhold_in;
  input [0:0]rxdfecfokovren_in;
  input [0:0]rxdfekhhold_in;
  input [0:0]rxdfekhovrden_in;
  input [0:0]rxdfelfhold_in;
  input [0:0]rxdfelfovrden_in;
  input [0:0]rxdfelpmreset_in;
  input [0:0]rxdfetap10hold_in;
  input [0:0]rxdfetap10ovrden_in;
  input [0:0]rxdfetap11hold_in;
  input [0:0]rxdfetap11ovrden_in;
  input [0:0]rxdfetap12hold_in;
  input [0:0]rxdfetap12ovrden_in;
  input [0:0]rxdfetap13hold_in;
  input [0:0]rxdfetap13ovrden_in;
  input [0:0]rxdfetap14hold_in;
  input [0:0]rxdfetap14ovrden_in;
  input [0:0]rxdfetap15hold_in;
  input [0:0]rxdfetap15ovrden_in;
  input [0:0]rxdfetap2hold_in;
  input [0:0]rxdfetap2ovrden_in;
  input [0:0]rxdfetap3hold_in;
  input [0:0]rxdfetap3ovrden_in;
  input [0:0]rxdfetap4hold_in;
  input [0:0]rxdfetap4ovrden_in;
  input [0:0]rxdfetap5hold_in;
  input [0:0]rxdfetap5ovrden_in;
  input [0:0]rxdfetap6hold_in;
  input [0:0]rxdfetap6ovrden_in;
  input [0:0]rxdfetap7hold_in;
  input [0:0]rxdfetap7ovrden_in;
  input [0:0]rxdfetap8hold_in;
  input [0:0]rxdfetap8ovrden_in;
  input [0:0]rxdfetap9hold_in;
  input [0:0]rxdfetap9ovrden_in;
  input [0:0]rxdfeuthold_in;
  input [0:0]rxdfeutovrden_in;
  input [0:0]rxdfevphold_in;
  input [0:0]rxdfevpovrden_in;
  input [0:0]rxdfexyden_in;
  input [0:0]rxdlybypass_in;
  input [0:0]rxdlyen_in;
  input [0:0]rxdlyovrden_in;
  input [0:0]rxdlysreset_in;
  input [0:0]rxeqtraining_in;
  input [0:0]rxgearboxslip_in;
  input [0:0]rxlatclk_in;
  input [0:0]rxlpmen_in;
  input [0:0]rxlpmgchold_in;
  input [0:0]rxlpmgcovrden_in;
  input [0:0]rxlpmhfhold_in;
  input [0:0]rxlpmhfovrden_in;
  input [0:0]rxlpmlfhold_in;
  input [0:0]rxlpmlfklovrden_in;
  input [0:0]rxlpmoshold_in;
  input [0:0]rxlpmosovrden_in;
  input [0:0]rxmcommaalignen_in;
  input [0:0]rxoobreset_in;
  input [0:0]rxoscalreset_in;
  input [0:0]rxoshold_in;
  input [0:0]rxosovrden_in;
  input [0:0]rxpcommaalignen_in;
  input [0:0]rxpcsreset_in;
  input [0:0]rxphalign_in;
  input [0:0]rxphalignen_in;
  input [0:0]rxphdlypd_in;
  input [0:0]rxphdlyreset_in;
  input [0:0]rxpmareset_in;
  input [0:0]rxpolarity_in;
  input [0:0]rxprbscntreset_in;
  input \gen_gtwizard_gtye4.rxprogdivreset_int ;
  input [0:0]rxratemode_in;
  input [0:0]rxslide_in;
  input [0:0]rxslipoutclk_in;
  input [0:0]rxslippma_in;
  input [0:0]rxsyncallin_in;
  input [0:0]rxsyncin_in;
  input [0:0]rxsyncmode_in;
  input [0:0]rxtermination_in;
  input \gen_gtwizard_gtye4.rxuserrdy_int ;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]sigvalidclk_in;
  input [0:0]tx8b10ben_in;
  input [0:0]txcominit_in;
  input [0:0]txcomsas_in;
  input [0:0]txcomwake_in;
  input [0:0]txdccforcestart_in;
  input [0:0]txdccreset_in;
  input [0:0]txdetectrx_in;
  input [0:0]txdlybypass_in;
  input [0:0]txdlyen_in;
  input [0:0]txdlyhold_in;
  input [0:0]txdlyovrden_in;
  input [0:0]txdlysreset_in;
  input [0:0]txdlyupdown_in;
  input [0:0]txelecidle_in;
  input [0:0]txinhibit_in;
  input [0:0]txlatclk_in;
  input [0:0]txlfpstreset_in;
  input [0:0]txlfpsu2lpexit_in;
  input [0:0]txlfpsu3wake_in;
  input [0:0]txmuxdcdexhold_in;
  input [0:0]txmuxdcdorwren_in;
  input [0:0]txoneszeros_in;
  input [0:0]txpcsreset_in;
  input [0:0]txpdelecidlemode_in;
  input [0:0]txphalign_in;
  input [0:0]txphalignen_in;
  input [0:0]txphdlypd_in;
  input [0:0]txphdlyreset_in;
  input [0:0]txphdlytstclk_in;
  input [0:0]txphinit_in;
  input [0:0]txphovrden_in;
  input [0:0]txpippmen_in;
  input [0:0]txpippmovrden_in;
  input [0:0]txpippmpd_in;
  input [0:0]txpippmsel_in;
  input \gen_powergood_delay.pwr_on_fsm_reg ;
  input \gen_gtwizard_gtye4.txpmareset_ch_int ;
  input [0:0]txpolarity_in;
  input [0:0]txprbsforceerr_in;
  input \gen_gtwizard_gtye4.txprogdivreset_int ;
  input \gen_powergood_delay.pwr_on_fsm_reg_0 ;
  input [0:0]txswing_in;
  input [0:0]txsyncallin_in;
  input [0:0]txsyncin_in;
  input [0:0]txsyncmode_in;
  input \gen_gtwizard_gtye4.txuserrdy_int ;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [63:0]gtwiz_userdata_tx_in;
  input [15:0]drpdi_in;
  input [15:0]gtrsvd_in;
  input [15:0]pcsrsvdin_in;
  input [15:0]txctrl0_in;
  input [15:0]txctrl1_in;
  input [19:0]tstin_in;
  input [1:0]rxelecidlemode_in;
  input [1:0]rxmonitorsel_in;
  input [1:0]rxpd_in;
  input [1:0]rxpllclksel_in;
  input [1:0]rxsysclksel_in;
  input [1:0]txdeemph_in;
  input [1:0]txpd_in;
  input [1:0]txpllclksel_in;
  input [1:0]txsysclksel_in;
  input [2:0]cpllrefclksel_in;
  input [2:0]loopback_in;
  input [2:0]rxchbondlevel_in;
  input [2:0]rxoutclksel_in;
  input [2:0]rxrate_in;
  input [2:0]txmargin_in;
  input [2:0]txoutclksel_in;
  input [2:0]TXRATE;
  input [3:0]rxdfecfokfcnum_in;
  input [3:0]rxprbssel_in;
  input [3:0]txprbssel_in;
  input [4:0]rxchbondi_in;
  input [4:0]txdiffctrl_in;
  input [4:0]txpippmstepsize_in;
  input [4:0]txpostcursor_in;
  input [4:0]txprecursor_in;
  input [5:0]txheader_in;
  input [6:0]rxckcalstart_in;
  input [6:0]txmaincursor_in;
  input [6:0]txsequence_in;
  input [7:0]tx8b10bbypass_in;
  input [7:0]txctrl2_in;
  input [7:0]txdataextendrsvd_in;
  input [9:0]drpaddr_in;
  input out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [2:0]TXRATE;
  wire [0:0]bufgtce_out;
  wire [2:0]bufgtcemask_out;
  wire [8:0]bufgtdiv_out;
  wire [0:0]bufgtreset_out;
  wire [2:0]bufgtrstmask_out;
  wire [0:0]cdrstepdir_in;
  wire [0:0]cdrstepsq_in;
  wire [0:0]cdrstepsx_in;
  wire [0:0]cfgreset_in;
  wire [0:0]clkrsvd0_in;
  wire [0:0]clkrsvd1_in;
  wire [0:0]cpllfbclklost_out;
  wire [0:0]cpllfreqlock_in;
  wire [0:0]cplllock_out;
  wire [0:0]cplllockdetclk_in;
  wire [0:0]cplllocken_in;
  wire [0:0]cpllpd_in;
  wire [0:0]cpllrefclklost_out;
  wire [2:0]cpllrefclksel_in;
  wire [0:0]cpllreset_in;
  wire [0:0]dmonfiforeset_in;
  wire [0:0]dmonitorclk_in;
  wire [15:0]dmonitorout_out;
  wire [0:0]dmonitoroutclk_out;
  wire [9:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [15:0]drpdi_in;
  wire [15:0]drpdo_out;
  wire [0:0]drpen_in;
  wire [0:0]drprdy_out;
  wire [0:0]drprst_in;
  wire [0:0]drpwe_in;
  wire [0:0]eyescandataerror_out;
  wire [0:0]eyescanreset_in;
  wire [0:0]eyescantrigger_in;
  wire [0:0]freqos_in;
  wire \gen_gtwizard_gtye4.gtpowergood_int ;
  wire \gen_gtwizard_gtye4.gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire \gen_gtwizard_gtye4.rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.txpmareset_ch_int ;
  wire \gen_gtwizard_gtye4.txprogdivreset_int ;
  wire \gen_gtwizard_gtye4.txuserrdy_int ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[0] ;
  wire \gen_powergood_delay.pwr_on_fsm_reg ;
  wire \gen_powergood_delay.pwr_on_fsm_reg_0 ;
  wire \gen_powergood_delay.wait_cnt_reg[0] ;
  wire [0:0]gtgrefclk_in;
  wire [0:0]gtnorthrefclk0_in;
  wire [0:0]gtnorthrefclk1_in;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtrefclk1_in;
  wire [0:0]gtrefclkmonitor_out;
  wire [15:0]gtrsvd_in;
  wire [0:0]gtrxresetsel_in;
  wire [0:0]gtsouthrefclk0_in;
  wire [0:0]gtsouthrefclk1_in;
  wire [0:0]gttxresetsel_in;
  wire [63:0]gtwiz_userdata_tx_in;
  wire [0:0]gtyrxn_in;
  wire [0:0]gtyrxp_in;
  wire [0:0]gtytxn_out;
  wire [0:0]gtytxp_out;
  wire [0:0]incpctrl_in;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire out;
  wire [0:0]pcieeqrxeqadaptdone_in;
  wire [0:0]pcierategen3_out;
  wire [0:0]pcierateidle_out;
  wire [1:0]pcierateqpllpd_out;
  wire [1:0]pcierateqpllreset_out;
  wire [0:0]pcierstidle_in;
  wire [0:0]pciersttxsyncstart_in;
  wire [0:0]pciesynctxsyncdone_out;
  wire [0:0]pcieusergen3rdy_out;
  wire [0:0]pcieuserphystatusrst_out;
  wire [0:0]pcieuserratedone_in;
  wire [0:0]pcieuserratestart_out;
  wire [15:0]pcsrsvdin_in;
  wire [15:0]pcsrsvdout_out;
  wire [0:0]phystatus_out;
  wire [15:0]pinrsrvdas_out;
  wire [0:0]powerpresent_out;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0freqlock_in;
  wire [0:0]qpll0refclk_in;
  wire [0:0]qpll1clk_in;
  wire [0:0]qpll1freqlock_in;
  wire [0:0]qpll1refclk_in;
  wire [0:0]resetexception_out;
  wire [0:0]resetovrd_in;
  wire [0:0]rx8b10ben_in;
  wire [0:0]rxafecfoken_in;
  wire [0:0]rxbufreset_in;
  wire [2:0]rxbufstatus_out;
  wire [0:0]rxbyteisaligned_out;
  wire [0:0]rxbyterealign_out;
  wire [0:0]rxcdrfreqreset_in;
  wire [0:0]rxcdrhold_in;
  wire [0:0]rxcdrlock_out;
  wire [0:0]rxcdrovrden_in;
  wire [0:0]rxcdrphdone_out;
  wire [0:0]rxcdrreset_in;
  wire [0:0]rxchanbondseq_out;
  wire [0:0]rxchanisaligned_out;
  wire [0:0]rxchanrealign_out;
  wire [0:0]rxchbonden_in;
  wire [4:0]rxchbondi_in;
  wire [2:0]rxchbondlevel_in;
  wire [0:0]rxchbondmaster_in;
  wire [4:0]rxchbondo_out;
  wire [0:0]rxchbondslave_in;
  wire [0:0]rxckcaldone_out;
  wire [0:0]rxckcalreset_in;
  wire [6:0]rxckcalstart_in;
  wire [1:0]rxclkcorcnt_out;
  wire [0:0]rxcominitdet_out;
  wire [0:0]rxcommadet_out;
  wire [0:0]rxcommadeten_in;
  wire [0:0]rxcomsasdet_out;
  wire [0:0]rxcomwakedet_out;
  wire [15:0]rxctrl0_out;
  wire [15:0]rxctrl1_out;
  wire [7:0]rxctrl2_out;
  wire [7:0]rxctrl3_out;
  wire [127:0]rxdata_out;
  wire [7:0]rxdataextendrsvd_out;
  wire [1:0]rxdatavalid_out;
  wire [0:0]rxdfeagchold_in;
  wire [0:0]rxdfeagcovrden_in;
  wire [3:0]rxdfecfokfcnum_in;
  wire [0:0]rxdfecfokfen_in;
  wire [0:0]rxdfecfokfpulse_in;
  wire [0:0]rxdfecfokhold_in;
  wire [0:0]rxdfecfokovren_in;
  wire [0:0]rxdfekhhold_in;
  wire [0:0]rxdfekhovrden_in;
  wire [0:0]rxdfelfhold_in;
  wire [0:0]rxdfelfovrden_in;
  wire [0:0]rxdfelpmreset_in;
  wire [0:0]rxdfetap10hold_in;
  wire [0:0]rxdfetap10ovrden_in;
  wire [0:0]rxdfetap11hold_in;
  wire [0:0]rxdfetap11ovrden_in;
  wire [0:0]rxdfetap12hold_in;
  wire [0:0]rxdfetap12ovrden_in;
  wire [0:0]rxdfetap13hold_in;
  wire [0:0]rxdfetap13ovrden_in;
  wire [0:0]rxdfetap14hold_in;
  wire [0:0]rxdfetap14ovrden_in;
  wire [0:0]rxdfetap15hold_in;
  wire [0:0]rxdfetap15ovrden_in;
  wire [0:0]rxdfetap2hold_in;
  wire [0:0]rxdfetap2ovrden_in;
  wire [0:0]rxdfetap3hold_in;
  wire [0:0]rxdfetap3ovrden_in;
  wire [0:0]rxdfetap4hold_in;
  wire [0:0]rxdfetap4ovrden_in;
  wire [0:0]rxdfetap5hold_in;
  wire [0:0]rxdfetap5ovrden_in;
  wire [0:0]rxdfetap6hold_in;
  wire [0:0]rxdfetap6ovrden_in;
  wire [0:0]rxdfetap7hold_in;
  wire [0:0]rxdfetap7ovrden_in;
  wire [0:0]rxdfetap8hold_in;
  wire [0:0]rxdfetap8ovrden_in;
  wire [0:0]rxdfetap9hold_in;
  wire [0:0]rxdfetap9ovrden_in;
  wire [0:0]rxdfeuthold_in;
  wire [0:0]rxdfeutovrden_in;
  wire [0:0]rxdfevphold_in;
  wire [0:0]rxdfevpovrden_in;
  wire [0:0]rxdfexyden_in;
  wire [0:0]rxdlybypass_in;
  wire [0:0]rxdlyen_in;
  wire [0:0]rxdlyovrden_in;
  wire [0:0]rxdlysreset_in;
  wire [0:0]rxdlysresetdone_out;
  wire [0:0]rxelecidle_out;
  wire [1:0]rxelecidlemode_in;
  wire [0:0]rxeqtraining_in;
  wire [0:0]rxgearboxslip_in;
  wire [5:0]rxheader_out;
  wire [1:0]rxheadervalid_out;
  wire [0:0]rxlatclk_in;
  wire [0:0]rxlfpstresetdet_out;
  wire [0:0]rxlfpsu2lpexitdet_out;
  wire [0:0]rxlfpsu3wakedet_out;
  wire [0:0]rxlpmen_in;
  wire [0:0]rxlpmgchold_in;
  wire [0:0]rxlpmgcovrden_in;
  wire [0:0]rxlpmhfhold_in;
  wire [0:0]rxlpmhfovrden_in;
  wire [0:0]rxlpmlfhold_in;
  wire [0:0]rxlpmlfklovrden_in;
  wire [0:0]rxlpmoshold_in;
  wire [0:0]rxlpmosovrden_in;
  wire [0:0]rxmcommaalignen_in;
  wire [7:0]rxmonitorout_out;
  wire [1:0]rxmonitorsel_in;
  wire [0:0]rxoobreset_in;
  wire [0:0]rxoscalreset_in;
  wire [0:0]rxoshold_in;
  wire [0:0]rxosintdone_out;
  wire [0:0]rxosintstarted_out;
  wire [0:0]rxosintstrobedone_out;
  wire [0:0]rxosintstrobestarted_out;
  wire [0:0]rxosovrden_in;
  wire [0:0]rxoutclk_out;
  wire [0:0]rxoutclkfabric_out;
  wire [0:0]rxoutclkpcs_out;
  wire [2:0]rxoutclksel_in;
  wire [0:0]rxpcommaalignen_in;
  wire [0:0]rxpcsreset_in;
  wire [1:0]rxpd_in;
  wire [0:0]rxphalign_in;
  wire [0:0]rxphaligndone_out;
  wire [0:0]rxphalignen_in;
  wire [0:0]rxphalignerr_out;
  wire [0:0]rxphdlypd_in;
  wire [0:0]rxphdlyreset_in;
  wire [1:0]rxpllclksel_in;
  wire [0:0]rxpmareset_in;
  wire [0:0]rxpmaresetdone_out;
  wire [0:0]rxpolarity_in;
  wire [0:0]rxprbscntreset_in;
  wire [0:0]rxprbserr_out;
  wire [0:0]rxprbslocked_out;
  wire [3:0]rxprbssel_in;
  wire [0:0]rxprgdivresetdone_out;
  wire [2:0]rxrate_in;
  wire [0:0]rxratedone_out;
  wire [0:0]rxratemode_in;
  wire [0:0]rxrecclkout_out;
  wire [0:0]rxresetdone_out;
  wire [0:0]rxslide_in;
  wire [0:0]rxsliderdy_out;
  wire [0:0]rxslipdone_out;
  wire [0:0]rxslipoutclk_in;
  wire [0:0]rxslipoutclkrdy_out;
  wire [0:0]rxslippma_in;
  wire [0:0]rxslippmardy_out;
  wire [1:0]rxstartofseq_out;
  wire [2:0]rxstatus_out;
  wire [0:0]rxsyncallin_in;
  wire [0:0]rxsyncdone_out;
  wire [0:0]rxsyncin_in;
  wire [0:0]rxsyncmode_in;
  wire [0:0]rxsyncout_out;
  wire [1:0]rxsysclksel_in;
  wire [0:0]rxtermination_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [0:0]rxvalid_out;
  wire [0:0]sigvalidclk_in;
  wire [19:0]tstin_in;
  wire [7:0]tx8b10bbypass_in;
  wire [0:0]tx8b10ben_in;
  wire [1:0]txbufstatus_out;
  wire [0:0]txcomfinish_out;
  wire [0:0]txcominit_in;
  wire [0:0]txcomsas_in;
  wire [0:0]txcomwake_in;
  wire [15:0]txctrl0_in;
  wire [15:0]txctrl1_in;
  wire [7:0]txctrl2_in;
  wire [7:0]txdataextendrsvd_in;
  wire [0:0]txdccdone_out;
  wire [0:0]txdccforcestart_in;
  wire [0:0]txdccreset_in;
  wire [1:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [4:0]txdiffctrl_in;
  wire [0:0]txdlybypass_in;
  wire [0:0]txdlyen_in;
  wire [0:0]txdlyhold_in;
  wire [0:0]txdlyovrden_in;
  wire [0:0]txdlysreset_in;
  wire [0:0]txdlysresetdone_out;
  wire [0:0]txdlyupdown_in;
  wire [0:0]txelecidle_in;
  wire [5:0]txheader_in;
  wire [0:0]txinhibit_in;
  wire [0:0]txlatclk_in;
  wire [0:0]txlfpstreset_in;
  wire [0:0]txlfpsu2lpexit_in;
  wire [0:0]txlfpsu3wake_in;
  wire [6:0]txmaincursor_in;
  wire [2:0]txmargin_in;
  wire [0:0]txmuxdcdexhold_in;
  wire [0:0]txmuxdcdorwren_in;
  wire [0:0]txoneszeros_in;
  wire [0:0]txoutclk_out;
  wire [0:0]txoutclkfabric_out;
  wire [0:0]txoutclkpcs_out;
  wire [2:0]txoutclksel_in;
  wire [0:0]txpcsreset_in;
  wire [1:0]txpd_in;
  wire [0:0]txpdelecidlemode_in;
  wire [0:0]txphalign_in;
  wire [0:0]txphaligndone_out;
  wire [0:0]txphalignen_in;
  wire [0:0]txphdlypd_in;
  wire [0:0]txphdlyreset_in;
  wire [0:0]txphdlytstclk_in;
  wire [0:0]txphinit_in;
  wire [0:0]txphinitdone_out;
  wire [0:0]txphovrden_in;
  wire [0:0]txpippmen_in;
  wire [0:0]txpippmovrden_in;
  wire [0:0]txpippmpd_in;
  wire [0:0]txpippmsel_in;
  wire [4:0]txpippmstepsize_in;
  wire [1:0]txpllclksel_in;
  wire [0:0]txpmaresetdone_out;
  wire [0:0]txpolarity_in;
  wire [4:0]txpostcursor_in;
  wire [0:0]txprbsforceerr_in;
  wire [3:0]txprbssel_in;
  wire [4:0]txprecursor_in;
  wire [0:0]txprgdivresetdone_out;
  wire [0:0]txratedone_out;
  wire [0:0]txresetdone_out;
  wire [6:0]txsequence_in;
  wire [0:0]txswing_in;
  wire [0:0]txsyncallin_in;
  wire [0:0]txsyncdone_out;
  wire [0:0]txsyncin_in;
  wire [0:0]txsyncmode_in;
  wire [0:0]txsyncout_out;
  wire [1:0]txsysclksel_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;
  wire xlnx_opt_;
  wire xlnx_opt__1;

  assign lopt_2 = xlnx_opt_;
  assign lopt_3 = xlnx_opt__1;
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(lopt),
        .CESYNC(xlnx_opt_),
        .CLK(rxoutclk_out),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__1));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1 
       (.I0(txoutclkpcs_out),
        .I1(out),
        .O(\gen_powergood_delay.wait_cnt_reg[0] ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2 
       (.I0(\gen_gtwizard_gtye4.gtpowergood_int ),
        .O(\gen_powergood_delay.intclk_rrst_n_r_reg[0] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b0),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out),
        .BUFGTCEMASK(bufgtcemask_out),
        .BUFGTDIV(bufgtdiv_out),
        .BUFGTRESET(bufgtreset_out),
        .BUFGTRSTMASK(bufgtrstmask_out),
        .CDRSTEPDIR(cdrstepdir_in),
        .CDRSTEPSQ(cdrstepsq_in),
        .CDRSTEPSX(cdrstepsx_in),
        .CFGRESET(cfgreset_in),
        .CLKRSVD0(clkrsvd0_in),
        .CLKRSVD1(clkrsvd1_in),
        .CPLLFBCLKLOST(cpllfbclklost_out),
        .CPLLFREQLOCK(cpllfreqlock_in),
        .CPLLLOCK(cplllock_out),
        .CPLLLOCKDETCLK(cplllockdetclk_in),
        .CPLLLOCKEN(cplllocken_in),
        .CPLLPD(cpllpd_in),
        .CPLLREFCLKLOST(cpllrefclklost_out),
        .CPLLREFCLKSEL(cpllrefclksel_in),
        .CPLLRESET(cpllreset_in),
        .DMONFIFORESET(dmonfiforeset_in),
        .DMONITORCLK(dmonitorclk_in),
        .DMONITOROUT(dmonitorout_out),
        .DMONITOROUTCLK(dmonitoroutclk_out),
        .DRPADDR(drpaddr_in),
        .DRPCLK(drpclk_in),
        .DRPDI(drpdi_in),
        .DRPDO(drpdo_out),
        .DRPEN(drpen_in),
        .DRPRDY(drprdy_out),
        .DRPRST(drprst_in),
        .DRPWE(drpwe_in),
        .EYESCANDATAERROR(eyescandataerror_out),
        .EYESCANRESET(eyescanreset_in),
        .EYESCANTRIGGER(eyescantrigger_in),
        .FREQOS(freqos_in),
        .GTGREFCLK(gtgrefclk_in),
        .GTNORTHREFCLK0(gtnorthrefclk0_in),
        .GTNORTHREFCLK1(gtnorthrefclk1_in),
        .GTPOWERGOOD(\gen_gtwizard_gtye4.gtpowergood_int ),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(gtrefclk1_in),
        .GTREFCLKMONITOR(gtrefclkmonitor_out),
        .GTRSVD(gtrsvd_in),
        .GTRXRESET(\gen_gtwizard_gtye4.gtrxreset_int ),
        .GTRXRESETSEL(gtrxresetsel_in),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in),
        .GTTXRESET(\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .GTTXRESETSEL(gttxresetsel_in),
        .GTYRXN(gtyrxn_in),
        .GTYRXP(gtyrxp_in),
        .GTYTXN(gtytxn_out),
        .GTYTXP(gtytxp_out),
        .INCPCTRL(incpctrl_in),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in),
        .PCIERATEGEN3(pcierategen3_out),
        .PCIERATEIDLE(pcierateidle_out),
        .PCIERATEQPLLPD(pcierateqpllpd_out),
        .PCIERATEQPLLRESET(pcierateqpllreset_out),
        .PCIERSTIDLE(pcierstidle_in),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out),
        .PCIEUSERRATEDONE(pcieuserratedone_in),
        .PCIEUSERRATESTART(pcieuserratestart_out),
        .PCSRSVDIN(pcsrsvdin_in),
        .PCSRSVDOUT(pcsrsvdout_out),
        .PHYSTATUS(phystatus_out),
        .PINRSRVDAS(pinrsrvdas_out),
        .POWERPRESENT(powerpresent_out),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(qpll0freqlock_in),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(qpll1clk_in),
        .QPLL1FREQLOCK(qpll1freqlock_in),
        .QPLL1REFCLK(qpll1refclk_in),
        .RESETEXCEPTION(resetexception_out),
        .RESETOVRD(resetovrd_in),
        .RX8B10BEN(rx8b10ben_in),
        .RXAFECFOKEN(rxafecfoken_in),
        .RXBUFRESET(rxbufreset_in),
        .RXBUFSTATUS(rxbufstatus_out),
        .RXBYTEISALIGNED(rxbyteisaligned_out),
        .RXBYTEREALIGN(rxbyterealign_out),
        .RXCDRFREQRESET(rxcdrfreqreset_in),
        .RXCDRHOLD(rxcdrhold_in),
        .RXCDRLOCK(rxcdrlock_out),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(rxcdrphdone_out),
        .RXCDRRESET(rxcdrreset_in),
        .RXCHANBONDSEQ(rxchanbondseq_out),
        .RXCHANISALIGNED(rxchanisaligned_out),
        .RXCHANREALIGN(rxchanrealign_out),
        .RXCHBONDEN(rxchbonden_in),
        .RXCHBONDI(rxchbondi_in),
        .RXCHBONDLEVEL(rxchbondlevel_in),
        .RXCHBONDMASTER(rxchbondmaster_in),
        .RXCHBONDO(rxchbondo_out),
        .RXCHBONDSLAVE(rxchbondslave_in),
        .RXCKCALDONE(rxckcaldone_out),
        .RXCKCALRESET(rxckcalreset_in),
        .RXCKCALSTART(rxckcalstart_in),
        .RXCLKCORCNT(rxclkcorcnt_out),
        .RXCOMINITDET(rxcominitdet_out),
        .RXCOMMADET(rxcommadet_out),
        .RXCOMMADETEN(rxcommadeten_in),
        .RXCOMSASDET(rxcomsasdet_out),
        .RXCOMWAKEDET(rxcomwakedet_out),
        .RXCTRL0(rxctrl0_out),
        .RXCTRL1(rxctrl1_out),
        .RXCTRL2(rxctrl2_out),
        .RXCTRL3(rxctrl3_out),
        .RXDATA(rxdata_out),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out),
        .RXDATAVALID(rxdatavalid_out),
        .RXDFEAGCHOLD(rxdfeagchold_in),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in),
        .RXDFECFOKFCNUM(rxdfecfokfcnum_in),
        .RXDFECFOKFEN(rxdfecfokfen_in),
        .RXDFECFOKFPULSE(rxdfecfokfpulse_in),
        .RXDFECFOKHOLD(rxdfecfokhold_in),
        .RXDFECFOKOVREN(rxdfecfokovren_in),
        .RXDFEKHHOLD(rxdfekhhold_in),
        .RXDFEKHOVRDEN(rxdfekhovrden_in),
        .RXDFELFHOLD(rxdfelfhold_in),
        .RXDFELFOVRDEN(rxdfelfovrden_in),
        .RXDFELPMRESET(rxdfelpmreset_in),
        .RXDFETAP10HOLD(rxdfetap10hold_in),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in),
        .RXDFETAP11HOLD(rxdfetap11hold_in),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in),
        .RXDFETAP12HOLD(rxdfetap12hold_in),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in),
        .RXDFETAP13HOLD(rxdfetap13hold_in),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in),
        .RXDFETAP14HOLD(rxdfetap14hold_in),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in),
        .RXDFETAP15HOLD(rxdfetap15hold_in),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in),
        .RXDFETAP2HOLD(rxdfetap2hold_in),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in),
        .RXDFETAP3HOLD(rxdfetap3hold_in),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in),
        .RXDFETAP4HOLD(rxdfetap4hold_in),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in),
        .RXDFETAP5HOLD(rxdfetap5hold_in),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in),
        .RXDFETAP6HOLD(rxdfetap6hold_in),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in),
        .RXDFETAP7HOLD(rxdfetap7hold_in),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in),
        .RXDFETAP8HOLD(rxdfetap8hold_in),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in),
        .RXDFETAP9HOLD(rxdfetap9hold_in),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in),
        .RXDFEUTHOLD(rxdfeuthold_in),
        .RXDFEUTOVRDEN(rxdfeutovrden_in),
        .RXDFEVPHOLD(rxdfevphold_in),
        .RXDFEVPOVRDEN(rxdfevpovrden_in),
        .RXDFEXYDEN(rxdfexyden_in),
        .RXDLYBYPASS(rxdlybypass_in),
        .RXDLYEN(rxdlyen_in),
        .RXDLYOVRDEN(rxdlyovrden_in),
        .RXDLYSRESET(rxdlysreset_in),
        .RXDLYSRESETDONE(rxdlysresetdone_out),
        .RXELECIDLE(rxelecidle_out),
        .RXELECIDLEMODE(rxelecidlemode_in),
        .RXEQTRAINING(rxeqtraining_in),
        .RXGEARBOXSLIP(rxgearboxslip_in),
        .RXHEADER(rxheader_out),
        .RXHEADERVALID(rxheadervalid_out),
        .RXLATCLK(rxlatclk_in),
        .RXLFPSTRESETDET(rxlfpstresetdet_out),
        .RXLFPSU2LPEXITDET(rxlfpsu2lpexitdet_out),
        .RXLFPSU3WAKEDET(rxlfpsu3wakedet_out),
        .RXLPMEN(rxlpmen_in),
        .RXLPMGCHOLD(rxlpmgchold_in),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in),
        .RXLPMHFHOLD(rxlpmhfhold_in),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in),
        .RXLPMLFHOLD(rxlpmlfhold_in),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in),
        .RXLPMOSHOLD(rxlpmoshold_in),
        .RXLPMOSOVRDEN(rxlpmosovrden_in),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in),
        .RXMONITOROUT(rxmonitorout_out),
        .RXMONITORSEL(rxmonitorsel_in),
        .RXOOBRESET(rxoobreset_in),
        .RXOSCALRESET(rxoscalreset_in),
        .RXOSHOLD(rxoshold_in),
        .RXOSINTDONE(rxosintdone_out),
        .RXOSINTSTARTED(rxosintstarted_out),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out),
        .RXOSOVRDEN(rxosovrden_in),
        .RXOUTCLK(rxoutclk_out),
        .RXOUTCLKFABRIC(rxoutclkfabric_out),
        .RXOUTCLKPCS(rxoutclkpcs_out),
        .RXOUTCLKSEL(rxoutclksel_in),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in),
        .RXPCSRESET(rxpcsreset_in),
        .RXPD(rxpd_in),
        .RXPHALIGN(rxphalign_in),
        .RXPHALIGNDONE(rxphaligndone_out),
        .RXPHALIGNEN(rxphalignen_in),
        .RXPHALIGNERR(rxphalignerr_out),
        .RXPHDLYPD(rxphdlypd_in),
        .RXPHDLYRESET(rxphdlyreset_in),
        .RXPLLCLKSEL(rxpllclksel_in),
        .RXPMARESET(rxpmareset_in),
        .RXPMARESETDONE(rxpmaresetdone_out),
        .RXPOLARITY(rxpolarity_in),
        .RXPRBSCNTRESET(rxprbscntreset_in),
        .RXPRBSERR(rxprbserr_out),
        .RXPRBSLOCKED(rxprbslocked_out),
        .RXPRBSSEL(rxprbssel_in),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out),
        .RXPROGDIVRESET(\gen_gtwizard_gtye4.rxprogdivreset_int ),
        .RXRATE(rxrate_in),
        .RXRATEDONE(rxratedone_out),
        .RXRATEMODE(rxratemode_in),
        .RXRECCLKOUT(rxrecclkout_out),
        .RXRESETDONE(rxresetdone_out),
        .RXSLIDE(rxslide_in),
        .RXSLIDERDY(rxsliderdy_out),
        .RXSLIPDONE(rxslipdone_out),
        .RXSLIPOUTCLK(rxslipoutclk_in),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out),
        .RXSLIPPMA(rxslippma_in),
        .RXSLIPPMARDY(rxslippmardy_out),
        .RXSTARTOFSEQ(rxstartofseq_out),
        .RXSTATUS(rxstatus_out),
        .RXSYNCALLIN(rxsyncallin_in),
        .RXSYNCDONE(rxsyncdone_out),
        .RXSYNCIN(rxsyncin_in),
        .RXSYNCMODE(rxsyncmode_in),
        .RXSYNCOUT(rxsyncout_out),
        .RXSYSCLKSEL(rxsysclksel_in),
        .RXTERMINATION(rxtermination_in),
        .RXUSERRDY(\gen_gtwizard_gtye4.rxuserrdy_int ),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(rxvalid_out),
        .SIGVALIDCLK(sigvalidclk_in),
        .TSTIN(tstin_in),
        .TX8B10BBYPASS(tx8b10bbypass_in),
        .TX8B10BEN(tx8b10ben_in),
        .TXBUFSTATUS(txbufstatus_out),
        .TXCOMFINISH(txcomfinish_out),
        .TXCOMINIT(txcominit_in),
        .TXCOMSAS(txcomsas_in),
        .TXCOMWAKE(txcomwake_in),
        .TXCTRL0(txctrl0_in),
        .TXCTRL1(txctrl1_in),
        .TXCTRL2(txctrl2_in),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in}),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in),
        .TXDCCDONE(txdccdone_out),
        .TXDCCFORCESTART(txdccforcestart_in),
        .TXDCCRESET(txdccreset_in),
        .TXDEEMPH(txdeemph_in),
        .TXDETECTRX(txdetectrx_in),
        .TXDIFFCTRL(txdiffctrl_in),
        .TXDLYBYPASS(txdlybypass_in),
        .TXDLYEN(txdlyen_in),
        .TXDLYHOLD(txdlyhold_in),
        .TXDLYOVRDEN(txdlyovrden_in),
        .TXDLYSRESET(txdlysreset_in),
        .TXDLYSRESETDONE(txdlysresetdone_out),
        .TXDLYUPDOWN(txdlyupdown_in),
        .TXELECIDLE(txelecidle_in),
        .TXHEADER(txheader_in),
        .TXINHIBIT(txinhibit_in),
        .TXLATCLK(txlatclk_in),
        .TXLFPSTRESET(txlfpstreset_in),
        .TXLFPSU2LPEXIT(txlfpsu2lpexit_in),
        .TXLFPSU3WAKE(txlfpsu3wake_in),
        .TXMAINCURSOR(txmaincursor_in),
        .TXMARGIN(txmargin_in),
        .TXMUXDCDEXHOLD(txmuxdcdexhold_in),
        .TXMUXDCDORWREN(txmuxdcdorwren_in),
        .TXONESZEROS(txoneszeros_in),
        .TXOUTCLK(txoutclk_out),
        .TXOUTCLKFABRIC(txoutclkfabric_out),
        .TXOUTCLKPCS(txoutclkpcs_out),
        .TXOUTCLKSEL(txoutclksel_in),
        .TXPCSRESET(txpcsreset_in),
        .TXPD(txpd_in),
        .TXPDELECIDLEMODE(txpdelecidlemode_in),
        .TXPHALIGN(txphalign_in),
        .TXPHALIGNDONE(txphaligndone_out),
        .TXPHALIGNEN(txphalignen_in),
        .TXPHDLYPD(txphdlypd_in),
        .TXPHDLYRESET(txphdlyreset_in),
        .TXPHDLYTSTCLK(txphdlytstclk_in),
        .TXPHINIT(txphinit_in),
        .TXPHINITDONE(txphinitdone_out),
        .TXPHOVRDEN(txphovrden_in),
        .TXPIPPMEN(txpippmen_in),
        .TXPIPPMOVRDEN(txpippmovrden_in),
        .TXPIPPMPD(txpippmpd_in),
        .TXPIPPMSEL(txpippmsel_in),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in),
        .TXPISOPD(\gen_powergood_delay.pwr_on_fsm_reg ),
        .TXPLLCLKSEL(txpllclksel_in),
        .TXPMARESET(\gen_gtwizard_gtye4.txpmareset_ch_int ),
        .TXPMARESETDONE(txpmaresetdone_out),
        .TXPOLARITY(txpolarity_in),
        .TXPOSTCURSOR(txpostcursor_in),
        .TXPRBSFORCEERR(txprbsforceerr_in),
        .TXPRBSSEL(txprbssel_in),
        .TXPRECURSOR(txprecursor_in),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out),
        .TXPROGDIVRESET(\gen_gtwizard_gtye4.txprogdivreset_int ),
        .TXRATE(TXRATE),
        .TXRATEDONE(txratedone_out),
        .TXRATEMODE(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .TXRESETDONE(txresetdone_out),
        .TXSEQUENCE(txsequence_in),
        .TXSWING(txswing_in),
        .TXSYNCALLIN(txsyncallin_in),
        .TXSYNCDONE(txsyncdone_out),
        .TXSYNCIN(txsyncin_in),
        .TXSYNCMODE(txsyncmode_in),
        .TXSYNCOUT(txsyncout_out),
        .TXSYSCLKSEL(txsysclksel_in),
        .TXUSERRDY(\gen_gtwizard_gtye4.txuserrdy_int ),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk2_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_gtye4_delay_powergood" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_gtye4_delay_powergood
   (out,
    TXRATE,
    drprdy_out_reg,
    drprdy_out_reg_0,
    \gen_gtwizard_gtye4.txpmareset_ch_int ,
    \gen_powergood_delay.pwr_on_fsm_reg_0 ,
    drpen_in_reg,
    txrate_in,
    txratemode_in,
    txpisopd_in,
    txpmareset_in);
  output out;
  output [2:0]TXRATE;
  output drprdy_out_reg;
  output drprdy_out_reg_0;
  output \gen_gtwizard_gtye4.txpmareset_ch_int ;
  input \gen_powergood_delay.pwr_on_fsm_reg_0 ;
  input drpen_in_reg;
  input [2:0]txrate_in;
  input [0:0]txratemode_in;
  input [0:0]txpisopd_in;
  input [0:0]txpmareset_in;

  wire [2:0]TXRATE;
  wire drpen_in_reg;
  wire drprdy_out_reg;
  wire drprdy_out_reg_0;
  wire \gen_gtwizard_gtye4.txpmareset_ch_int ;
  (* async_reg = "true" *) (* shift_extract = "NO" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  (* RTL_KEEP = "true" *) wire \gen_powergood_delay.pwr_on_fsm ;
  wire \gen_powergood_delay.pwr_on_fsm_i_1_n_0 ;
  wire \gen_powergood_delay.pwr_on_fsm_reg_0 ;
  wire \gen_powergood_delay.wait_cnt[3]_i_1_n_0 ;
  wire [3:3]\gen_powergood_delay.wait_cnt_reg__0 ;
  wire \gen_powergood_delay.wait_cnt_reg_n_0_[0] ;
  wire \gen_powergood_delay.wait_cnt_reg_n_0_[1] ;
  wire \gen_powergood_delay.wait_cnt_reg_n_0_[2] ;
  wire [3:0]p_0_in__2;
  wire [0:0]txpisopd_in;
  wire [0:0]txpmareset_in;
  wire [2:0]txrate_in;
  wire [0:0]txratemode_in;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "NO" *) 
  FDCE \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .CLR(drpen_in_reg),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "NO" *) 
  FDCE \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .CLR(drpen_in_reg),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "NO" *) 
  FDCE \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .CLR(drpen_in_reg),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "NO" *) 
  FDCE \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .CLR(drpen_in_reg),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "NO" *) 
  FDCE \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .CLR(drpen_in_reg),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.pwr_on_fsm_i_1 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt_reg__0 ),
        .O(\gen_powergood_delay.pwr_on_fsm_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .CLR(drpen_in_reg),
        .D(\gen_powergood_delay.pwr_on_fsm_i_1_n_0 ),
        .Q(\gen_powergood_delay.pwr_on_fsm ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[0]_i_1 
       (.I0(\gen_powergood_delay.wait_cnt_reg_n_0_[0] ),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_powergood_delay.wait_cnt[1]_i_1 
       (.I0(\gen_powergood_delay.wait_cnt_reg_n_0_[0] ),
        .I1(\gen_powergood_delay.wait_cnt_reg_n_0_[1] ),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gen_powergood_delay.wait_cnt[2]_i_1 
       (.I0(\gen_powergood_delay.wait_cnt_reg_n_0_[0] ),
        .I1(\gen_powergood_delay.wait_cnt_reg_n_0_[1] ),
        .I2(\gen_powergood_delay.wait_cnt_reg_n_0_[2] ),
        .O(p_0_in__2[2]));
  LUT2 #(
    .INIT(4'hB)) 
    \gen_powergood_delay.wait_cnt[3]_i_1 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .I1(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gen_powergood_delay.wait_cnt[3]_i_2 
       (.I0(\gen_powergood_delay.wait_cnt_reg_n_0_[1] ),
        .I1(\gen_powergood_delay.wait_cnt_reg_n_0_[0] ),
        .I2(\gen_powergood_delay.wait_cnt_reg_n_0_[2] ),
        .I3(\gen_powergood_delay.wait_cnt_reg__0 ),
        .O(p_0_in__2[3]));
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .D(p_0_in__2[0]),
        .Q(\gen_powergood_delay.wait_cnt_reg_n_0_[0] ),
        .R(\gen_powergood_delay.wait_cnt[3]_i_1_n_0 ));
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .D(p_0_in__2[1]),
        .Q(\gen_powergood_delay.wait_cnt_reg_n_0_[1] ),
        .R(\gen_powergood_delay.wait_cnt[3]_i_1_n_0 ));
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .D(p_0_in__2[2]),
        .Q(\gen_powergood_delay.wait_cnt_reg_n_0_[2] ),
        .R(\gen_powergood_delay.wait_cnt[3]_i_1_n_0 ));
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(\gen_powergood_delay.pwr_on_fsm_reg_0 ),
        .CE(1'b1),
        .D(p_0_in__2[3]),
        .Q(\gen_powergood_delay.wait_cnt_reg__0 ),
        .R(\gen_powergood_delay.wait_cnt[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(txpisopd_in),
        .I1(\gen_powergood_delay.pwr_on_fsm ),
        .O(drprdy_out_reg_0));
  LUT2 #(
    .INIT(4'h8)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_3 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .I1(txpmareset_in),
        .O(\gen_gtwizard_gtye4.txpmareset_ch_int ));
  LUT2 #(
    .INIT(4'hB)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_4 
       (.I0(txratemode_in),
        .I1(\gen_powergood_delay.pwr_on_fsm ),
        .O(drprdy_out_reg));
  LUT2 #(
    .INIT(4'h8)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_5 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .I1(txrate_in[2]),
        .O(TXRATE[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_6 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .I1(txrate_in[1]),
        .O(TXRATE[1]));
  LUT2 #(
    .INIT(4'hB)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_7 
       (.I0(txrate_in[0]),
        .I1(\gen_powergood_delay.pwr_on_fsm ),
        .O(TXRATE[0]));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_inv_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_inv_synchronizer
   (gtwiz_reset_rx_done_out,
    rxusrclk2_in,
    gtwiz_reset_rx_done_int_reg);
  output [0:0]gtwiz_reset_rx_done_out;
  input [0:0]rxusrclk2_in;
  input gtwiz_reset_rx_done_int_reg;

  wire gtwiz_reset_rx_done_int_reg;
  wire [0:0]gtwiz_reset_rx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1__0_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]rxusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1__0
       (.I0(gtwiz_reset_rx_done_int_reg),
        .O(rst_in_out_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_rx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_inv_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_inv_synchronizer_46
   (gtwiz_reset_tx_done_out,
    txusrclk2_in,
    gtwiz_reset_tx_done_int_reg);
  output [0:0]gtwiz_reset_tx_done_out;
  input [0:0]txusrclk2_in;
  input gtwiz_reset_tx_done_int_reg;

  wire gtwiz_reset_tx_done_int_reg;
  wire [0:0]gtwiz_reset_tx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]txusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1
       (.I0(gtwiz_reset_tx_done_int_reg),
        .O(rst_in_out_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_tx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer
   (SR,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in);
  output [0:0]SR;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;

  wire [0:0]SR;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_all_in),
        .Q(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_all_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_40
   (gtwiz_reset_rx_any_sync,
    pllreset_rx_out_reg,
    gtwiz_reset_clk_freerun_in,
    out,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ,
    gtwiz_reset_rx_datapath_int_reg,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_int_reg);
  output gtwiz_reset_rx_any_sync;
  output pllreset_rx_out_reg;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  input gtwiz_reset_rx_datapath_int_reg;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input gtwiz_reset_rx_pll_and_datapath_int_reg;

  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_rx_any;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_reg;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg;
  wire [2:0]out;
  wire pllreset_rx_out_reg;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_rx_out_i_1
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[0]),
        .I3(gtwiz_reset_rx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(pllreset_rx_out_reg));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rst_in_meta_i_1__1
       (.I0(gtwiz_reset_rx_datapath_int_reg),
        .I1(gtwiz_reset_rx_datapath_in),
        .I2(gtwiz_reset_rx_pll_and_datapath_in),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg),
        .O(gtwiz_reset_rx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_any),
        .Q(gtwiz_reset_rx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_41
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_datapath_int_reg);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input gtwiz_reset_rx_datapath_int_reg;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_reg;
  wire in0;
  wire rst_in0_2;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__3
       (.I0(gtwiz_reset_rx_datapath_in),
        .I1(gtwiz_reset_rx_datapath_int_reg),
        .O(rst_in0_2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0_2),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0_2),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0_2),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0_2),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0_2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_42
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_rx_pll_and_datapath_int_reg,
    gtwiz_reset_rx_pll_and_datapath_in);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input gtwiz_reset_rx_pll_and_datapath_int_reg;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg;
  wire in0;
  wire p_0_in_1;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__2
       (.I0(gtwiz_reset_rx_pll_and_datapath_int_reg),
        .I1(gtwiz_reset_rx_pll_and_datapath_in),
        .O(p_0_in_1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(p_0_in_1),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(p_0_in_1),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(p_0_in_1),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(p_0_in_1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(p_0_in_1),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_43
   (gtwiz_reset_tx_any_sync,
    pllreset_tx_out_reg,
    gtwiz_reset_clk_freerun_in,
    out,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_pll_and_datapath_int_reg);
  output gtwiz_reset_tx_any_sync;
  output pllreset_tx_out_reg;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [2:0]out;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input gtwiz_reset_tx_pll_and_datapath_int_reg;

  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire gtwiz_reset_tx_any;
  wire gtwiz_reset_tx_any_sync;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg;
  wire [2:0]out;
  wire pllreset_tx_out_reg;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_tx_out_i_1
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[0]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .O(pllreset_tx_out_reg));
  LUT3 #(
    .INIT(8'hFE)) 
    rst_in_meta_i_1
       (.I0(gtwiz_reset_tx_datapath_in),
        .I1(gtwiz_reset_tx_pll_and_datapath_in),
        .I2(gtwiz_reset_tx_pll_and_datapath_int_reg),
        .O(gtwiz_reset_tx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_tx_any),
        .Q(gtwiz_reset_tx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_tx_any),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_44
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_tx_datapath_in);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_tx_datapath_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_tx_datapath_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_45
   (in0,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_tx_pll_and_datapath_int_reg,
    gtwiz_reset_tx_pll_and_datapath_in);
  output in0;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input gtwiz_reset_tx_pll_and_datapath_int_reg;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;

  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg;
  wire in0;
  wire p_1_in_0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__0
       (.I0(gtwiz_reset_tx_pll_and_datapath_int_reg),
        .I1(gtwiz_reset_tx_pll_and_datapath_in),
        .O(p_1_in_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(p_1_in_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(p_1_in_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(p_1_in_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(p_1_in_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(p_1_in_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_1_reset_synchronizer" *) 
module aurora_64b66b_25p78G_gtwizard_ultrascale_v1_7_1_reset_synchronizer_47
   (\gen_gtwizard_gtye4.txprogdivreset_int ,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_qpll0lock_in);
  output \gen_gtwizard_gtye4.txprogdivreset_int ;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_qpll0lock_in;

  wire \gen_gtwizard_gtye4.txprogdivreset_int ;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire rst_in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT1 #(
    .INIT(2'h1)) 
    rst_in_meta_i_1__4
       (.I0(gtwiz_reset_qpll0lock_in),
        .O(rst_in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0),
        .Q(\gen_gtwizard_gtye4.txprogdivreset_int ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(gtwiz_reset_clk_freerun_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "builtin_extdepth" *) 
module aurora_64b66b_25p78G_builtin_extdepth
   (empty,
    full,
    prog_empty,
    prog_full,
    underflow,
    rd_rst_busy,
    overflow,
    wr_rst_busy,
    dout,
    rd_clk,
    rd_en,
    srst,
    wr_clk,
    wr_en,
    din);
  output empty;
  output full;
  output prog_empty;
  output prog_full;
  output underflow;
  output rd_rst_busy;
  output overflow;
  output wr_rst_busy;
  output [71:0]dout;
  input rd_clk;
  input rd_en;
  input srst;
  input wr_clk;
  input wr_en;
  input [71:0]din;

  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  (* async_reg = "true" *) (* msgon = "true" *) wire [1:0]srst_qr;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  aurora_64b66b_25p78G_builtin_prim \gonep.inst_prim 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .underflow(underflow),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[1].inst_extdi_0 
       (.I0(1'b1),
        .O(srst_qr[1]));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[1].inst_extdi_1 
       (.I0(1'b1),
        .O(srst_qr[0]));
endmodule

(* ORIG_REF_NAME = "builtin_prim" *) 
module aurora_64b66b_25p78G_builtin_prim
   (empty,
    full,
    prog_empty,
    prog_full,
    underflow,
    rd_rst_busy,
    overflow,
    wr_rst_busy,
    dout,
    rd_clk,
    rd_en,
    srst,
    wr_clk,
    wr_en,
    din);
  output empty;
  output full;
  output prog_empty;
  output prog_full;
  output underflow;
  output rd_rst_busy;
  output overflow;
  output wr_rst_busy;
  output [71:0]dout;
  input rd_clk;
  input rd_en;
  input srst;
  input wr_clk;
  input wr_en;
  input [71:0]din;

  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire \gf36e2_inst.sngfifo36e2_n_0 ;
  wire \gf36e2_inst.sngfifo36e2_n_1 ;
  wire \gf36e2_inst.sngfifo36e2_n_100 ;
  wire \gf36e2_inst.sngfifo36e2_n_101 ;
  wire \gf36e2_inst.sngfifo36e2_n_102 ;
  wire \gf36e2_inst.sngfifo36e2_n_103 ;
  wire \gf36e2_inst.sngfifo36e2_n_12 ;
  wire \gf36e2_inst.sngfifo36e2_n_13 ;
  wire \gf36e2_inst.sngfifo36e2_n_14 ;
  wire \gf36e2_inst.sngfifo36e2_n_15 ;
  wire \gf36e2_inst.sngfifo36e2_n_16 ;
  wire \gf36e2_inst.sngfifo36e2_n_168 ;
  wire \gf36e2_inst.sngfifo36e2_n_169 ;
  wire \gf36e2_inst.sngfifo36e2_n_17 ;
  wire \gf36e2_inst.sngfifo36e2_n_170 ;
  wire \gf36e2_inst.sngfifo36e2_n_171 ;
  wire \gf36e2_inst.sngfifo36e2_n_172 ;
  wire \gf36e2_inst.sngfifo36e2_n_173 ;
  wire \gf36e2_inst.sngfifo36e2_n_174 ;
  wire \gf36e2_inst.sngfifo36e2_n_175 ;
  wire \gf36e2_inst.sngfifo36e2_n_18 ;
  wire \gf36e2_inst.sngfifo36e2_n_184 ;
  wire \gf36e2_inst.sngfifo36e2_n_185 ;
  wire \gf36e2_inst.sngfifo36e2_n_186 ;
  wire \gf36e2_inst.sngfifo36e2_n_187 ;
  wire \gf36e2_inst.sngfifo36e2_n_188 ;
  wire \gf36e2_inst.sngfifo36e2_n_189 ;
  wire \gf36e2_inst.sngfifo36e2_n_19 ;
  wire \gf36e2_inst.sngfifo36e2_n_190 ;
  wire \gf36e2_inst.sngfifo36e2_n_191 ;
  wire \gf36e2_inst.sngfifo36e2_n_20 ;
  wire \gf36e2_inst.sngfifo36e2_n_21 ;
  wire \gf36e2_inst.sngfifo36e2_n_22 ;
  wire \gf36e2_inst.sngfifo36e2_n_23 ;
  wire \gf36e2_inst.sngfifo36e2_n_24 ;
  wire \gf36e2_inst.sngfifo36e2_n_25 ;
  wire \gf36e2_inst.sngfifo36e2_n_26 ;
  wire \gf36e2_inst.sngfifo36e2_n_27 ;
  wire \gf36e2_inst.sngfifo36e2_n_28 ;
  wire \gf36e2_inst.sngfifo36e2_n_29 ;
  wire \gf36e2_inst.sngfifo36e2_n_30 ;
  wire \gf36e2_inst.sngfifo36e2_n_31 ;
  wire \gf36e2_inst.sngfifo36e2_n_32 ;
  wire \gf36e2_inst.sngfifo36e2_n_33 ;
  wire \gf36e2_inst.sngfifo36e2_n_34 ;
  wire \gf36e2_inst.sngfifo36e2_n_35 ;
  wire \gf36e2_inst.sngfifo36e2_n_36 ;
  wire \gf36e2_inst.sngfifo36e2_n_37 ;
  wire \gf36e2_inst.sngfifo36e2_n_38 ;
  wire \gf36e2_inst.sngfifo36e2_n_39 ;
  wire \gf36e2_inst.sngfifo36e2_n_40 ;
  wire \gf36e2_inst.sngfifo36e2_n_41 ;
  wire \gf36e2_inst.sngfifo36e2_n_42 ;
  wire \gf36e2_inst.sngfifo36e2_n_43 ;
  wire \gf36e2_inst.sngfifo36e2_n_44 ;
  wire \gf36e2_inst.sngfifo36e2_n_45 ;
  wire \gf36e2_inst.sngfifo36e2_n_46 ;
  wire \gf36e2_inst.sngfifo36e2_n_47 ;
  wire \gf36e2_inst.sngfifo36e2_n_48 ;
  wire \gf36e2_inst.sngfifo36e2_n_49 ;
  wire \gf36e2_inst.sngfifo36e2_n_50 ;
  wire \gf36e2_inst.sngfifo36e2_n_51 ;
  wire \gf36e2_inst.sngfifo36e2_n_52 ;
  wire \gf36e2_inst.sngfifo36e2_n_53 ;
  wire \gf36e2_inst.sngfifo36e2_n_54 ;
  wire \gf36e2_inst.sngfifo36e2_n_55 ;
  wire \gf36e2_inst.sngfifo36e2_n_56 ;
  wire \gf36e2_inst.sngfifo36e2_n_57 ;
  wire \gf36e2_inst.sngfifo36e2_n_58 ;
  wire \gf36e2_inst.sngfifo36e2_n_59 ;
  wire \gf36e2_inst.sngfifo36e2_n_60 ;
  wire \gf36e2_inst.sngfifo36e2_n_61 ;
  wire \gf36e2_inst.sngfifo36e2_n_62 ;
  wire \gf36e2_inst.sngfifo36e2_n_63 ;
  wire \gf36e2_inst.sngfifo36e2_n_64 ;
  wire \gf36e2_inst.sngfifo36e2_n_65 ;
  wire \gf36e2_inst.sngfifo36e2_n_66 ;
  wire \gf36e2_inst.sngfifo36e2_n_67 ;
  wire \gf36e2_inst.sngfifo36e2_n_68 ;
  wire \gf36e2_inst.sngfifo36e2_n_69 ;
  wire \gf36e2_inst.sngfifo36e2_n_70 ;
  wire \gf36e2_inst.sngfifo36e2_n_71 ;
  wire \gf36e2_inst.sngfifo36e2_n_72 ;
  wire \gf36e2_inst.sngfifo36e2_n_73 ;
  wire \gf36e2_inst.sngfifo36e2_n_74 ;
  wire \gf36e2_inst.sngfifo36e2_n_75 ;
  wire \gf36e2_inst.sngfifo36e2_n_76 ;
  wire \gf36e2_inst.sngfifo36e2_n_77 ;
  wire \gf36e2_inst.sngfifo36e2_n_78 ;
  wire \gf36e2_inst.sngfifo36e2_n_79 ;
  wire \gf36e2_inst.sngfifo36e2_n_80 ;
  wire \gf36e2_inst.sngfifo36e2_n_81 ;
  wire \gf36e2_inst.sngfifo36e2_n_82 ;
  wire \gf36e2_inst.sngfifo36e2_n_83 ;
  wire \gf36e2_inst.sngfifo36e2_n_84 ;
  wire \gf36e2_inst.sngfifo36e2_n_85 ;
  wire \gf36e2_inst.sngfifo36e2_n_86 ;
  wire \gf36e2_inst.sngfifo36e2_n_87 ;
  wire \gf36e2_inst.sngfifo36e2_n_88 ;
  wire \gf36e2_inst.sngfifo36e2_n_89 ;
  wire \gf36e2_inst.sngfifo36e2_n_90 ;
  wire \gf36e2_inst.sngfifo36e2_n_91 ;
  wire \gf36e2_inst.sngfifo36e2_n_92 ;
  wire \gf36e2_inst.sngfifo36e2_n_93 ;
  wire \gf36e2_inst.sngfifo36e2_n_94 ;
  wire \gf36e2_inst.sngfifo36e2_n_95 ;
  wire \gf36e2_inst.sngfifo36e2_n_96 ;
  wire \gf36e2_inst.sngfifo36e2_n_97 ;
  wire \gf36e2_inst.sngfifo36e2_n_98 ;
  wire \gf36e2_inst.sngfifo36e2_n_99 ;
  wire overflow;
  wire p_4_out;
  wire p_5_out;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FIFO36E2 #(
    .CASCADE_ORDER("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .FIRST_WORD_FALL_THROUGH("FALSE"),
    .INIT(72'h000000000000000000),
    .IS_RDCLK_INVERTED(1'b0),
    .IS_RDEN_INVERTED(1'b0),
    .IS_RSTREG_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .IS_WRCLK_INVERTED(1'b0),
    .IS_WREN_INVERTED(1'b0),
    .PROG_EMPTY_THRESH(8),
    .PROG_FULL_THRESH(450),
    .RDCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .READ_WIDTH(72),
    .REGISTER_MODE("REGISTERED"),
    .RSTREG_PRIORITY("REGCE"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL(72'h000000000000000000),
    .WRCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .WRITE_WIDTH(72)) 
    \gf36e2_inst.sngfifo36e2 
       (.CASDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINP({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUX(1'b0),
        .CASDOMUXEN(1'b1),
        .CASDOUT({\gf36e2_inst.sngfifo36e2_n_40 ,\gf36e2_inst.sngfifo36e2_n_41 ,\gf36e2_inst.sngfifo36e2_n_42 ,\gf36e2_inst.sngfifo36e2_n_43 ,\gf36e2_inst.sngfifo36e2_n_44 ,\gf36e2_inst.sngfifo36e2_n_45 ,\gf36e2_inst.sngfifo36e2_n_46 ,\gf36e2_inst.sngfifo36e2_n_47 ,\gf36e2_inst.sngfifo36e2_n_48 ,\gf36e2_inst.sngfifo36e2_n_49 ,\gf36e2_inst.sngfifo36e2_n_50 ,\gf36e2_inst.sngfifo36e2_n_51 ,\gf36e2_inst.sngfifo36e2_n_52 ,\gf36e2_inst.sngfifo36e2_n_53 ,\gf36e2_inst.sngfifo36e2_n_54 ,\gf36e2_inst.sngfifo36e2_n_55 ,\gf36e2_inst.sngfifo36e2_n_56 ,\gf36e2_inst.sngfifo36e2_n_57 ,\gf36e2_inst.sngfifo36e2_n_58 ,\gf36e2_inst.sngfifo36e2_n_59 ,\gf36e2_inst.sngfifo36e2_n_60 ,\gf36e2_inst.sngfifo36e2_n_61 ,\gf36e2_inst.sngfifo36e2_n_62 ,\gf36e2_inst.sngfifo36e2_n_63 ,\gf36e2_inst.sngfifo36e2_n_64 ,\gf36e2_inst.sngfifo36e2_n_65 ,\gf36e2_inst.sngfifo36e2_n_66 ,\gf36e2_inst.sngfifo36e2_n_67 ,\gf36e2_inst.sngfifo36e2_n_68 ,\gf36e2_inst.sngfifo36e2_n_69 ,\gf36e2_inst.sngfifo36e2_n_70 ,\gf36e2_inst.sngfifo36e2_n_71 ,\gf36e2_inst.sngfifo36e2_n_72 ,\gf36e2_inst.sngfifo36e2_n_73 ,\gf36e2_inst.sngfifo36e2_n_74 ,\gf36e2_inst.sngfifo36e2_n_75 ,\gf36e2_inst.sngfifo36e2_n_76 ,\gf36e2_inst.sngfifo36e2_n_77 ,\gf36e2_inst.sngfifo36e2_n_78 ,\gf36e2_inst.sngfifo36e2_n_79 ,\gf36e2_inst.sngfifo36e2_n_80 ,\gf36e2_inst.sngfifo36e2_n_81 ,\gf36e2_inst.sngfifo36e2_n_82 ,\gf36e2_inst.sngfifo36e2_n_83 ,\gf36e2_inst.sngfifo36e2_n_84 ,\gf36e2_inst.sngfifo36e2_n_85 ,\gf36e2_inst.sngfifo36e2_n_86 ,\gf36e2_inst.sngfifo36e2_n_87 ,\gf36e2_inst.sngfifo36e2_n_88 ,\gf36e2_inst.sngfifo36e2_n_89 ,\gf36e2_inst.sngfifo36e2_n_90 ,\gf36e2_inst.sngfifo36e2_n_91 ,\gf36e2_inst.sngfifo36e2_n_92 ,\gf36e2_inst.sngfifo36e2_n_93 ,\gf36e2_inst.sngfifo36e2_n_94 ,\gf36e2_inst.sngfifo36e2_n_95 ,\gf36e2_inst.sngfifo36e2_n_96 ,\gf36e2_inst.sngfifo36e2_n_97 ,\gf36e2_inst.sngfifo36e2_n_98 ,\gf36e2_inst.sngfifo36e2_n_99 ,\gf36e2_inst.sngfifo36e2_n_100 ,\gf36e2_inst.sngfifo36e2_n_101 ,\gf36e2_inst.sngfifo36e2_n_102 ,\gf36e2_inst.sngfifo36e2_n_103 }),
        .CASDOUTP({\gf36e2_inst.sngfifo36e2_n_168 ,\gf36e2_inst.sngfifo36e2_n_169 ,\gf36e2_inst.sngfifo36e2_n_170 ,\gf36e2_inst.sngfifo36e2_n_171 ,\gf36e2_inst.sngfifo36e2_n_172 ,\gf36e2_inst.sngfifo36e2_n_173 ,\gf36e2_inst.sngfifo36e2_n_174 ,\gf36e2_inst.sngfifo36e2_n_175 }),
        .CASNXTEMPTY(\gf36e2_inst.sngfifo36e2_n_0 ),
        .CASNXTRDEN(1'b0),
        .CASOREGIMUX(1'b0),
        .CASOREGIMUXEN(1'b1),
        .CASPRVEMPTY(1'b0),
        .CASPRVRDEN(\gf36e2_inst.sngfifo36e2_n_1 ),
        .DBITERR(p_4_out),
        .DIN(din[63:0]),
        .DINP(din[71:64]),
        .DOUT(dout[63:0]),
        .DOUTP(dout[71:64]),
        .ECCPARITY({\gf36e2_inst.sngfifo36e2_n_184 ,\gf36e2_inst.sngfifo36e2_n_185 ,\gf36e2_inst.sngfifo36e2_n_186 ,\gf36e2_inst.sngfifo36e2_n_187 ,\gf36e2_inst.sngfifo36e2_n_188 ,\gf36e2_inst.sngfifo36e2_n_189 ,\gf36e2_inst.sngfifo36e2_n_190 ,\gf36e2_inst.sngfifo36e2_n_191 }),
        .EMPTY(empty),
        .FULL(full),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .PROGEMPTY(prog_empty),
        .PROGFULL(prog_full),
        .RDCLK(rd_clk),
        .RDCOUNT({\gf36e2_inst.sngfifo36e2_n_12 ,\gf36e2_inst.sngfifo36e2_n_13 ,\gf36e2_inst.sngfifo36e2_n_14 ,\gf36e2_inst.sngfifo36e2_n_15 ,\gf36e2_inst.sngfifo36e2_n_16 ,\gf36e2_inst.sngfifo36e2_n_17 ,\gf36e2_inst.sngfifo36e2_n_18 ,\gf36e2_inst.sngfifo36e2_n_19 ,\gf36e2_inst.sngfifo36e2_n_20 ,\gf36e2_inst.sngfifo36e2_n_21 ,\gf36e2_inst.sngfifo36e2_n_22 ,\gf36e2_inst.sngfifo36e2_n_23 ,\gf36e2_inst.sngfifo36e2_n_24 ,\gf36e2_inst.sngfifo36e2_n_25 }),
        .RDEN(rd_en),
        .RDERR(underflow),
        .RDRSTBUSY(rd_rst_busy),
        .REGCE(rd_en),
        .RST(srst),
        .RSTREG(srst),
        .SBITERR(p_5_out),
        .SLEEP(1'b0),
        .WRCLK(wr_clk),
        .WRCOUNT({\gf36e2_inst.sngfifo36e2_n_26 ,\gf36e2_inst.sngfifo36e2_n_27 ,\gf36e2_inst.sngfifo36e2_n_28 ,\gf36e2_inst.sngfifo36e2_n_29 ,\gf36e2_inst.sngfifo36e2_n_30 ,\gf36e2_inst.sngfifo36e2_n_31 ,\gf36e2_inst.sngfifo36e2_n_32 ,\gf36e2_inst.sngfifo36e2_n_33 ,\gf36e2_inst.sngfifo36e2_n_34 ,\gf36e2_inst.sngfifo36e2_n_35 ,\gf36e2_inst.sngfifo36e2_n_36 ,\gf36e2_inst.sngfifo36e2_n_37 ,\gf36e2_inst.sngfifo36e2_n_38 ,\gf36e2_inst.sngfifo36e2_n_39 }),
        .WREN(wr_en),
        .WRERR(overflow),
        .WRRSTBUSY(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "builtin_top" *) 
module aurora_64b66b_25p78G_builtin_top
   (empty,
    full,
    prog_empty,
    prog_full,
    underflow,
    rd_rst_busy,
    overflow,
    wr_rst_busy,
    dout,
    rd_clk,
    rd_en,
    srst,
    wr_clk,
    wr_en,
    din);
  output empty;
  output full;
  output prog_empty;
  output prog_full;
  output underflow;
  output rd_rst_busy;
  output overflow;
  output wr_rst_busy;
  output [71:0]dout;
  input rd_clk;
  input rd_en;
  input srst;
  input wr_clk;
  input wr_en;
  input [71:0]din;

  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  aurora_64b66b_25p78G_builtin_extdepth \rst_val_sym.gextw_sym[1].inst_extd 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .underflow(underflow),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module aurora_64b66b_25p78G_fifo_generator_top
   (empty,
    full,
    prog_empty,
    prog_full,
    underflow,
    rd_rst_busy,
    overflow,
    wr_rst_busy,
    dout,
    rd_clk,
    rd_en,
    srst,
    wr_clk,
    wr_en,
    din);
  output empty;
  output full;
  output prog_empty;
  output prog_full;
  output underflow;
  output rd_rst_busy;
  output overflow;
  output wr_rst_busy;
  output [71:0]dout;
  input rd_clk;
  input rd_en;
  input srst;
  input wr_clk;
  input wr_en;
  input [71:0]din;

  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  aurora_64b66b_25p78G_fifo_generator_v13_2_0_builtin \gbi.bi 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .underflow(underflow),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "9" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "72" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "72" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "virtexuplus" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "1" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "1" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "6" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "4" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "2" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x72" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "8" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "9" *) (* C_PROG_EMPTY_TYPE = "1" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) (* C_PROG_FULL_TYPE = "1" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "9" *) 
(* C_RD_DEPTH = "512" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "9" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "1" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "9" *) 
(* C_WR_DEPTH = "512" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "9" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_0" *) 
module aurora_64b66b_25p78G_fifo_generator_v13_2_0
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [71:0]din;
  input wr_en;
  input rd_en;
  input [8:0]prog_empty_thresh;
  input [8:0]prog_empty_thresh_assert;
  input [8:0]prog_empty_thresh_negate;
  input [8:0]prog_full_thresh;
  input [8:0]prog_full_thresh_assert;
  input [8:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [71:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [8:0]data_count;
  output [8:0]rd_data_count;
  output [8:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  aurora_64b66b_25p78G_fifo_generator_v13_2_0_synth inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .underflow(underflow),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_0_builtin" *) 
module aurora_64b66b_25p78G_fifo_generator_v13_2_0_builtin
   (empty,
    full,
    prog_empty,
    prog_full,
    underflow,
    rd_rst_busy,
    overflow,
    wr_rst_busy,
    dout,
    rd_clk,
    rd_en,
    srst,
    wr_clk,
    wr_en,
    din);
  output empty;
  output full;
  output prog_empty;
  output prog_full;
  output underflow;
  output rd_rst_busy;
  output overflow;
  output wr_rst_busy;
  output [71:0]dout;
  input rd_clk;
  input rd_en;
  input srst;
  input wr_clk;
  input wr_en;
  input [71:0]din;

  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  aurora_64b66b_25p78G_builtin_top \v8_fifo.fblk 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .underflow(underflow),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_0_synth" *) 
module aurora_64b66b_25p78G_fifo_generator_v13_2_0_synth
   (empty,
    full,
    prog_empty,
    prog_full,
    underflow,
    rd_rst_busy,
    overflow,
    wr_rst_busy,
    dout,
    rd_clk,
    rd_en,
    srst,
    wr_clk,
    wr_en,
    din);
  output empty;
  output full;
  output prog_empty;
  output prog_full;
  output underflow;
  output rd_rst_busy;
  output overflow;
  output wr_rst_busy;
  output [71:0]dout;
  input rd_clk;
  input rd_en;
  input srst;
  input wr_clk;
  input wr_en;
  input [71:0]din;

  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;

  aurora_64b66b_25p78G_fifo_generator_top \gconvfifo.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .underflow(underflow),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
